from ._constants import TYPE_BOXED as TYPE_BOXED, TYPE_ENUM as TYPE_ENUM, TYPE_FLAGS as TYPE_FLAGS, TYPE_NONE as TYPE_NONE, TYPE_POINTER as TYPE_POINTER
from ._gi import Boxed as Boxed, CCallback as CCallback, CallbackInfo as CallbackInfo, ConstantInfo as ConstantInfo, EnumInfo as EnumInfo, FunctionInfo as FunctionInfo, GInterface as GInterface, InterfaceInfo as InterfaceInfo, ObjectInfo as ObjectInfo, RegisteredTypeInfo as RegisteredTypeInfo, Repository as Repository, Struct as Struct, StructInfo as StructInfo, UnionInfo as UnionInfo, enum_add as enum_add, enum_register_new_gtype_and_add as enum_register_new_gtype_and_add, flags_add as flags_add, flags_register_new_gtype_and_add as flags_register_new_gtype_and_add
from .types import GObjectMeta as GObjectMeta, StructMeta as StructMeta
from _typeshed import Incomplete

repository: Incomplete

def get_parent_for_object(object_info): ...
def get_interfaces_for_object(object_info): ...

class IntrospectionModule:
    __name__: Incomplete
    __path__: Incomplete
    def __init__(self, namespace, version: Incomplete | None = ...) -> None: ...
    def __getattr__(self, name): ...
    def __dir__(self): ...

def get_introspection_module(namespace): ...
