import gi as __gi
import gi._signalhelper as __gi__signalhelper
import gi.overrides as __gi_overrides
import gi.overrides.GLib as __gi_overrides_GLib
import gi.overrides.GObject as __gi_overrides_GObject
import gi.repository.GLib as __gi_repository_GLib
import gobject as __gobject
from _typeshed import Incomplete
from gi._gi import GObjectWeakRef as GObjectWeakRef, OptionContext as OptionContext, OptionGroup as OptionGroup, Pid as Pid, add_emission_hook as add_emission_hook, list_properties as list_properties, new as new, signal_new as signal_new, spawn_async as spawn_async, type_register as type_register
from gi.repository.GLib import GError as GError, IO_ERR as IO_ERR, IO_FLAG_APPEND as IO_FLAG_APPEND, IO_FLAG_GET_MASK as IO_FLAG_GET_MASK, IO_FLAG_IS_READABLE as IO_FLAG_IS_READABLE, IO_FLAG_IS_SEEKABLE as IO_FLAG_IS_SEEKABLE, IO_FLAG_IS_WRITEABLE as IO_FLAG_IS_WRITEABLE, IO_FLAG_MASK as IO_FLAG_MASK, IO_FLAG_NONBLOCK as IO_FLAG_NONBLOCK, IO_FLAG_SET_MASK as IO_FLAG_SET_MASK, IO_HUP as IO_HUP, IO_IN as IO_IN, IO_NVAL as IO_NVAL, IO_OUT as IO_OUT, IO_PRI as IO_PRI, IO_STATUS_AGAIN as IO_STATUS_AGAIN, IO_STATUS_EOF as IO_STATUS_EOF, IO_STATUS_ERROR as IO_STATUS_ERROR, IO_STATUS_NORMAL as IO_STATUS_NORMAL, OPTION_ERROR_BAD_VALUE as OPTION_ERROR_BAD_VALUE, OPTION_ERROR_FAILED as OPTION_ERROR_FAILED, OPTION_ERROR_UNKNOWN_OPTION as OPTION_ERROR_UNKNOWN_OPTION, OPTION_FLAG_FILENAME as OPTION_FLAG_FILENAME, OPTION_FLAG_HIDDEN as OPTION_FLAG_HIDDEN, OPTION_FLAG_IN_MAIN as OPTION_FLAG_IN_MAIN, OPTION_FLAG_NOALIAS as OPTION_FLAG_NOALIAS, OPTION_FLAG_NO_ARG as OPTION_FLAG_NO_ARG, OPTION_FLAG_OPTIONAL_ARG as OPTION_FLAG_OPTIONAL_ARG, OPTION_FLAG_REVERSE as OPTION_FLAG_REVERSE, SPAWN_CHILD_INHERITS_STDIN as SPAWN_CHILD_INHERITS_STDIN, SPAWN_DO_NOT_REAP_CHILD as SPAWN_DO_NOT_REAP_CHILD, SPAWN_FILE_AND_ARGV_ZERO as SPAWN_FILE_AND_ARGV_ZERO, SPAWN_LEAVE_DESCRIPTORS_OPEN as SPAWN_LEAVE_DESCRIPTORS_OPEN, SPAWN_SEARCH_PATH as SPAWN_SEARCH_PATH, SPAWN_STDERR_TO_DEV_NULL as SPAWN_STDERR_TO_DEV_NULL, SPAWN_STDOUT_TO_DEV_NULL as SPAWN_STDOUT_TO_DEV_NULL, filename_display_basename as filename_display_basename, filename_display_name as filename_display_name, get_application_name as get_application_name, get_prgname as get_prgname, main_context_default as main_context_default, main_depth as main_depth, set_application_name as set_application_name, set_prgname as set_prgname, source_remove as source_remove, uri_list_extract_uris as uri_list_extract_uris
from gobject import GBoxed as GBoxed, GEnum as GEnum, GFlags as GFlags, GInterface as GInterface, GParamSpec as GParamSpec, GPointer as GPointer, GType as GType, Warning as Warning


G_MAXDOUBLE: float
G_MAXFLOAT: float
G_MAXINT: int
G_MAXINT16: int
G_MAXINT32: int
G_MAXINT64: int
G_MAXINT8: int
G_MAXLONG: int
G_MAXOFFSET: int
G_MAXSHORT: int
G_MAXSIZE: int
G_MAXSSIZE: int
G_MAXUINT: int
G_MAXUINT16: int
G_MAXUINT32: int
G_MAXUINT64: int
G_MAXUINT8: int
G_MAXULONG: int
G_MAXUSHORT: int
G_MINDOUBLE: float
G_MINFLOAT: float
G_MININT: int
G_MININT16: int
G_MININT32: int
G_MININT64: int
G_MININT8: int
G_MINLONG: int
G_MINOFFSET: int
G_MINSHORT: int
G_MINSSIZE: int
OPTION_REMAINING: str
PARAM_CONSTRUCT: int
PARAM_CONSTRUCT_ONLY: int
PARAM_LAX_VALIDATION: int
PARAM_MASK: int
PARAM_READABLE: int
PARAM_READWRITE: int
PARAM_STATIC_STRINGS: int
PARAM_USER_SHIFT: int
PARAM_WRITABLE: int
PRIORITY_DEFAULT: int
PRIORITY_DEFAULT_IDLE: int
PRIORITY_HIGH: int
PRIORITY_HIGH_IDLE: int
PRIORITY_LOW: int
SIGNAL_ACTION: int
SIGNAL_DETAILED: int
SIGNAL_FLAGS_MASK: int
SIGNAL_MATCH_MASK: int
SIGNAL_NO_HOOKS: int
SIGNAL_NO_RECURSE: int
SIGNAL_RUN_CLEANUP: int
SIGNAL_RUN_FIRST: int
SIGNAL_RUN_LAST: int
TYPE_FLAG_RESERVED_ID_BIT: int
TYPE_FUNDAMENTAL_MAX: int
TYPE_FUNDAMENTAL_SHIFT: int
TYPE_RESERVED_BSE_FIRST: int
TYPE_RESERVED_BSE_LAST: int
TYPE_RESERVED_GLIB_FIRST: int
TYPE_RESERVED_GLIB_LAST: int
TYPE_RESERVED_USER_FIRST: int
VALUE_INTERNED_STRING: int
VALUE_NOCOPY_CONTENTS: int

def boxed_copy(boxed_type: GType, src_boxed): ...
def boxed_free(boxed_type: GType, boxed): ...
def cclosure_marshal_BOOLEAN__BOXED_BOXED(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_BOOLEAN__FLAGS(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_generic(closure: GObject.Closure, return_gvalue: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_STRING__OBJECT_POINTER(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__BOOLEAN(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__BOXED(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__CHAR(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__DOUBLE(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__ENUM(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__FLAGS(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__FLOAT(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__INT(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__LONG(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__OBJECT(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__PARAM(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__POINTER(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__STRING(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__UCHAR(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__UINT(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__UINT_POINTER(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__ULONG(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__VARIANT(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def cclosure_marshal_VOID__VOID(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
def child_watch_add(*args, **kwargs) -> None: ...
def clear_signal_handler(handler_id_ptr: int, instance: GObject.Object): ...
def enum_complete_type_info(g_enum_type: GType, const_values: GObject.EnumValue) -> GObject.TypeInfo: ...
def enum_get_value(enum_class: GObject.EnumClass, value: int) -> Union[GObject.EnumValue, None]: ...
def enum_get_value_by_name(enum_class: GObject.EnumClass, name: str) -> Union[GObject.EnumValue, None]: ...
def enum_get_value_by_nick(enum_class: GObject.EnumClass, nick: str) -> Union[GObject.EnumValue, None]: ...
def enum_register_static(name: str, const_static_values: GObject.EnumValue) -> GType: ...
def enum_to_string(g_enum_type: GType, value: int) -> str: ...
def filename_from_utf8(utf8string, len: int = ...) -> None: ...
def flags_complete_type_info(g_flags_type: GType, const_values: GObject.FlagsValue) -> GObject.TypeInfo: ...
def flags_get_first_value(flags_class: GObject.FlagsClass, value: int) -> Union[GObject.FlagsValue, None]: ...
def flags_get_value_by_name(flags_class: GObject.FlagsClass, name: str) -> Union[GObject.FlagsValue, None]: ...
def flags_get_value_by_nick(flags_class: GObject.FlagsClass, nick: str) -> Union[GObject.FlagsValue, None]: ...
def flags_register_static(name: str, const_static_values: GObject.FlagsValue) -> GType: ...
def flags_to_string(flags_type: GType, value: int) -> str: ...
def get_current_time(*args, **kwargs) -> None: ...
def gtype_get_type() -> GType: ...
def idle_add(function, *user_data, **kwargs) -> None: ...
def io_add_watch(*args, **kwargs) -> None: ...
def markup_escape_text(text, length: int = ...) -> None: ...
def param_spec_boolean(name: str, nick: str, blurb: str, default_value: bool, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_boxed(name: str, nick: str, blurb: str, boxed_type: GType, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_char(name: str, nick: str, blurb: str, minimum: int, maximum: int, default_value: int, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_double(name: str, nick: str, blurb: str, minimum: float, maximum: float, default_value: float, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_enum(name: str, nick: str, blurb: str, enum_type: GType, default_value: int, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_flags(name: str, nick: str, blurb: str, flags_type: GType, default_value: int, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_float(name: str, nick: str, blurb: str, minimum: float, maximum: float, default_value: float, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_gtype(name: str, nick: str, blurb: str, is_a_type: GType, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_int(name: str, nick: str, blurb: str, minimum: int, maximum: int, default_value: int, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_int64(name: str, nick: str, blurb: str, minimum: int, maximum: int, default_value: int, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_long(name: str, nick: str, blurb: str, minimum: int, maximum: int, default_value: int, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_object(name: str, nick: str, blurb: str, object_type: GType, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_param(name: str, nick: str, blurb: str, param_type: GType, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_pointer(name: str, nick: str, blurb: str, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_string(name: str, nick: str, blurb: str, default_value: str, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_uchar(name: str, nick: str, blurb: str, minimum: int, maximum: int, default_value: int, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_uint(name: str, nick: str, blurb: str, minimum: int, maximum: int, default_value: int, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_uint64(name: str, nick: str, blurb: str, minimum: int, maximum: int, default_value: int, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_ulong(name: str, nick: str, blurb: str, minimum: int, maximum: int, default_value: int, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_unichar(name: str, nick: str, blurb: str, default_value: str, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_spec_variant(name: str, nick: str, blurb: str, type: GLib.VariantType, default_value: GLib.Variant, flags: GObject.ParamFlags) -> GObject.ParamSpec: ...
def param_type_register_static(name: str, pspec_info: GObject.ParamSpecTypeInfo) -> GType: ...
def param_values_cmp(pspec: GObject.ParamSpec, value1: GObject.Value, value2: GObject.Value) -> int: ...
def param_value_convert(pspec: GObject.ParamSpec, src_value: GObject.Value, dest_value: GObject.Value, strict_validation: bool) -> bool: ...
def param_value_defaults(pspec: GObject.ParamSpec, value: GObject.Value) -> bool: ...
def param_value_set_default(pspec: GObject.ParamSpec, value: GObject.Value): ...
def param_value_validate(pspec: GObject.ParamSpec, value: GObject.Value) -> bool: ...
def pointer_type_register_static(name: str) -> GType: ...
def remove_emission_hook(obj, detailed_signal, hook_id) -> None: ...
def signal_accumulator_first_wins(ihint, return_accu, handler_return, user_data: Incomplete | None = ...) -> None: ...
def signal_accumulator_true_handled(ihint, return_accu, handler_return, user_data: Incomplete | None = ...) -> None: ...
def signal_add_emission_hook(signal_id: int, detail: int, hook_func: GObject.SignalEmissionHook) -> int: ...
def signal_chain_from_overridden(instance_and_params: list, return_value: GObject.Value): ...
def signal_connect_closure(instance: GObject.Object, detailed_signal: str, closure: GObject.Closure, after: bool) -> int: ...
def signal_connect_closure_by_id(instance: GObject.Object, signal_id: int, detail: int, closure: GObject.Closure, after: bool) -> int: ...
def signal_emitv(instance_and_params: list, signal_id: int, detail: int, return_value: GObject.Value, *args, **kwargs): ...
def signal_get_invocation_hint(instance: GObject.Object) -> Union[GObject.SignalInvocationHint, None]: ...
def signal_handlers_block_matched(instance: GObject.Object, mask: GObject.SignalMatchType, signal_id: int, detail: int, closure: GObject.Closure, func, data) -> int: ...
def signal_handlers_destroy(instance: GObject.Object): ...
def signal_handlers_disconnect_matched(instance: GObject.Object, mask: GObject.SignalMatchType, signal_id: int, detail: int, closure: GObject.Closure, func, data) -> int: ...
def signal_handlers_unblock_matched(instance: GObject.Object, mask: GObject.SignalMatchType, signal_id: int, detail: int, closure: GObject.Closure, func, data) -> int: ...
def signal_handler_block(obj, handler_id) -> None: ...
def signal_handler_disconnect(instance: GObject.Object, handler_id: int): ...
def signal_handler_find(instance: GObject.Object, mask: GObject.SignalMatchType, signal_id: int, detail: int, closure: GObject.Closure, func, data) -> int: ...
def signal_handler_is_connected(instance: GObject.Object, handler_id: int) -> bool: ...
def signal_handler_unblock(instance: GObject.Object, handler_id: int): ...
def signal_has_handler_pending(instance: GObject.Object, signal_id: int, detail: int, may_be_blocked: bool) -> bool: ...
def signal_is_valid_name(name: str) -> bool: ...
def signal_list_ids(type_) -> None: ...
def signal_list_names(type_) -> None: ...
def signal_lookup(name, type_) -> None: ...
def signal_name(signal_id: int) -> Union[str, None]: ...
def signal_override_class_closure(signal_id: int, instance_type: GType, class_closure: GObject.Closure): ...
def signal_parse_name(detailed_signal, itype, force_detail_quark) -> None: ...
def signal_query(id_or_name, type_: Incomplete | None = ...) -> None: ...
def signal_remove_emission_hook(signal_id: int, hook_id: int): ...
def signal_set_va_marshaller(signal_id: int, instance_type: GType, va_marshaller: GObject.VaClosureMarshal): ...
def signal_stop_emission(instance: GObject.Object, signal_id: int, detail: int): ...
def signal_stop_emission_by_name(instance: GObject.Object, detailed_signal: str): ...
def signal_type_cclosure_new(itype: GType, struct_offset: int) -> GObject.Closure: ...
def source_set_closure(source: GLib.Source, closure: GObject.Closure): ...
def source_set_dummy_callback(source: GLib.Source): ...
def strdup_value_contents(value: GObject.Value) -> str: ...
def threads_init() -> None: ...
def timeout_add(interval, function, *user_data, **kwargs) -> None: ...
def timeout_add_seconds(interval, function, *user_data, **kwargs) -> None: ...
def type_add_class_private(class_type: GType, private_size: int): ...
def type_add_instance_private(class_type: GType, private_size: int) -> int: ...
def type_add_interface_dynamic(instance_type: GType, interface_type: GType, plugin: GObject.TypePlugin): ...
def type_add_interface_static(instance_type: GType, interface_type: GType, info: GObject.InterfaceInfo): ...
def type_check_class_is_a(g_class: GObject.TypeClass, is_a_type: GType) -> bool: ...
def type_check_instance(instance: GObject.TypeInstance) -> bool: ...
def type_check_instance_is_a(instance: GObject.TypeInstance, iface_type: GType) -> bool: ...
def type_check_instance_is_fundamentally_a(instance: GObject.TypeInstance, fundamental_type: GType) -> bool: ...
def type_check_is_value_type(type: GType) -> bool: ...
def type_check_value(value: GObject.Value) -> bool: ...
def type_check_value_holds(value: GObject.Value, type: GType) -> bool: ...
def type_children(type: GType) -> tuple[list, None]: ...
def type_class_adjust_private_offset(g_class, private_size_or_offset: int): ...
def type_class_peek(type: GType) -> GObject.TypeClass: ...
def type_class_peek_static(type: GType) -> GObject.TypeClass: ...
def type_class_ref(type: GType) -> GObject.TypeClass: ...
def type_default_interface_peek(g_type: GType) -> GObject.TypeInterface: ...
def type_default_interface_ref(g_type: GType) -> GObject.TypeInterface: ...
def type_default_interface_unref(g_iface: GObject.TypeInterface): ...
def type_depth(type: GType) -> int: ...
def type_ensure(type: GType): ...
def type_free_instance(instance: GObject.TypeInstance): ...
def type_from_name(name) -> None: ...
def type_fundamental(type_id: GType) -> GType: ...
def type_fundamental_next() -> GType: ...
def type_get_instance_count(type: GType) -> int: ...
def type_get_plugin(type: GType) -> GObject.TypePlugin: ...
def type_get_qdata(type: GType, quark: int): ...
def type_get_type_registration_serial() -> int: ...
def type_init() -> None: ...
def type_init_with_debug_flags(debug_flags: GObject.TypeDebugFlags): ...
def type_interfaces(type: GType) -> tuple[list, None]: ...
def type_interface_add_prerequisite(interface_type: GType, prerequisite_type: GType): ...
def type_interface_get_plugin(instance_type: GType, interface_type: GType) -> GObject.TypePlugin: ...
def type_interface_instantiatable_prerequisite(interface_type: GType) -> GType: ...
def type_interface_peek(instance_class: GObject.TypeClass, iface_type: GType) -> GObject.TypeInterface: ...
def type_interface_prerequisites(interface_type: GType) -> tuple[list, None]: ...
def type_is_a(type: GType, is_a_type: GType) -> bool: ...
def type_name(type: GType) -> str: ...
def type_name_from_class(g_class: GObject.TypeClass) -> str: ...
def type_name_from_instance(instance: GObject.TypeInstance) -> str: ...
def type_next_base(leaf_type: GType, root_type: GType) -> GType: ...
def type_parent(type_) -> None: ...
def type_qname(type: GType) -> int: ...
def type_query(type: GType) -> GObject.TypeQuery: ...
def type_register_dynamic(parent_type: GType, type_name: str, plugin: GObject.TypePlugin, flags: GObject.TypeFlags) -> GType: ...
def type_register_fundamental(type_id: GType, type_name: str, info: GObject.TypeInfo, finfo: GObject.TypeFundamentalInfo, flags: GObject.TypeFlags) -> GType: ...
def type_register_static(parent_type: GType, type_name: str, info: GObject.TypeInfo, flags: GObject.TypeFlags) -> GType: ...
def type_set_qdata(type: GType, quark: int, data: Incomplete | None = ...): ...
def type_test_flags(type: GType, flags: int) -> bool: ...
def value_type_compatible(src_type: GType, dest_type: GType) -> bool: ...
def value_type_transformable(src_type: GType, dest_type: GType) -> bool: ...


class Object(Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete
GObject = Object

class Binding(Binding):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def dup_source(self) -> Union[GObject.Object, None]: ...
    def dup_target(self) -> Union[GObject.Object, None]: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_flags(self) -> GObject.BindingFlags: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_source(self) -> Union[GObject.Object, None]: ...
    def get_source_property(self) -> str: ...
    def get_target(self) -> Union[GObject.Object, None]: ...
    def get_target_property(self) -> str: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unbind(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __call__(self) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class BindingFlags(__gobject.GFlags):
    G_BINDING_DEFAULT: int
    G_BINDING_BIDIRECTIONAL: int
    G_BINDING_SYNC_CREATE: int
    G_BINDING_INVERT_BOOLEAN: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    BIDIRECTIONAL: int
    DEFAULT: int
    INVERT_BOOLEAN: int
    SYNC_CREATE: int

class BindingGroup(__gi_overrides_GObject.Object):
    def bind(self, source_property: str, target: GObject.Object, target_property: str, flags: GObject.BindingFlags): ...
    def bind_full(self, source_property: str, target: GObject.Object, target_property: str, flags: GObject.BindingFlags, transform_to: GObject.Closure = ..., transform_from: GObject.Closure = ...): ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def dup_source(self) -> Union[GObject.Object, None]: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def new() -> GObject.BindingGroup: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def set_source(self, source: GObject.Object = ...): ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class CClosure(__gi.Struct):
    @staticmethod
    def marshal_BOOLEAN__BOXED_BOXED(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_BOOLEAN__FLAGS(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_generic(closure: GObject.Closure, return_gvalue: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_STRING__OBJECT_POINTER(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__BOOLEAN(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__BOXED(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__CHAR(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__DOUBLE(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__ENUM(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__FLAGS(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__FLOAT(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__INT(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__LONG(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__OBJECT(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__PARAM(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__POINTER(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__STRING(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__UCHAR(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__UINT(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__UINT_POINTER(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__ULONG(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__VARIANT(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    @staticmethod
    def marshal_VOID__VOID(closure: GObject.Closure, return_value: GObject.Value, n_param_values: int, param_values: GObject.Value, invocation_hint: Incomplete | None = ..., marshal_data: Incomplete | None = ...): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    callback: Incomplete
    closure: Incomplete

class Closure(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def invalidate(self) -> None: ...
    def invoke(self, param_values: list, invocation_hint) -> GObject.Value: ...
    @staticmethod
    def new_object(sizeof_closure: int, object: GObject.Object) -> GObject.Closure: ...
    @staticmethod
    def new_simple(sizeof_closure: int, data) -> GObject.Closure: ...
    def ref(self) -> GObject.Closure: ...
    def sink(self) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    data: Incomplete
    derivative_flag: Incomplete
    floating: Incomplete
    in_inotify: Incomplete
    in_marshal: Incomplete
    is_invalid: Incomplete
    marshal: Incomplete
    meta_marshal_nouse: Incomplete
    notifiers: Incomplete
    n_fnotifiers: Incomplete
    n_guards: Incomplete
    n_inotifiers: Incomplete
    ref_count: Incomplete

class ClosureNotifyData(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    data: Incomplete
    notify: Incomplete

class ConnectFlags(__gobject.GFlags):
    G_CONNECT_AFTER: int
    G_CONNECT_SWAPPED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    AFTER: int
    SWAPPED: int

class EnumClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_class: Incomplete
    maximum: Incomplete
    minimum: Incomplete
    n_values: Incomplete
    values: Incomplete

class EnumValue(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    value: Incomplete
    value_name: Incomplete
    value_nick: Incomplete

class FlagsClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_class: Incomplete
    mask: Incomplete
    n_values: Incomplete
    values: Incomplete

class FlagsValue(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    value: Incomplete
    value_name: Incomplete
    value_nick: Incomplete

class Source(__gi_repository_GLib.Source):
    def add_child_source(self, child_source: GLib.Source): ...
    def add_poll(self, fd: GLib.PollFD): ...
    def attach(self, context: GLib.MainContext) -> int: ...
    def copy(self, *args, **kwargs) -> None: ...
    def destroy(self) -> None: ...
    def get_can_recurse(self) -> bool: ...
    def get_context(self) -> Union[GLib.MainContext, None]: ...
    def get_current_time(*args, **kwargs) -> None: ...
    def get_id(self) -> int: ...
    def get_name(self) -> Union[str, None]: ...
    def get_priority(self) -> int: ...
    def get_ready_time(self) -> int: ...
    def get_time(self) -> int: ...
    def is_destroyed(self) -> bool: ...
    @staticmethod
    def new(source_funcs: GLib.SourceFuncs, struct_size: int) -> GLib.Source: ...
    def ref(self) -> GLib.Source: ...
    @staticmethod
    def remove(tag: int) -> bool: ...
    @staticmethod
    def remove_by_funcs_user_data(funcs: GLib.SourceFuncs, user_data) -> bool: ...
    @staticmethod
    def remove_by_user_data(user_data) -> bool: ...
    def remove_child_source(self, child_source: GLib.Source): ...
    def remove_poll(self, fd: GLib.PollFD): ...
    def set_callback(self, fn, user_data: Incomplete | None = ...) -> None: ...
    def set_callback_indirect(self, callback_data, callback_funcs: GLib.SourceCallbackFuncs): ...
    def set_can_recurse(self, can_recurse: bool): ...
    def set_funcs(self, funcs: GLib.SourceFuncs): ...
    def set_name(self, name: str): ...
    @staticmethod
    def set_name_by_id(tag: int, name: str): ...
    def set_priority(self, priority: int): ...
    def set_ready_time(self, ready_time: int): ...
    def set_static_name(self, name: str): ...
    def unref(self) -> None: ...
    def __delattr__(self, name) -> None: ...
    def __del__(self) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, *args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    callback_data: Incomplete
    callback_funcs: Incomplete
    can_recurse: Incomplete
    context: Incomplete
    flags: Incomplete
    name: Incomplete
    next: Incomplete
    poll_fds: Incomplete
    prev: Incomplete
    priority: Incomplete
    priv: Incomplete
    ref_count: Incomplete
    source_funcs: Incomplete
    source_id: Incomplete

class Idle(__gi_overrides_GLib.Source):
    def add_child_source(self, child_source: GLib.Source): ...
    def add_poll(self, fd: GLib.PollFD): ...
    def attach(self, context: GLib.MainContext) -> int: ...
    def copy(self, *args, **kwargs) -> None: ...
    def destroy(self) -> None: ...
    def get_can_recurse(self) -> bool: ...
    def get_context(self) -> Union[GLib.MainContext, None]: ...
    def get_current_time(*args, **kwargs) -> None: ...
    def get_id(self) -> int: ...
    def get_name(self) -> Union[str, None]: ...
    def get_priority(self) -> int: ...
    def get_ready_time(self) -> int: ...
    def get_time(self) -> int: ...
    def is_destroyed(self) -> bool: ...
    @staticmethod
    def new(source_funcs: GLib.SourceFuncs, struct_size: int) -> GLib.Source: ...
    def ref(self) -> GLib.Source: ...
    @staticmethod
    def remove(tag: int) -> bool: ...
    @staticmethod
    def remove_by_funcs_user_data(funcs: GLib.SourceFuncs, user_data) -> bool: ...
    @staticmethod
    def remove_by_user_data(user_data) -> bool: ...
    def remove_child_source(self, child_source: GLib.Source): ...
    def remove_poll(self, fd: GLib.PollFD): ...
    def set_callback(self, fn, user_data: Incomplete | None = ...) -> None: ...
    def set_callback_indirect(self, callback_data, callback_funcs: GLib.SourceCallbackFuncs): ...
    def set_can_recurse(self, can_recurse: bool): ...
    def set_funcs(self, funcs: GLib.SourceFuncs): ...
    def set_name(self, name: str): ...
    @staticmethod
    def set_name_by_id(tag: int, name: str): ...
    def set_priority(self, priority: int): ...
    def set_ready_time(self, ready_time: int): ...
    def set_static_name(self, name: str): ...
    def unref(self) -> None: ...
    def __delattr__(self, name) -> None: ...
    def __del__(self) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, priority: int = ...) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, priority: int = ...) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    callback_data: Incomplete
    callback_funcs: Incomplete
    can_recurse: Incomplete
    context: Incomplete
    flags: Incomplete
    name: Incomplete
    next: Incomplete
    poll_fds: Incomplete
    prev: Incomplete
    priority: Incomplete
    priv: Incomplete
    ref_count: Incomplete
    source_funcs: Incomplete
    source_id: Incomplete

class InitiallyUnowned(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class InitiallyUnownedClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    constructed: Incomplete
    constructor: Incomplete
    construct_properties: Incomplete
    dispatch_properties_changed: Incomplete
    dispose: Incomplete
    finalize: Incomplete
    flags: Incomplete
    get_property: Incomplete
    g_type_class: Incomplete
    notify: Incomplete
    pdummy: Incomplete
    set_property: Incomplete

class InterfaceInfo(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    interface_data: Incomplete
    interface_finalize: Incomplete
    interface_init: Incomplete

class MainContext(__gi_repository_GLib.MainContext):
    def acquire(self) -> bool: ...
    def add_poll(self, fd: GLib.PollFD, priority: int): ...
    def check(self, max_priority: int, fds: list) -> bool: ...
    def copy(self, *args, **kwargs) -> None: ...
    @staticmethod
    def default() -> GLib.MainContext: ...
    def dispatch(self) -> None: ...
    def find_source_by_funcs_user_data(self, funcs: GLib.SourceFuncs, user_data) -> GLib.Source: ...
    def find_source_by_id(self, source_id: int) -> GLib.Source: ...
    def find_source_by_user_data(self, user_data) -> GLib.Source: ...
    @staticmethod
    def get_thread_default() -> Union[GLib.MainContext, None]: ...
    def invoke_full(self, priority: int, function: GLib.SourceFunc, data: Incomplete | None = ...): ...
    def is_owner(self) -> bool: ...
    def iteration(self, may_block: bool = ...) -> None: ...
    @staticmethod
    def new() -> GLib.MainContext: ...
    @staticmethod
    def new_with_flags(flags: GLib.MainContextFlags) -> GLib.MainContext: ...
    def pending(self) -> bool: ...
    def pop_thread_default(self) -> None: ...
    def prepare(self) -> tuple[bool, None]: ...
    def push_thread_default(self) -> None: ...
    def query(self, max_priority: int) -> tuple[int, None, None]: ...
    def ref(self) -> GLib.MainContext: ...
    @staticmethod
    def ref_thread_default() -> GLib.MainContext: ...
    def release(self) -> None: ...
    def remove_poll(self, fd: GLib.PollFD): ...
    def unref(self) -> None: ...
    def wait(self, cond: GLib.Cond, mutex: GLib.Mutex) -> bool: ...
    def wakeup(self) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__() -> GLib.MainContext: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class MainLoop(__gi_repository_GLib.MainLoop):
    def copy(self, *args, **kwargs) -> None: ...
    def get_context(self) -> GLib.MainContext: ...
    def is_running(self) -> bool: ...
    @staticmethod
    def new(context: GLib.MainContext, is_running: bool) -> GLib.MainLoop: ...
    def quit(self) -> None: ...
    def ref(self) -> GLib.MainLoop: ...
    def run(self) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, context: Incomplete | None = ...) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, context: Incomplete | None = ...) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class ObjectClass(__gi.Struct):
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def list_properties(self) -> tuple[list, None]: ...
    def override_property(self, property_id: int, name: str): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    constructed: Incomplete
    constructor: Incomplete
    construct_properties: Incomplete
    dispatch_properties_changed: Incomplete
    dispose: Incomplete
    finalize: Incomplete
    flags: Incomplete
    get_property: Incomplete
    g_type_class: Incomplete
    notify: Incomplete
    pdummy: Incomplete
    set_property: Incomplete

class ObjectConstructParam(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    pspec: Incomplete
    value: Incomplete

class Parameter(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    name: Incomplete
    value: Incomplete

class ParamFlags(__gobject.GFlags):
    G_PARAM_READABLE: int
    G_PARAM_WRITABLE: int
    G_PARAM_READWRITE: int
    G_PARAM_CONSTRUCT: int
    G_PARAM_CONSTRUCT_ONLY: int
    G_PARAM_LAX_VALIDATION: int
    G_PARAM_PRIVATE: int
    G_PARAM_STATIC_NICK: int
    G_PARAM_STATIC_BLURB: int
    G_PARAM_EXPLICIT_NOTIFY: int
    G_PARAM_DEPRECATED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    CONSTRUCT: int
    CONSTRUCT_ONLY: int
    DEPRECATED: int
    EXPLICIT_NOTIFY: int
    LAX_VALIDATION: int
    PRIVATE: int
    READABLE: int
    READWRITE: int
    STATIC_BLURB: int
    STATIC_NAME: int
    STATIC_NICK: int
    WRITABLE: int

class ParamSpec:
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecBoolean(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecBoxed(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecChar(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    maximum: Incomplete
    minimum: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    dummy: Incomplete
    finalize: Incomplete
    g_type_class: Incomplete
    values_cmp: Incomplete
    value_set_default: Incomplete
    value_type: Incomplete
    value_validate: Incomplete

class ParamSpecDouble(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    epsilon: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    maximum: Incomplete
    minimum: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecEnum(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    enum_class: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecFlags(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    flags_class: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecFloat(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    epsilon: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    maximum: Incomplete
    minimum: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecGType(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    flags: Incomplete
    g_type_instance: Incomplete
    is_a_type: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecInt(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    maximum: Incomplete
    minimum: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecInt64(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    maximum: Incomplete
    minimum: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecLong(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    maximum: Incomplete
    minimum: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecObject(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecOverride(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    overridden: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecParam(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecPointer(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecPool(__gi.Struct):
    def insert(self, pspec: GObject.ParamSpec, owner_type: GType): ...
    def list(self, owner_type: GType) -> tuple[list, None]: ...
    def list_owned(self, owner_type: GType) -> list: ...
    def lookup(self, param_name: str, owner_type: GType, walk_ancestors: bool) -> Union[GObject.ParamSpec, None]: ...
    def remove(self, pspec: GObject.ParamSpec): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class ParamSpecString(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    cset_first: Incomplete
    cset_nth: Incomplete
    default_value: Incomplete
    ensure_non_null: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    null_fold_if_empty: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    substitutor: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecTypeInfo(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    finalize: Incomplete
    instance_init: Incomplete
    instance_size: Incomplete
    n_preallocs: Incomplete
    values_cmp: Incomplete
    value_set_default: Incomplete
    value_type: Incomplete
    value_validate: Incomplete

class ParamSpecUChar(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    maximum: Incomplete
    minimum: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecUInt(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    maximum: Incomplete
    minimum: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecUInt64(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    maximum: Incomplete
    minimum: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecULong(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    maximum: Incomplete
    minimum: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecUnichar(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecValueArray(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    element_spec: Incomplete
    fixed_n_elements: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    owner_type: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class ParamSpecVariant(ParamSpec):
    def do_finalize(self) -> None: ...
    def do_values_cmp(self, value1: GObject.Value, value2: GObject.Value) -> int: ...
    def do_value_set_default(self, value: GObject.Value): ...
    def do_value_validate(self, value: GObject.Value) -> bool: ...
    def get_blurb(self) -> Union[str, None]: ...
    def get_default_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_name_quark(self) -> int: ...
    def get_nick(self) -> str: ...
    def get_qdata(self, quark: int): ...
    def get_redirect_target(self) -> Union[GObject.ParamSpec, None]: ...
    @staticmethod
    def is_valid_name(name: str) -> bool: ...
    def set_qdata(self, quark: int, data: Incomplete | None = ...): ...
    def sink(self) -> None: ...
    def steal_qdata(self, quark: int): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    default_value: Incomplete
    flags: Incomplete
    g_type_instance: Incomplete
    name: Incomplete
    owner_type: Incomplete
    padding: Incomplete
    param_id: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    type: Incomplete
    value_type: Incomplete
    __gsignals__: Incomplete

class PollFD(__gi_repository_GLib.PollFD):
    def copy(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, fd, events) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, fd, events) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    events: Incomplete
    fd: Incomplete
    revents: Incomplete

class property:
    def getter(self, fget) -> None: ...
    def get_pspec_args(self) -> None: ...
    def setter(self, fset) -> None: ...
    def __call__(self, fget) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __get__(self, instance, klass) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, getter: Incomplete | None = ..., setter: Incomplete | None = ..., type: Incomplete | None = ..., default: Incomplete | None = ..., nick: Incomplete | None = ..., blurb: Incomplete | None = ..., flags: int = ..., minimum: Incomplete | None = ..., maximum: Incomplete | None = ...) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __set__(self, instance, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __metaclass__: Incomplete
Property = property

class Signal(str):
    def capitalize(self, *args, **kwargs) -> None: ...
    def casefold(self, *args, **kwargs) -> None: ...
    def center(self, *args, **kwargs) -> None: ...
    def copy(self, newName: Incomplete | None = ...) -> None: ...
    @staticmethod
    def count(sub, start: Incomplete | None = ..., end: Incomplete | None = ...) -> int: ...
    def encode(self, *args, **kwargs) -> None: ...
    @staticmethod
    def endswith(suffix, start: Incomplete | None = ..., end: Incomplete | None = ...) -> bool: ...
    def expandtabs(self, *args, **kwargs) -> None: ...
    @staticmethod
    def find(sub, start: Incomplete | None = ..., end: Incomplete | None = ...) -> int: ...
    @staticmethod
    def format(*args, **kwargs) -> str: ...
    @staticmethod
    def format_map(mapping) -> str: ...
    def get_signal_args(self) -> None: ...
    @staticmethod
    def index(sub, start: Incomplete | None = ..., end: Incomplete | None = ...) -> int: ...
    def isalnum(self, *args, **kwargs) -> None: ...
    def isalpha(self, *args, **kwargs) -> None: ...
    def isascii(self, *args, **kwargs) -> None: ...
    def isdecimal(self, *args, **kwargs) -> None: ...
    def isdigit(self, *args, **kwargs) -> None: ...
    def isidentifier(self, *args, **kwargs) -> None: ...
    def islower(self, *args, **kwargs) -> None: ...
    def isnumeric(self, *args, **kwargs) -> None: ...
    def isprintable(self, *args, **kwargs) -> None: ...
    def isspace(self, *args, **kwargs) -> None: ...
    def istitle(self, *args, **kwargs) -> None: ...
    def isupper(self, *args, **kwargs) -> None: ...
    @staticmethod
    def join(ab: Incomplete | None = ..., pq: Incomplete | None = ..., rs: Incomplete | None = ...) -> None: ...
    def ljust(self, *args, **kwargs) -> None: ...
    def lower(self, *args, **kwargs) -> None: ...
    def lstrip(self, *args, **kwargs) -> None: ...
    def maketrans(self, *args, **kwargs) -> None: ...
    def partition(self, *args, **kwargs) -> None: ...
    def removeprefix(self, *args, **kwargs) -> None: ...
    def removesuffix(self, *args, **kwargs) -> None: ...
    def replace(self, *args, **kwargs) -> None: ...
    @staticmethod
    def rfind(sub, start: Incomplete | None = ..., end: Incomplete | None = ...) -> int: ...
    @staticmethod
    def rindex(sub, start: Incomplete | None = ..., end: Incomplete | None = ...) -> int: ...
    def rjust(self, *args, **kwargs) -> None: ...
    def rpartition(self, *args, **kwargs) -> None: ...
    def rsplit(self, *args, **kwargs) -> None: ...
    def rstrip(self, *args, **kwargs) -> None: ...
    @staticmethod
    def split() -> None: ...
    def splitlines(self, *args, **kwargs) -> None: ...
    @staticmethod
    def startswith(prefix, start: Incomplete | None = ..., end: Incomplete | None = ...) -> bool: ...
    def strip(self, *args, **kwargs) -> None: ...
    def swapcase(self, *args, **kwargs) -> None: ...
    def title(self, *args, **kwargs) -> None: ...
    def translate(self, *args, **kwargs) -> None: ...
    def upper(self, *args, **kwargs) -> None: ...
    def zfill(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __call__(self, obj, *args, **kargs) -> None: ...
    def __contains__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getitem__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __get__(self, instance, owner: Incomplete | None = ...) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, name: Incomplete | None = ..., func: Incomplete | None = ..., flags: int = ..., return_type: Incomplete | None = ..., arg_types: Incomplete | None = ..., doc: Incomplete | None = ..., accumulator: Incomplete | None = ..., accu_data: Incomplete | None = ...) -> None: ...
    def __iter__(self): ...
    def __len__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(cls, name: Incomplete | None = ..., *args, **kargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    BoundSignal: Incomplete

class SignalFlags(__gobject.GFlags):
    G_SIGNAL_RUN_FIRST: int
    G_SIGNAL_RUN_LAST: int
    G_SIGNAL_RUN_CLEANUP: int
    G_SIGNAL_NO_RECURSE: int
    G_SIGNAL_DETAILED: int
    G_SIGNAL_ACTION: int
    G_SIGNAL_NO_HOOKS: int
    G_SIGNAL_MUST_COLLECT: int
    G_SIGNAL_DEPRECATED: int
    G_SIGNAL_ACCUMULATOR_FIRST_RUN: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ACCUMULATOR_FIRST_RUN: int
    ACTION: int
    DEPRECATED: int
    DETAILED: int
    MUST_COLLECT: int
    NO_HOOKS: int
    NO_RECURSE: int
    RUN_CLEANUP: int
    RUN_FIRST: int
    RUN_LAST: int

class SignalGroup(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def block(self) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal: str, c_handler: GObject.Callback, data, flags: GObject.ConnectFlags): ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def connect_swapped(self, detailed_signal: str, c_handler: GObject.Callback, data: Incomplete | None = ...): ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def dup_target(self) -> Union[GObject.Object, None]: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def new(target_type: GType) -> GObject.SignalGroup: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def set_target(self, target: GObject.Object = ...): ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unblock(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class SignalInvocationHint(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    detail: Incomplete
    run_type: Incomplete
    signal_id: Incomplete

class SignalMatchType(__gobject.GFlags):
    G_SIGNAL_MATCH_ID: int
    G_SIGNAL_MATCH_DETAIL: int
    G_SIGNAL_MATCH_CLOSURE: int
    G_SIGNAL_MATCH_FUNC: int
    G_SIGNAL_MATCH_DATA: int
    G_SIGNAL_MATCH_UNBLOCKED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    CLOSURE: int
    DATA: int
    DETAIL: int
    FUNC: int
    ID: int
    UNBLOCKED: int

class SignalOverride(__gi__signalhelper.Signal):
    def capitalize(self, *args, **kwargs) -> None: ...
    def casefold(self, *args, **kwargs) -> None: ...
    def center(self, *args, **kwargs) -> None: ...
    def copy(self, newName: Incomplete | None = ...) -> None: ...
    @staticmethod
    def count(sub, start: Incomplete | None = ..., end: Incomplete | None = ...) -> int: ...
    def encode(self, *args, **kwargs) -> None: ...
    @staticmethod
    def endswith(suffix, start: Incomplete | None = ..., end: Incomplete | None = ...) -> bool: ...
    def expandtabs(self, *args, **kwargs) -> None: ...
    @staticmethod
    def find(sub, start: Incomplete | None = ..., end: Incomplete | None = ...) -> int: ...
    @staticmethod
    def format(*args, **kwargs) -> str: ...
    @staticmethod
    def format_map(mapping) -> str: ...
    def get_signal_args(self) -> None: ...
    @staticmethod
    def index(sub, start: Incomplete | None = ..., end: Incomplete | None = ...) -> int: ...
    def isalnum(self, *args, **kwargs) -> None: ...
    def isalpha(self, *args, **kwargs) -> None: ...
    def isascii(self, *args, **kwargs) -> None: ...
    def isdecimal(self, *args, **kwargs) -> None: ...
    def isdigit(self, *args, **kwargs) -> None: ...
    def isidentifier(self, *args, **kwargs) -> None: ...
    def islower(self, *args, **kwargs) -> None: ...
    def isnumeric(self, *args, **kwargs) -> None: ...
    def isprintable(self, *args, **kwargs) -> None: ...
    def isspace(self, *args, **kwargs) -> None: ...
    def istitle(self, *args, **kwargs) -> None: ...
    def isupper(self, *args, **kwargs) -> None: ...
    @staticmethod
    def join(ab: Incomplete | None = ..., pq: Incomplete | None = ..., rs: Incomplete | None = ...) -> None: ...
    def ljust(self, *args, **kwargs) -> None: ...
    def lower(self, *args, **kwargs) -> None: ...
    def lstrip(self, *args, **kwargs) -> None: ...
    def maketrans(self, *args, **kwargs) -> None: ...
    def partition(self, *args, **kwargs) -> None: ...
    def removeprefix(self, *args, **kwargs) -> None: ...
    def removesuffix(self, *args, **kwargs) -> None: ...
    def replace(self, *args, **kwargs) -> None: ...
    @staticmethod
    def rfind(sub, start: Incomplete | None = ..., end: Incomplete | None = ...) -> int: ...
    @staticmethod
    def rindex(sub, start: Incomplete | None = ..., end: Incomplete | None = ...) -> int: ...
    def rjust(self, *args, **kwargs) -> None: ...
    def rpartition(self, *args, **kwargs) -> None: ...
    def rsplit(self, *args, **kwargs) -> None: ...
    def rstrip(self, *args, **kwargs) -> None: ...
    @staticmethod
    def split() -> None: ...
    def splitlines(self, *args, **kwargs) -> None: ...
    @staticmethod
    def startswith(prefix, start: Incomplete | None = ..., end: Incomplete | None = ...) -> bool: ...
    def strip(self, *args, **kwargs) -> None: ...
    def swapcase(self, *args, **kwargs) -> None: ...
    def title(self, *args, **kwargs) -> None: ...
    def translate(self, *args, **kwargs) -> None: ...
    def upper(self, *args, **kwargs) -> None: ...
    def zfill(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __call__(self, obj, *args, **kargs) -> None: ...
    def __contains__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getitem__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __get__(self, instance, owner: Incomplete | None = ...) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, name: Incomplete | None = ..., func: Incomplete | None = ..., flags: int = ..., return_type: Incomplete | None = ..., arg_types: Incomplete | None = ..., doc: Incomplete | None = ..., accumulator: Incomplete | None = ..., accu_data: Incomplete | None = ...) -> None: ...
    def __iter__(self): ...
    def __len__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(cls, name: Incomplete | None = ..., *args, **kargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    BoundSignal: Incomplete

class SignalQuery(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    itype: Incomplete
    n_params: Incomplete
    param_types: Incomplete
    return_type: Incomplete
    signal_flags: Incomplete
    signal_id: Incomplete
    signal_name: Incomplete

class Timeout(__gi_overrides_GLib.Source):
    def add_child_source(self, child_source: GLib.Source): ...
    def add_poll(self, fd: GLib.PollFD): ...
    def attach(self, context: GLib.MainContext) -> int: ...
    def copy(self, *args, **kwargs) -> None: ...
    def destroy(self) -> None: ...
    def get_can_recurse(self) -> bool: ...
    def get_context(self) -> Union[GLib.MainContext, None]: ...
    def get_current_time(*args, **kwargs) -> None: ...
    def get_id(self) -> int: ...
    def get_name(self) -> Union[str, None]: ...
    def get_priority(self) -> int: ...
    def get_ready_time(self) -> int: ...
    def get_time(self) -> int: ...
    def is_destroyed(self) -> bool: ...
    @staticmethod
    def new(source_funcs: GLib.SourceFuncs, struct_size: int) -> GLib.Source: ...
    def ref(self) -> GLib.Source: ...
    @staticmethod
    def remove(tag: int) -> bool: ...
    @staticmethod
    def remove_by_funcs_user_data(funcs: GLib.SourceFuncs, user_data) -> bool: ...
    @staticmethod
    def remove_by_user_data(user_data) -> bool: ...
    def remove_child_source(self, child_source: GLib.Source): ...
    def remove_poll(self, fd: GLib.PollFD): ...
    def set_callback(self, fn, user_data: Incomplete | None = ...) -> None: ...
    def set_callback_indirect(self, callback_data, callback_funcs: GLib.SourceCallbackFuncs): ...
    def set_can_recurse(self, can_recurse: bool): ...
    def set_funcs(self, funcs: GLib.SourceFuncs): ...
    def set_name(self, name: str): ...
    @staticmethod
    def set_name_by_id(tag: int, name: str): ...
    def set_priority(self, priority: int): ...
    def set_ready_time(self, ready_time: int): ...
    def set_static_name(self, name: str): ...
    def unref(self) -> None: ...
    def __delattr__(self, name) -> None: ...
    def __del__(self) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, interval: int = ..., priority: int = ...) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, interval: int = ..., priority: int = ...) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    callback_data: Incomplete
    callback_funcs: Incomplete
    can_recurse: Incomplete
    context: Incomplete
    flags: Incomplete
    name: Incomplete
    next: Incomplete
    poll_fds: Incomplete
    prev: Incomplete
    priority: Incomplete
    priv: Incomplete
    ref_count: Incomplete
    source_funcs: Incomplete
    source_id: Incomplete

class TypeClass(__gi.Struct):
    def add_private(self, private_size: int): ...
    @staticmethod
    def adjust_private_offset(g_class, private_size_or_offset: int): ...
    def get_private(self, private_type: GType): ...
    @staticmethod
    def peek(type: GType) -> GObject.TypeClass: ...
    def peek_parent(self) -> GObject.TypeClass: ...
    @staticmethod
    def peek_static(type: GType) -> GObject.TypeClass: ...
    @staticmethod
    def ref(type: GType) -> GObject.TypeClass: ...
    def unref(self) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type: Incomplete

class TypeCValue(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class TypeDebugFlags(__gobject.GFlags):
    G_TYPE_DEBUG_NONE: int
    G_TYPE_DEBUG_OBJECTS: int
    G_TYPE_DEBUG_SIGNALS: int
    G_TYPE_DEBUG_INSTANCE_COUNT: int
    G_TYPE_DEBUG_MASK: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    INSTANCE_COUNT: int
    MASK: int
    NONE: int
    OBJECTS: int
    SIGNALS: int

class TypeFlags(__gobject.GFlags):
    G_TYPE_FLAG_ABSTRACT: int
    G_TYPE_FLAG_VALUE_ABSTRACT: int
    G_TYPE_FLAG_FINAL: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ABSTRACT: int
    FINAL: int
    VALUE_ABSTRACT: int

class TypeFundamentalFlags(__gobject.GFlags):
    G_TYPE_FLAG_CLASSED: int
    G_TYPE_FLAG_INSTANTIATABLE: int
    G_TYPE_FLAG_DERIVABLE: int
    G_TYPE_FLAG_DEEP_DERIVABLE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    CLASSED: int
    DEEP_DERIVABLE: int
    DERIVABLE: int
    INSTANTIATABLE: int

class TypeFundamentalInfo(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    type_flags: Incomplete

class TypeInfo(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    base_finalize: Incomplete
    base_init: Incomplete
    class_data: Incomplete
    class_finalize: Incomplete
    class_init: Incomplete
    class_size: Incomplete
    instance_init: Incomplete
    instance_size: Incomplete
    n_preallocs: Incomplete
    value_table: Incomplete

class TypeInstance(__gi.Struct):
    def get_private(self, private_type: GType): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_class: Incomplete

class TypeInterface(__gi.Struct):
    @staticmethod
    def add_prerequisite(interface_type: GType, prerequisite_type: GType): ...
    @staticmethod
    def get_plugin(instance_type: GType, interface_type: GType) -> GObject.TypePlugin: ...
    @staticmethod
    def instantiatable_prerequisite(interface_type: GType) -> GType: ...
    @staticmethod
    def peek(instance_class: GObject.TypeClass, iface_type: GType) -> GObject.TypeInterface: ...
    def peek_parent(self) -> GObject.TypeInterface: ...
    @staticmethod
    def prerequisites(interface_type: GType) -> tuple[list, None]: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_instance_type: Incomplete
    g_type: Incomplete

class TypePlugin(__gobject.GInterface):
    def complete_interface_info(self, instance_type: GType, interface_type: GType, info: GObject.InterfaceInfo): ...
    def complete_type_info(self, g_type: GType, info: GObject.TypeInfo, value_table: GObject.TypeValueTable): ...
    def unuse(self) -> None: ...
    def use(self) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class TypeModule(__gi_overrides_GObject.Object, TypePlugin):
    def add_interface(self, instance_type: GType, interface_type: GType, interface_info: GObject.InterfaceInfo): ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def complete_interface_info(self, instance_type: GType, interface_type: GType, info: GObject.InterfaceInfo): ...
    def complete_type_info(self, g_type: GType, info: GObject.TypeInfo, value_table: GObject.TypeValueTable): ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_load(self) -> bool: ...
    def do_unload(self) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def register_enum(self, name: str, const_static_values: GObject.EnumValue) -> GType: ...
    def register_flags(self, name: str, const_static_values: GObject.FlagsValue) -> GType: ...
    def register_type(self, parent_type: GType, type_name: str, type_info: GObject.TypeInfo, flags: GObject.TypeFlags) -> GType: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_name(self, name: str): ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def unuse(self) -> None: ...
    def use(self) -> bool: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    interface_infos: Incomplete
    name: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    type_infos: Incomplete
    use_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class TypeModuleClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    load: Incomplete
    parent_class: Incomplete
    reserved1: Incomplete
    reserved2: Incomplete
    reserved3: Incomplete
    reserved4: Incomplete
    unload: Incomplete

class TypePluginClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    base_iface: Incomplete
    complete_interface_info: Incomplete
    complete_type_info: Incomplete
    unuse_plugin: Incomplete
    use_plugin: Incomplete

class TypeQuery(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    class_size: Incomplete
    instance_size: Incomplete
    type: Incomplete
    type_name: Incomplete

class TypeValueTable(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    collect_format: Incomplete
    collect_value: Incomplete
    lcopy_format: Incomplete
    lcopy_value: Incomplete
    value_copy: Incomplete
    value_free: Incomplete
    value_init: Incomplete
    value_peek_pointer: Incomplete

class Value(Value):
    def copy(self, dest_value: GObject.Value): ...
    def dup_object(self) -> GObject.Object: ...
    def dup_string(self) -> str: ...
    def dup_variant(self) -> Union[GLib.Variant, None]: ...
    def fits_pointer(self) -> bool: ...
    def get_boolean(self) -> bool: ...
    def get_boxed(self) -> None: ...
    def get_char(self) -> int: ...
    def get_double(self) -> float: ...
    def get_enum(self) -> int: ...
    def get_flags(self) -> int: ...
    def get_float(self) -> float: ...
    def get_gtype(self) -> GType: ...
    def get_int(self) -> int: ...
    def get_int64(self) -> int: ...
    def get_long(self) -> int: ...
    def get_object(self) -> GObject.Object: ...
    def get_param(self) -> GObject.ParamSpec: ...
    def get_pointer(self) -> None: ...
    def get_schar(self) -> int: ...
    def get_string(self) -> str: ...
    def get_uchar(self) -> int: ...
    def get_uint(self) -> int: ...
    def get_uint64(self) -> int: ...
    def get_ulong(self) -> int: ...
    def get_value(self) -> None: ...
    def get_variant(self) -> Union[GLib.Variant, None]: ...
    def init(self, g_type: GType) -> GObject.Value: ...
    def init_from_instance(self, instance: GObject.TypeInstance): ...
    def peek_pointer(self) -> None: ...
    def reset(self) -> GObject.Value: ...
    def set_boolean(self, v_boolean: bool): ...
    def set_boxed(self, boxed) -> None: ...
    def set_boxed_take_ownership(self, v_boxed: Incomplete | None = ...) -> None: ...
    def set_char(self, v_char: int): ...
    def set_double(self, v_double: float): ...
    def set_enum(self, v_enum: int): ...
    def set_flags(self, v_flags: int): ...
    def set_float(self, v_float: float): ...
    def set_gtype(self, v_gtype: GType): ...
    def set_instance(self, instance: Incomplete | None = ...) -> None: ...
    def set_int(self, v_int: int): ...
    def set_int64(self, v_int64: int): ...
    def set_interned_string(self, v_string: str = ...): ...
    def set_long(self, v_long: int): ...
    def set_object(self, v_object: GObject.Object = ...): ...
    def set_param(self, param: GObject.ParamSpec = ...): ...
    def set_pointer(self, v_pointer: Incomplete | None = ...) -> None: ...
    def set_schar(self, v_char: int): ...
    def set_static_boxed(self, v_boxed: Incomplete | None = ...) -> None: ...
    def set_static_string(self, v_string: str = ...): ...
    def set_string(self, v_string: str = ...): ...
    def set_string_take_ownership(self, v_string: str = ...): ...
    def set_uchar(self, v_uchar: int): ...
    def set_uint(self, v_uint: int): ...
    def set_uint64(self, v_uint64: int): ...
    def set_ulong(self, v_ulong: int): ...
    def set_value(self, py_value) -> None: ...
    def set_variant(self, variant: GLib.Variant = ...): ...
    def take_boxed(self, v_boxed: Incomplete | None = ...) -> None: ...
    def take_string(self, v_string: str = ...): ...
    def take_variant(self, variant: GLib.Variant = ...): ...
    def transform(self, dest_value: GObject.Value) -> bool: ...
    @staticmethod
    def type_compatible(src_type: GType, dest_type: GType) -> bool: ...
    @staticmethod
    def type_transformable(src_type: GType, dest_type: GType) -> bool: ...
    def unset(self) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, value_type: Incomplete | None = ..., py_value: Incomplete | None = ...) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    data: Incomplete
    g_type: Incomplete

class ValueArray(__gi.Boxed):
    def append(self, value: GObject.Value) -> GObject.ValueArray: ...
    def copy(self) -> GObject.ValueArray: ...
    def get_nth(self, index_: int) -> GObject.Value: ...
    def insert(self, index_: int, value: GObject.Value) -> GObject.ValueArray: ...
    @staticmethod
    def new(n_prealloced: int) -> GObject.ValueArray: ...
    def prepend(self, value: GObject.Value) -> GObject.ValueArray: ...
    def remove(self, index_: int) -> GObject.ValueArray: ...
    def sort(self, compare_func: GLib.CompareDataFunc, user_data) -> GObject.ValueArray: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    n_prealloced: Incomplete
    n_values: Incomplete
    values: Incomplete

class WeakRef(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class _Value__data__union(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    v_double: Incomplete
    v_float: Incomplete
    v_int: Incomplete
    v_int64: Incomplete
    v_long: Incomplete
    v_pointer: Incomplete
    v_uint: Incomplete
    v_uint64: Incomplete
    v_ulong: Incomplete

class __class__(__gi_overrides.OverridesProxyModule):
    def __delattr__(self, name) -> None: ...
    def __dir__(self) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getattr__(self, name) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, introspection_module) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __annotations__: Incomplete

features: Incomplete
glib_version: Incomplete
pygobject_version: Incomplete
TYPE_BOOLEAN: Incomplete
TYPE_BOXED: Incomplete
TYPE_CHAR: Incomplete
TYPE_DOUBLE: Incomplete
TYPE_ENUM: Incomplete
TYPE_FLAGS: Incomplete
TYPE_FLOAT: Incomplete
TYPE_GSTRING: Incomplete
TYPE_GTYPE: Incomplete
TYPE_INT: Incomplete
TYPE_INT64: Incomplete
TYPE_INTERFACE: Incomplete
TYPE_INVALID: Incomplete
TYPE_LONG: Incomplete
TYPE_NONE: Incomplete
TYPE_OBJECT: Incomplete
TYPE_PARAM: Incomplete
TYPE_POINTER: Incomplete
TYPE_PYOBJECT: Incomplete
TYPE_STRING: Incomplete
TYPE_STRV: Incomplete
TYPE_UCHAR: Incomplete
TYPE_UINT: Incomplete
TYPE_UINT64: Incomplete
TYPE_ULONG: Incomplete
TYPE_UNICHAR = TYPE_UINT
TYPE_VALUE: Incomplete
TYPE_VARIANT: Incomplete
__annotations__: Incomplete
__loader__: Incomplete
__path__: Incomplete
__spec__: Incomplete
