import gi as __gi
import gi.overrides as __gi_overrides
import gi.overrides.GObject as __gi_overrides_GObject
import gi.repository.Gio as __gi_repository_Gio
import gobject as __gobject
from _typeshed import Incomplete


BUTTON_MIDDLE: int
BUTTON_PRIMARY: int
BUTTON_SECONDARY: int
CURRENT_TIME: int
EVENT_PROPAGATE: bool
EVENT_STOP: bool
KEY_0: int
KEY_1: int
KEY_2: int
KEY_3: int
KEY_3270_AltCursor: int
KEY_3270_Attn: int
KEY_3270_BackTab: int
KEY_3270_ChangeScreen: int
KEY_3270_Copy: int
KEY_3270_CursorBlink: int
KEY_3270_CursorSelect: int
KEY_3270_DeleteWord: int
KEY_3270_Duplicate: int
KEY_3270_Enter: int
KEY_3270_EraseEOF: int
KEY_3270_EraseInput: int
KEY_3270_ExSelect: int
KEY_3270_FieldMark: int
KEY_3270_Ident: int
KEY_3270_Jump: int
KEY_3270_KeyClick: int
KEY_3270_Left2: int
KEY_3270_PA1: int
KEY_3270_PA2: int
KEY_3270_PA3: int
KEY_3270_Play: int
KEY_3270_PrintScreen: int
KEY_3270_Quit: int
KEY_3270_Record: int
KEY_3270_Reset: int
KEY_3270_Right2: int
KEY_3270_Rule: int
KEY_3270_Setup: int
KEY_3270_Test: int
KEY_4: int
KEY_5: int
KEY_6: int
KEY_7: int
KEY_8: int
KEY_9: int
KEY_A: int
KEY_a: int
KEY_Aacute: int
KEY_aacute: int
KEY_Abelowdot: int
KEY_abelowdot: int
KEY_abovedot: int
KEY_Abreve: int
KEY_abreve: int
KEY_Abreveacute: int
KEY_abreveacute: int
KEY_Abrevebelowdot: int
KEY_abrevebelowdot: int
KEY_Abrevegrave: int
KEY_abrevegrave: int
KEY_Abrevehook: int
KEY_abrevehook: int
KEY_Abrevetilde: int
KEY_abrevetilde: int
KEY_AccessX_Enable: int
KEY_AccessX_Feedback_Enable: int
KEY_Acircumflex: int
KEY_acircumflex: int
KEY_Acircumflexacute: int
KEY_acircumflexacute: int
KEY_Acircumflexbelowdot: int
KEY_acircumflexbelowdot: int
KEY_Acircumflexgrave: int
KEY_acircumflexgrave: int
KEY_Acircumflexhook: int
KEY_acircumflexhook: int
KEY_Acircumflextilde: int
KEY_acircumflextilde: int
KEY_acute: int
KEY_AddFavorite: int
KEY_Adiaeresis: int
KEY_adiaeresis: int
KEY_AE: int
KEY_ae: int
KEY_Agrave: int
KEY_agrave: int
KEY_Ahook: int
KEY_ahook: int
KEY_Alt_L: int
KEY_Alt_R: int
KEY_Amacron: int
KEY_amacron: int
KEY_ampersand: int
KEY_Aogonek: int
KEY_aogonek: int
KEY_apostrophe: int
KEY_ApplicationLeft: int
KEY_ApplicationRight: int
KEY_approxeq: int
KEY_approximate: int
KEY_Arabic_0: int
KEY_Arabic_1: int
KEY_Arabic_2: int
KEY_Arabic_3: int
KEY_Arabic_4: int
KEY_Arabic_5: int
KEY_Arabic_6: int
KEY_Arabic_7: int
KEY_Arabic_8: int
KEY_Arabic_9: int
KEY_Arabic_ain: int
KEY_Arabic_alef: int
KEY_Arabic_alefmaksura: int
KEY_Arabic_beh: int
KEY_Arabic_comma: int
KEY_Arabic_dad: int
KEY_Arabic_dal: int
KEY_Arabic_damma: int
KEY_Arabic_dammatan: int
KEY_Arabic_ddal: int
KEY_Arabic_farsi_yeh: int
KEY_Arabic_fatha: int
KEY_Arabic_fathatan: int
KEY_Arabic_feh: int
KEY_Arabic_fullstop: int
KEY_Arabic_gaf: int
KEY_Arabic_ghain: int
KEY_Arabic_ha: int
KEY_Arabic_hah: int
KEY_Arabic_hamza: int
KEY_Arabic_hamzaonalef: int
KEY_Arabic_hamzaonwaw: int
KEY_Arabic_hamzaonyeh: int
KEY_Arabic_hamzaunderalef: int
KEY_Arabic_hamza_above: int
KEY_Arabic_hamza_below: int
KEY_Arabic_heh: int
KEY_Arabic_heh_doachashmee: int
KEY_Arabic_heh_goal: int
KEY_Arabic_jeem: int
KEY_Arabic_jeh: int
KEY_Arabic_kaf: int
KEY_Arabic_kasra: int
KEY_Arabic_kasratan: int
KEY_Arabic_keheh: int
KEY_Arabic_khah: int
KEY_Arabic_lam: int
KEY_Arabic_maddaonalef: int
KEY_Arabic_madda_above: int
KEY_Arabic_meem: int
KEY_Arabic_noon: int
KEY_Arabic_noon_ghunna: int
KEY_Arabic_peh: int
KEY_Arabic_percent: int
KEY_Arabic_qaf: int
KEY_Arabic_question_mark: int
KEY_Arabic_ra: int
KEY_Arabic_rreh: int
KEY_Arabic_sad: int
KEY_Arabic_seen: int
KEY_Arabic_semicolon: int
KEY_Arabic_shadda: int
KEY_Arabic_sheen: int
KEY_Arabic_sukun: int
KEY_Arabic_superscript_alef: int
KEY_Arabic_switch: int
KEY_Arabic_tah: int
KEY_Arabic_tatweel: int
KEY_Arabic_tcheh: int
KEY_Arabic_teh: int
KEY_Arabic_tehmarbuta: int
KEY_Arabic_thal: int
KEY_Arabic_theh: int
KEY_Arabic_tteh: int
KEY_Arabic_veh: int
KEY_Arabic_waw: int
KEY_Arabic_yeh: int
KEY_Arabic_yeh_baree: int
KEY_Arabic_zah: int
KEY_Arabic_zain: int
KEY_Aring: int
KEY_aring: int
KEY_Armenian_accent: int
KEY_Armenian_amanak: int
KEY_Armenian_apostrophe: int
KEY_Armenian_AT: int
KEY_Armenian_at: int
KEY_Armenian_AYB: int
KEY_Armenian_ayb: int
KEY_Armenian_BEN: int
KEY_Armenian_ben: int
KEY_Armenian_but: int
KEY_Armenian_CHA: int
KEY_Armenian_cha: int
KEY_Armenian_DA: int
KEY_Armenian_da: int
KEY_Armenian_DZA: int
KEY_Armenian_dza: int
KEY_Armenian_E: int
KEY_Armenian_e: int
KEY_Armenian_exclam: int
KEY_Armenian_FE: int
KEY_Armenian_fe: int
KEY_Armenian_full_stop: int
KEY_Armenian_GHAT: int
KEY_Armenian_ghat: int
KEY_Armenian_GIM: int
KEY_Armenian_gim: int
KEY_Armenian_HI: int
KEY_Armenian_hi: int
KEY_Armenian_HO: int
KEY_Armenian_ho: int
KEY_Armenian_hyphen: int
KEY_Armenian_INI: int
KEY_Armenian_ini: int
KEY_Armenian_JE: int
KEY_Armenian_je: int
KEY_Armenian_KE: int
KEY_Armenian_ke: int
KEY_Armenian_KEN: int
KEY_Armenian_ken: int
KEY_Armenian_KHE: int
KEY_Armenian_khe: int
KEY_Armenian_ligature_ew: int
KEY_Armenian_LYUN: int
KEY_Armenian_lyun: int
KEY_Armenian_MEN: int
KEY_Armenian_men: int
KEY_Armenian_NU: int
KEY_Armenian_nu: int
KEY_Armenian_O: int
KEY_Armenian_o: int
KEY_Armenian_paruyk: int
KEY_Armenian_PE: int
KEY_Armenian_pe: int
KEY_Armenian_PYUR: int
KEY_Armenian_pyur: int
KEY_Armenian_question: int
KEY_Armenian_RA: int
KEY_Armenian_ra: int
KEY_Armenian_RE: int
KEY_Armenian_re: int
KEY_Armenian_SE: int
KEY_Armenian_se: int
KEY_Armenian_separation_mark: int
KEY_Armenian_SHA: int
KEY_Armenian_sha: int
KEY_Armenian_shesht: int
KEY_Armenian_TCHE: int
KEY_Armenian_tche: int
KEY_Armenian_TO: int
KEY_Armenian_to: int
KEY_Armenian_TSA: int
KEY_Armenian_tsa: int
KEY_Armenian_TSO: int
KEY_Armenian_tso: int
KEY_Armenian_TYUN: int
KEY_Armenian_tyun: int
KEY_Armenian_verjaket: int
KEY_Armenian_VEV: int
KEY_Armenian_vev: int
KEY_Armenian_VO: int
KEY_Armenian_vo: int
KEY_Armenian_VYUN: int
KEY_Armenian_vyun: int
KEY_Armenian_YECH: int
KEY_Armenian_yech: int
KEY_Armenian_yentamna: int
KEY_Armenian_ZA: int
KEY_Armenian_za: int
KEY_Armenian_ZHE: int
KEY_Armenian_zhe: int
KEY_asciicircum: int
KEY_asciitilde: int
KEY_asterisk: int
KEY_at: int
KEY_Atilde: int
KEY_atilde: int
KEY_AudibleBell_Enable: int
KEY_AudioCycleTrack: int
KEY_AudioForward: int
KEY_AudioLowerVolume: int
KEY_AudioMedia: int
KEY_AudioMicMute: int
KEY_AudioMute: int
KEY_AudioNext: int
KEY_AudioPause: int
KEY_AudioPlay: int
KEY_AudioPreset: int
KEY_AudioPrev: int
KEY_AudioRaiseVolume: int
KEY_AudioRandomPlay: int
KEY_AudioRecord: int
KEY_AudioRepeat: int
KEY_AudioRewind: int
KEY_AudioStop: int
KEY_Away: int
KEY_B: int
KEY_b: int
KEY_Babovedot: int
KEY_babovedot: int
KEY_Back: int
KEY_BackForward: int
KEY_backslash: int
KEY_BackSpace: int
KEY_ballotcross: int
KEY_bar: int
KEY_Battery: int
KEY_because: int
KEY_Begin: int
KEY_blank: int
KEY_Blue: int
KEY_Bluetooth: int
KEY_Book: int
KEY_botintegral: int
KEY_botleftparens: int
KEY_botleftsqbracket: int
KEY_botleftsummation: int
KEY_botrightparens: int
KEY_botrightsqbracket: int
KEY_botrightsummation: int
KEY_bott: int
KEY_botvertsummationconnector: int
KEY_BounceKeys_Enable: int
KEY_braceleft: int
KEY_braceright: int
KEY_bracketleft: int
KEY_bracketright: int
KEY_braille_blank: int
KEY_braille_dots_1: int
KEY_braille_dots_12: int
KEY_braille_dots_123: int
KEY_braille_dots_1234: int
KEY_braille_dots_12345: int
KEY_braille_dots_123456: int
KEY_braille_dots_1234567: int
KEY_braille_dots_12345678: int
KEY_braille_dots_1234568: int
KEY_braille_dots_123457: int
KEY_braille_dots_1234578: int
KEY_braille_dots_123458: int
KEY_braille_dots_12346: int
KEY_braille_dots_123467: int
KEY_braille_dots_1234678: int
KEY_braille_dots_123468: int
KEY_braille_dots_12347: int
KEY_braille_dots_123478: int
KEY_braille_dots_12348: int
KEY_braille_dots_1235: int
KEY_braille_dots_12356: int
KEY_braille_dots_123567: int
KEY_braille_dots_1235678: int
KEY_braille_dots_123568: int
KEY_braille_dots_12357: int
KEY_braille_dots_123578: int
KEY_braille_dots_12358: int
KEY_braille_dots_1236: int
KEY_braille_dots_12367: int
KEY_braille_dots_123678: int
KEY_braille_dots_12368: int
KEY_braille_dots_1237: int
KEY_braille_dots_12378: int
KEY_braille_dots_1238: int
KEY_braille_dots_124: int
KEY_braille_dots_1245: int
KEY_braille_dots_12456: int
KEY_braille_dots_124567: int
KEY_braille_dots_1245678: int
KEY_braille_dots_124568: int
KEY_braille_dots_12457: int
KEY_braille_dots_124578: int
KEY_braille_dots_12458: int
KEY_braille_dots_1246: int
KEY_braille_dots_12467: int
KEY_braille_dots_124678: int
KEY_braille_dots_12468: int
KEY_braille_dots_1247: int
KEY_braille_dots_12478: int
KEY_braille_dots_1248: int
KEY_braille_dots_125: int
KEY_braille_dots_1256: int
KEY_braille_dots_12567: int
KEY_braille_dots_125678: int
KEY_braille_dots_12568: int
KEY_braille_dots_1257: int
KEY_braille_dots_12578: int
KEY_braille_dots_1258: int
KEY_braille_dots_126: int
KEY_braille_dots_1267: int
KEY_braille_dots_12678: int
KEY_braille_dots_1268: int
KEY_braille_dots_127: int
KEY_braille_dots_1278: int
KEY_braille_dots_128: int
KEY_braille_dots_13: int
KEY_braille_dots_134: int
KEY_braille_dots_1345: int
KEY_braille_dots_13456: int
KEY_braille_dots_134567: int
KEY_braille_dots_1345678: int
KEY_braille_dots_134568: int
KEY_braille_dots_13457: int
KEY_braille_dots_134578: int
KEY_braille_dots_13458: int
KEY_braille_dots_1346: int
KEY_braille_dots_13467: int
KEY_braille_dots_134678: int
KEY_braille_dots_13468: int
KEY_braille_dots_1347: int
KEY_braille_dots_13478: int
KEY_braille_dots_1348: int
KEY_braille_dots_135: int
KEY_braille_dots_1356: int
KEY_braille_dots_13567: int
KEY_braille_dots_135678: int
KEY_braille_dots_13568: int
KEY_braille_dots_1357: int
KEY_braille_dots_13578: int
KEY_braille_dots_1358: int
KEY_braille_dots_136: int
KEY_braille_dots_1367: int
KEY_braille_dots_13678: int
KEY_braille_dots_1368: int
KEY_braille_dots_137: int
KEY_braille_dots_1378: int
KEY_braille_dots_138: int
KEY_braille_dots_14: int
KEY_braille_dots_145: int
KEY_braille_dots_1456: int
KEY_braille_dots_14567: int
KEY_braille_dots_145678: int
KEY_braille_dots_14568: int
KEY_braille_dots_1457: int
KEY_braille_dots_14578: int
KEY_braille_dots_1458: int
KEY_braille_dots_146: int
KEY_braille_dots_1467: int
KEY_braille_dots_14678: int
KEY_braille_dots_1468: int
KEY_braille_dots_147: int
KEY_braille_dots_1478: int
KEY_braille_dots_148: int
KEY_braille_dots_15: int
KEY_braille_dots_156: int
KEY_braille_dots_1567: int
KEY_braille_dots_15678: int
KEY_braille_dots_1568: int
KEY_braille_dots_157: int
KEY_braille_dots_1578: int
KEY_braille_dots_158: int
KEY_braille_dots_16: int
KEY_braille_dots_167: int
KEY_braille_dots_1678: int
KEY_braille_dots_168: int
KEY_braille_dots_17: int
KEY_braille_dots_178: int
KEY_braille_dots_18: int
KEY_braille_dots_2: int
KEY_braille_dots_23: int
KEY_braille_dots_234: int
KEY_braille_dots_2345: int
KEY_braille_dots_23456: int
KEY_braille_dots_234567: int
KEY_braille_dots_2345678: int
KEY_braille_dots_234568: int
KEY_braille_dots_23457: int
KEY_braille_dots_234578: int
KEY_braille_dots_23458: int
KEY_braille_dots_2346: int
KEY_braille_dots_23467: int
KEY_braille_dots_234678: int
KEY_braille_dots_23468: int
KEY_braille_dots_2347: int
KEY_braille_dots_23478: int
KEY_braille_dots_2348: int
KEY_braille_dots_235: int
KEY_braille_dots_2356: int
KEY_braille_dots_23567: int
KEY_braille_dots_235678: int
KEY_braille_dots_23568: int
KEY_braille_dots_2357: int
KEY_braille_dots_23578: int
KEY_braille_dots_2358: int
KEY_braille_dots_236: int
KEY_braille_dots_2367: int
KEY_braille_dots_23678: int
KEY_braille_dots_2368: int
KEY_braille_dots_237: int
KEY_braille_dots_2378: int
KEY_braille_dots_238: int
KEY_braille_dots_24: int
KEY_braille_dots_245: int
KEY_braille_dots_2456: int
KEY_braille_dots_24567: int
KEY_braille_dots_245678: int
KEY_braille_dots_24568: int
KEY_braille_dots_2457: int
KEY_braille_dots_24578: int
KEY_braille_dots_2458: int
KEY_braille_dots_246: int
KEY_braille_dots_2467: int
KEY_braille_dots_24678: int
KEY_braille_dots_2468: int
KEY_braille_dots_247: int
KEY_braille_dots_2478: int
KEY_braille_dots_248: int
KEY_braille_dots_25: int
KEY_braille_dots_256: int
KEY_braille_dots_2567: int
KEY_braille_dots_25678: int
KEY_braille_dots_2568: int
KEY_braille_dots_257: int
KEY_braille_dots_2578: int
KEY_braille_dots_258: int
KEY_braille_dots_26: int
KEY_braille_dots_267: int
KEY_braille_dots_2678: int
KEY_braille_dots_268: int
KEY_braille_dots_27: int
KEY_braille_dots_278: int
KEY_braille_dots_28: int
KEY_braille_dots_3: int
KEY_braille_dots_34: int
KEY_braille_dots_345: int
KEY_braille_dots_3456: int
KEY_braille_dots_34567: int
KEY_braille_dots_345678: int
KEY_braille_dots_34568: int
KEY_braille_dots_3457: int
KEY_braille_dots_34578: int
KEY_braille_dots_3458: int
KEY_braille_dots_346: int
KEY_braille_dots_3467: int
KEY_braille_dots_34678: int
KEY_braille_dots_3468: int
KEY_braille_dots_347: int
KEY_braille_dots_3478: int
KEY_braille_dots_348: int
KEY_braille_dots_35: int
KEY_braille_dots_356: int
KEY_braille_dots_3567: int
KEY_braille_dots_35678: int
KEY_braille_dots_3568: int
KEY_braille_dots_357: int
KEY_braille_dots_3578: int
KEY_braille_dots_358: int
KEY_braille_dots_36: int
KEY_braille_dots_367: int
KEY_braille_dots_3678: int
KEY_braille_dots_368: int
KEY_braille_dots_37: int
KEY_braille_dots_378: int
KEY_braille_dots_38: int
KEY_braille_dots_4: int
KEY_braille_dots_45: int
KEY_braille_dots_456: int
KEY_braille_dots_4567: int
KEY_braille_dots_45678: int
KEY_braille_dots_4568: int
KEY_braille_dots_457: int
KEY_braille_dots_4578: int
KEY_braille_dots_458: int
KEY_braille_dots_46: int
KEY_braille_dots_467: int
KEY_braille_dots_4678: int
KEY_braille_dots_468: int
KEY_braille_dots_47: int
KEY_braille_dots_478: int
KEY_braille_dots_48: int
KEY_braille_dots_5: int
KEY_braille_dots_56: int
KEY_braille_dots_567: int
KEY_braille_dots_5678: int
KEY_braille_dots_568: int
KEY_braille_dots_57: int
KEY_braille_dots_578: int
KEY_braille_dots_58: int
KEY_braille_dots_6: int
KEY_braille_dots_67: int
KEY_braille_dots_678: int
KEY_braille_dots_68: int
KEY_braille_dots_7: int
KEY_braille_dots_78: int
KEY_braille_dots_8: int
KEY_braille_dot_1: int
KEY_braille_dot_10: int
KEY_braille_dot_2: int
KEY_braille_dot_3: int
KEY_braille_dot_4: int
KEY_braille_dot_5: int
KEY_braille_dot_6: int
KEY_braille_dot_7: int
KEY_braille_dot_8: int
KEY_braille_dot_9: int
KEY_Break: int
KEY_breve: int
KEY_BrightnessAdjust: int
KEY_brokenbar: int
KEY_Byelorussian_SHORTU: int
KEY_Byelorussian_shortu: int
KEY_C: int
KEY_c: int
KEY_Cabovedot: int
KEY_cabovedot: int
KEY_Cacute: int
KEY_cacute: int
KEY_Calculator: int
KEY_Calendar: int
KEY_Cancel: int
KEY_Caps_Lock: int
KEY_careof: int
KEY_caret: int
KEY_caron: int
KEY_Ccaron: int
KEY_ccaron: int
KEY_Ccedilla: int
KEY_ccedilla: int
KEY_Ccircumflex: int
KEY_ccircumflex: int
KEY_CD: int
KEY_cedilla: int
KEY_cent: int
KEY_CH: int
KEY_Ch: int
KEY_ch: int
KEY_checkerboard: int
KEY_checkmark: int
KEY_circle: int
KEY_Clear: int
KEY_ClearGrab: int
KEY_Close: int
KEY_club: int
KEY_Codeinput: int
KEY_colon: int
KEY_ColonSign: int
KEY_comma: int
KEY_Community: int
KEY_containsas: int
KEY_ContrastAdjust: int
KEY_Control_L: int
KEY_Control_R: int
KEY_Copy: int
KEY_copyright: int
KEY_cr: int
KEY_crossinglines: int
KEY_CruzeiroSign: int
KEY_cuberoot: int
KEY_currency: int
KEY_cursor: int
KEY_Cut: int
KEY_CycleAngle: int
KEY_Cyrillic_A: int
KEY_Cyrillic_a: int
KEY_Cyrillic_BE: int
KEY_Cyrillic_be: int
KEY_Cyrillic_CHE: int
KEY_Cyrillic_che: int
KEY_Cyrillic_CHE_descender: int
KEY_Cyrillic_che_descender: int
KEY_Cyrillic_CHE_vertstroke: int
KEY_Cyrillic_che_vertstroke: int
KEY_Cyrillic_DE: int
KEY_Cyrillic_de: int
KEY_Cyrillic_DZHE: int
KEY_Cyrillic_dzhe: int
KEY_Cyrillic_E: int
KEY_Cyrillic_e: int
KEY_Cyrillic_EF: int
KEY_Cyrillic_ef: int
KEY_Cyrillic_EL: int
KEY_Cyrillic_el: int
KEY_Cyrillic_EM: int
KEY_Cyrillic_em: int
KEY_Cyrillic_EN: int
KEY_Cyrillic_en: int
KEY_Cyrillic_EN_descender: int
KEY_Cyrillic_en_descender: int
KEY_Cyrillic_ER: int
KEY_Cyrillic_er: int
KEY_Cyrillic_ES: int
KEY_Cyrillic_es: int
KEY_Cyrillic_GHE: int
KEY_Cyrillic_ghe: int
KEY_Cyrillic_GHE_bar: int
KEY_Cyrillic_ghe_bar: int
KEY_Cyrillic_HA: int
KEY_Cyrillic_ha: int
KEY_Cyrillic_HARDSIGN: int
KEY_Cyrillic_hardsign: int
KEY_Cyrillic_HA_descender: int
KEY_Cyrillic_ha_descender: int
KEY_Cyrillic_I: int
KEY_Cyrillic_i: int
KEY_Cyrillic_IE: int
KEY_Cyrillic_ie: int
KEY_Cyrillic_IO: int
KEY_Cyrillic_io: int
KEY_Cyrillic_I_macron: int
KEY_Cyrillic_i_macron: int
KEY_Cyrillic_JE: int
KEY_Cyrillic_je: int
KEY_Cyrillic_KA: int
KEY_Cyrillic_ka: int
KEY_Cyrillic_KA_descender: int
KEY_Cyrillic_ka_descender: int
KEY_Cyrillic_KA_vertstroke: int
KEY_Cyrillic_ka_vertstroke: int
KEY_Cyrillic_LJE: int
KEY_Cyrillic_lje: int
KEY_Cyrillic_NJE: int
KEY_Cyrillic_nje: int
KEY_Cyrillic_O: int
KEY_Cyrillic_o: int
KEY_Cyrillic_O_bar: int
KEY_Cyrillic_o_bar: int
KEY_Cyrillic_PE: int
KEY_Cyrillic_pe: int
KEY_Cyrillic_SCHWA: int
KEY_Cyrillic_schwa: int
KEY_Cyrillic_SHA: int
KEY_Cyrillic_sha: int
KEY_Cyrillic_SHCHA: int
KEY_Cyrillic_shcha: int
KEY_Cyrillic_SHHA: int
KEY_Cyrillic_shha: int
KEY_Cyrillic_SHORTI: int
KEY_Cyrillic_shorti: int
KEY_Cyrillic_SOFTSIGN: int
KEY_Cyrillic_softsign: int
KEY_Cyrillic_TE: int
KEY_Cyrillic_te: int
KEY_Cyrillic_TSE: int
KEY_Cyrillic_tse: int
KEY_Cyrillic_U: int
KEY_Cyrillic_u: int
KEY_Cyrillic_U_macron: int
KEY_Cyrillic_u_macron: int
KEY_Cyrillic_U_straight: int
KEY_Cyrillic_u_straight: int
KEY_Cyrillic_U_straight_bar: int
KEY_Cyrillic_u_straight_bar: int
KEY_Cyrillic_VE: int
KEY_Cyrillic_ve: int
KEY_Cyrillic_YA: int
KEY_Cyrillic_ya: int
KEY_Cyrillic_YERU: int
KEY_Cyrillic_yeru: int
KEY_Cyrillic_YU: int
KEY_Cyrillic_yu: int
KEY_Cyrillic_ZE: int
KEY_Cyrillic_ze: int
KEY_Cyrillic_ZHE: int
KEY_Cyrillic_zhe: int
KEY_Cyrillic_ZHE_descender: int
KEY_Cyrillic_zhe_descender: int
KEY_C_H: int
KEY_C_h: int
KEY_c_h: int
KEY_D: int
KEY_d: int
KEY_Dabovedot: int
KEY_dabovedot: int
KEY_dagger: int
KEY_Dcaron: int
KEY_dcaron: int
KEY_dead_A: int
KEY_dead_a: int
KEY_dead_abovecomma: int
KEY_dead_abovedot: int
KEY_dead_abovereversedcomma: int
KEY_dead_abovering: int
KEY_dead_aboveverticalline: int
KEY_dead_acute: int
KEY_dead_belowbreve: int
KEY_dead_belowcircumflex: int
KEY_dead_belowcomma: int
KEY_dead_belowdiaeresis: int
KEY_dead_belowdot: int
KEY_dead_belowmacron: int
KEY_dead_belowring: int
KEY_dead_belowtilde: int
KEY_dead_belowverticalline: int
KEY_dead_breve: int
KEY_dead_capital_schwa: int
KEY_dead_caron: int
KEY_dead_cedilla: int
KEY_dead_circumflex: int
KEY_dead_currency: int
KEY_dead_dasia: int
KEY_dead_diaeresis: int
KEY_dead_doubleacute: int
KEY_dead_doublegrave: int
KEY_dead_E: int
KEY_dead_e: int
KEY_dead_grave: int
KEY_dead_greek: int
KEY_dead_hook: int
KEY_dead_horn: int
KEY_dead_I: int
KEY_dead_i: int
KEY_dead_invertedbreve: int
KEY_dead_iota: int
KEY_dead_longsolidusoverlay: int
KEY_dead_lowline: int
KEY_dead_macron: int
KEY_dead_O: int
KEY_dead_o: int
KEY_dead_ogonek: int
KEY_dead_perispomeni: int
KEY_dead_psili: int
KEY_dead_semivoiced_sound: int
KEY_dead_small_schwa: int
KEY_dead_stroke: int
KEY_dead_tilde: int
KEY_dead_U: int
KEY_dead_u: int
KEY_dead_voiced_sound: int
KEY_decimalpoint: int
KEY_degree: int
KEY_Delete: int
KEY_diaeresis: int
KEY_diamond: int
KEY_digitspace: int
KEY_dintegral: int
KEY_Display: int
KEY_division: int
KEY_Documents: int
KEY_dollar: int
KEY_DongSign: int
KEY_DOS: int
KEY_doubbaselinedot: int
KEY_doubleacute: int
KEY_doubledagger: int
KEY_doublelowquotemark: int
KEY_Down: int
KEY_downarrow: int
KEY_downcaret: int
KEY_downshoe: int
KEY_downstile: int
KEY_downtack: int
KEY_Dstroke: int
KEY_dstroke: int
KEY_E: int
KEY_e: int
KEY_Eabovedot: int
KEY_eabovedot: int
KEY_Eacute: int
KEY_eacute: int
KEY_Ebelowdot: int
KEY_ebelowdot: int
KEY_Ecaron: int
KEY_ecaron: int
KEY_Ecircumflex: int
KEY_ecircumflex: int
KEY_Ecircumflexacute: int
KEY_ecircumflexacute: int
KEY_Ecircumflexbelowdot: int
KEY_ecircumflexbelowdot: int
KEY_Ecircumflexgrave: int
KEY_ecircumflexgrave: int
KEY_Ecircumflexhook: int
KEY_ecircumflexhook: int
KEY_Ecircumflextilde: int
KEY_ecircumflextilde: int
KEY_EcuSign: int
KEY_Ediaeresis: int
KEY_ediaeresis: int
KEY_Egrave: int
KEY_egrave: int
KEY_Ehook: int
KEY_ehook: int
KEY_eightsubscript: int
KEY_eightsuperior: int
KEY_Eisu_Shift: int
KEY_Eisu_toggle: int
KEY_Eject: int
KEY_elementof: int
KEY_ellipsis: int
KEY_em3space: int
KEY_em4space: int
KEY_Emacron: int
KEY_emacron: int
KEY_emdash: int
KEY_emfilledcircle: int
KEY_emfilledrect: int
KEY_emopencircle: int
KEY_emopenrectangle: int
KEY_emptyset: int
KEY_emspace: int
KEY_End: int
KEY_endash: int
KEY_enfilledcircbullet: int
KEY_enfilledsqbullet: int
KEY_ENG: int
KEY_eng: int
KEY_enopencircbullet: int
KEY_enopensquarebullet: int
KEY_enspace: int
KEY_Eogonek: int
KEY_eogonek: int
KEY_equal: int
KEY_Escape: int
KEY_ETH: int
KEY_Eth: int
KEY_eth: int
KEY_Etilde: int
KEY_etilde: int
KEY_EuroSign: int
KEY_Excel: int
KEY_exclam: int
KEY_exclamdown: int
KEY_Execute: int
KEY_Explorer: int
KEY_EZH: int
KEY_ezh: int
KEY_F: int
KEY_f: int
KEY_F1: int
KEY_F10: int
KEY_F11: int
KEY_F12: int
KEY_F13: int
KEY_F14: int
KEY_F15: int
KEY_F16: int
KEY_F17: int
KEY_F18: int
KEY_F19: int
KEY_F2: int
KEY_F20: int
KEY_F21: int
KEY_F22: int
KEY_F23: int
KEY_F24: int
KEY_F25: int
KEY_F26: int
KEY_F27: int
KEY_F28: int
KEY_F29: int
KEY_F3: int
KEY_F30: int
KEY_F31: int
KEY_F32: int
KEY_F33: int
KEY_F34: int
KEY_F35: int
KEY_F4: int
KEY_F5: int
KEY_F6: int
KEY_F7: int
KEY_F8: int
KEY_F9: int
KEY_Fabovedot: int
KEY_fabovedot: int
KEY_Farsi_0: int
KEY_Farsi_1: int
KEY_Farsi_2: int
KEY_Farsi_3: int
KEY_Farsi_4: int
KEY_Farsi_5: int
KEY_Farsi_6: int
KEY_Farsi_7: int
KEY_Farsi_8: int
KEY_Farsi_9: int
KEY_Farsi_yeh: int
KEY_Favorites: int
KEY_femalesymbol: int
KEY_ff: int
KEY_FFrancSign: int
KEY_figdash: int
KEY_filledlefttribullet: int
KEY_filledrectbullet: int
KEY_filledrighttribullet: int
KEY_filledtribulletdown: int
KEY_filledtribulletup: int
KEY_Finance: int
KEY_Find: int
KEY_First_Virtual_Screen: int
KEY_fiveeighths: int
KEY_fivesixths: int
KEY_fivesubscript: int
KEY_fivesuperior: int
KEY_Forward: int
KEY_fourfifths: int
KEY_foursubscript: int
KEY_foursuperior: int
KEY_fourthroot: int
KEY_FrameBack: int
KEY_FrameForward: int
KEY_function: int
KEY_G: int
KEY_g: int
KEY_Gabovedot: int
KEY_gabovedot: int
KEY_Game: int
KEY_Gbreve: int
KEY_gbreve: int
KEY_Gcaron: int
KEY_gcaron: int
KEY_Gcedilla: int
KEY_gcedilla: int
KEY_Gcircumflex: int
KEY_gcircumflex: int
KEY_Georgian_an: int
KEY_Georgian_ban: int
KEY_Georgian_can: int
KEY_Georgian_char: int
KEY_Georgian_chin: int
KEY_Georgian_cil: int
KEY_Georgian_don: int
KEY_Georgian_en: int
KEY_Georgian_fi: int
KEY_Georgian_gan: int
KEY_Georgian_ghan: int
KEY_Georgian_hae: int
KEY_Georgian_har: int
KEY_Georgian_he: int
KEY_Georgian_hie: int
KEY_Georgian_hoe: int
KEY_Georgian_in: int
KEY_Georgian_jhan: int
KEY_Georgian_jil: int
KEY_Georgian_kan: int
KEY_Georgian_khar: int
KEY_Georgian_las: int
KEY_Georgian_man: int
KEY_Georgian_nar: int
KEY_Georgian_on: int
KEY_Georgian_par: int
KEY_Georgian_phar: int
KEY_Georgian_qar: int
KEY_Georgian_rae: int
KEY_Georgian_san: int
KEY_Georgian_shin: int
KEY_Georgian_tan: int
KEY_Georgian_tar: int
KEY_Georgian_un: int
KEY_Georgian_vin: int
KEY_Georgian_we: int
KEY_Georgian_xan: int
KEY_Georgian_zen: int
KEY_Georgian_zhar: int
KEY_Go: int
KEY_grave: int
KEY_greater: int
KEY_greaterthanequal: int
KEY_Greek_accentdieresis: int
KEY_Greek_ALPHA: int
KEY_Greek_alpha: int
KEY_Greek_ALPHAaccent: int
KEY_Greek_alphaaccent: int
KEY_Greek_BETA: int
KEY_Greek_beta: int
KEY_Greek_CHI: int
KEY_Greek_chi: int
KEY_Greek_DELTA: int
KEY_Greek_delta: int
KEY_Greek_EPSILON: int
KEY_Greek_epsilon: int
KEY_Greek_EPSILONaccent: int
KEY_Greek_epsilonaccent: int
KEY_Greek_ETA: int
KEY_Greek_eta: int
KEY_Greek_ETAaccent: int
KEY_Greek_etaaccent: int
KEY_Greek_finalsmallsigma: int
KEY_Greek_GAMMA: int
KEY_Greek_gamma: int
KEY_Greek_horizbar: int
KEY_Greek_IOTA: int
KEY_Greek_iota: int
KEY_Greek_IOTAaccent: int
KEY_Greek_iotaaccent: int
KEY_Greek_iotaaccentdieresis: int
KEY_Greek_IOTAdiaeresis: int
KEY_Greek_IOTAdieresis: int
KEY_Greek_iotadieresis: int
KEY_Greek_KAPPA: int
KEY_Greek_kappa: int
KEY_Greek_LAMBDA: int
KEY_Greek_lambda: int
KEY_Greek_LAMDA: int
KEY_Greek_lamda: int
KEY_Greek_MU: int
KEY_Greek_mu: int
KEY_Greek_NU: int
KEY_Greek_nu: int
KEY_Greek_OMEGA: int
KEY_Greek_omega: int
KEY_Greek_OMEGAaccent: int
KEY_Greek_omegaaccent: int
KEY_Greek_OMICRON: int
KEY_Greek_omicron: int
KEY_Greek_OMICRONaccent: int
KEY_Greek_omicronaccent: int
KEY_Greek_PHI: int
KEY_Greek_phi: int
KEY_Greek_PI: int
KEY_Greek_pi: int
KEY_Greek_PSI: int
KEY_Greek_psi: int
KEY_Greek_RHO: int
KEY_Greek_rho: int
KEY_Greek_SIGMA: int
KEY_Greek_sigma: int
KEY_Greek_switch: int
KEY_Greek_TAU: int
KEY_Greek_tau: int
KEY_Greek_THETA: int
KEY_Greek_theta: int
KEY_Greek_UPSILON: int
KEY_Greek_upsilon: int
KEY_Greek_UPSILONaccent: int
KEY_Greek_upsilonaccent: int
KEY_Greek_upsilonaccentdieresis: int
KEY_Greek_UPSILONdieresis: int
KEY_Greek_upsilondieresis: int
KEY_Greek_XI: int
KEY_Greek_xi: int
KEY_Greek_ZETA: int
KEY_Greek_zeta: int
KEY_Green: int
KEY_guillemotleft: int
KEY_guillemotright: int
KEY_H: int
KEY_h: int
KEY_hairspace: int
KEY_Hangul: int
KEY_Hangul_A: int
KEY_Hangul_AE: int
KEY_Hangul_AraeA: int
KEY_Hangul_AraeAE: int
KEY_Hangul_Banja: int
KEY_Hangul_Cieuc: int
KEY_Hangul_Codeinput: int
KEY_Hangul_Dikeud: int
KEY_Hangul_E: int
KEY_Hangul_End: int
KEY_Hangul_EO: int
KEY_Hangul_EU: int
KEY_Hangul_Hanja: int
KEY_Hangul_Hieuh: int
KEY_Hangul_I: int
KEY_Hangul_Ieung: int
KEY_Hangul_Jamo: int
KEY_Hangul_Jeonja: int
KEY_Hangul_Jieuj: int
KEY_Hangul_J_Cieuc: int
KEY_Hangul_J_Dikeud: int
KEY_Hangul_J_Hieuh: int
KEY_Hangul_J_Ieung: int
KEY_Hangul_J_Jieuj: int
KEY_Hangul_J_Khieuq: int
KEY_Hangul_J_Kiyeog: int
KEY_Hangul_J_KiyeogSios: int
KEY_Hangul_J_KkogjiDalrinIeung: int
KEY_Hangul_J_Mieum: int
KEY_Hangul_J_Nieun: int
KEY_Hangul_J_NieunHieuh: int
KEY_Hangul_J_NieunJieuj: int
KEY_Hangul_J_PanSios: int
KEY_Hangul_J_Phieuf: int
KEY_Hangul_J_Pieub: int
KEY_Hangul_J_PieubSios: int
KEY_Hangul_J_Rieul: int
KEY_Hangul_J_RieulHieuh: int
KEY_Hangul_J_RieulKiyeog: int
KEY_Hangul_J_RieulMieum: int
KEY_Hangul_J_RieulPhieuf: int
KEY_Hangul_J_RieulPieub: int
KEY_Hangul_J_RieulSios: int
KEY_Hangul_J_RieulTieut: int
KEY_Hangul_J_Sios: int
KEY_Hangul_J_SsangKiyeog: int
KEY_Hangul_J_SsangSios: int
KEY_Hangul_J_Tieut: int
KEY_Hangul_J_YeorinHieuh: int
KEY_Hangul_Khieuq: int
KEY_Hangul_Kiyeog: int
KEY_Hangul_KiyeogSios: int
KEY_Hangul_KkogjiDalrinIeung: int
KEY_Hangul_Mieum: int
KEY_Hangul_MultipleCandidate: int
KEY_Hangul_Nieun: int
KEY_Hangul_NieunHieuh: int
KEY_Hangul_NieunJieuj: int
KEY_Hangul_O: int
KEY_Hangul_OE: int
KEY_Hangul_PanSios: int
KEY_Hangul_Phieuf: int
KEY_Hangul_Pieub: int
KEY_Hangul_PieubSios: int
KEY_Hangul_PostHanja: int
KEY_Hangul_PreHanja: int
KEY_Hangul_PreviousCandidate: int
KEY_Hangul_Rieul: int
KEY_Hangul_RieulHieuh: int
KEY_Hangul_RieulKiyeog: int
KEY_Hangul_RieulMieum: int
KEY_Hangul_RieulPhieuf: int
KEY_Hangul_RieulPieub: int
KEY_Hangul_RieulSios: int
KEY_Hangul_RieulTieut: int
KEY_Hangul_RieulYeorinHieuh: int
KEY_Hangul_Romaja: int
KEY_Hangul_SingleCandidate: int
KEY_Hangul_Sios: int
KEY_Hangul_Special: int
KEY_Hangul_SsangDikeud: int
KEY_Hangul_SsangJieuj: int
KEY_Hangul_SsangKiyeog: int
KEY_Hangul_SsangPieub: int
KEY_Hangul_SsangSios: int
KEY_Hangul_Start: int
KEY_Hangul_SunkyeongeumMieum: int
KEY_Hangul_SunkyeongeumPhieuf: int
KEY_Hangul_SunkyeongeumPieub: int
KEY_Hangul_switch: int
KEY_Hangul_Tieut: int
KEY_Hangul_U: int
KEY_Hangul_WA: int
KEY_Hangul_WAE: int
KEY_Hangul_WE: int
KEY_Hangul_WEO: int
KEY_Hangul_WI: int
KEY_Hangul_YA: int
KEY_Hangul_YAE: int
KEY_Hangul_YE: int
KEY_Hangul_YEO: int
KEY_Hangul_YeorinHieuh: int
KEY_Hangul_YI: int
KEY_Hangul_YO: int
KEY_Hangul_YU: int
KEY_Hankaku: int
KEY_Hcircumflex: int
KEY_hcircumflex: int
KEY_heart: int
KEY_hebrew_aleph: int
KEY_hebrew_ayin: int
KEY_hebrew_bet: int
KEY_hebrew_beth: int
KEY_hebrew_chet: int
KEY_hebrew_dalet: int
KEY_hebrew_daleth: int
KEY_hebrew_doublelowline: int
KEY_hebrew_finalkaph: int
KEY_hebrew_finalmem: int
KEY_hebrew_finalnun: int
KEY_hebrew_finalpe: int
KEY_hebrew_finalzade: int
KEY_hebrew_finalzadi: int
KEY_hebrew_gimel: int
KEY_hebrew_gimmel: int
KEY_hebrew_he: int
KEY_hebrew_het: int
KEY_hebrew_kaph: int
KEY_hebrew_kuf: int
KEY_hebrew_lamed: int
KEY_hebrew_mem: int
KEY_hebrew_nun: int
KEY_hebrew_pe: int
KEY_hebrew_qoph: int
KEY_hebrew_resh: int
KEY_hebrew_samech: int
KEY_hebrew_samekh: int
KEY_hebrew_shin: int
KEY_Hebrew_switch: int
KEY_hebrew_taf: int
KEY_hebrew_taw: int
KEY_hebrew_tet: int
KEY_hebrew_teth: int
KEY_hebrew_waw: int
KEY_hebrew_yod: int
KEY_hebrew_zade: int
KEY_hebrew_zadi: int
KEY_hebrew_zain: int
KEY_hebrew_zayin: int
KEY_Help: int
KEY_Henkan: int
KEY_Henkan_Mode: int
KEY_hexagram: int
KEY_Hibernate: int
KEY_Hiragana: int
KEY_Hiragana_Katakana: int
KEY_History: int
KEY_Home: int
KEY_HomePage: int
KEY_horizconnector: int
KEY_horizlinescan1: int
KEY_horizlinescan3: int
KEY_horizlinescan5: int
KEY_horizlinescan7: int
KEY_horizlinescan9: int
KEY_HotLinks: int
KEY_Hstroke: int
KEY_hstroke: int
KEY_ht: int
KEY_Hyper_L: int
KEY_Hyper_R: int
KEY_hyphen: int
KEY_I: int
KEY_i: int
KEY_Iabovedot: int
KEY_Iacute: int
KEY_iacute: int
KEY_Ibelowdot: int
KEY_ibelowdot: int
KEY_Ibreve: int
KEY_ibreve: int
KEY_Icircumflex: int
KEY_icircumflex: int
KEY_identical: int
KEY_Idiaeresis: int
KEY_idiaeresis: int
KEY_idotless: int
KEY_ifonlyif: int
KEY_Igrave: int
KEY_igrave: int
KEY_Ihook: int
KEY_ihook: int
KEY_Imacron: int
KEY_imacron: int
KEY_implies: int
KEY_includedin: int
KEY_includes: int
KEY_infinity: int
KEY_Insert: int
KEY_integral: int
KEY_intersection: int
KEY_Iogonek: int
KEY_iogonek: int
KEY_ISO_Center_Object: int
KEY_ISO_Continuous_Underline: int
KEY_ISO_Discontinuous_Underline: int
KEY_ISO_Emphasize: int
KEY_ISO_Enter: int
KEY_ISO_Fast_Cursor_Down: int
KEY_ISO_Fast_Cursor_Left: int
KEY_ISO_Fast_Cursor_Right: int
KEY_ISO_Fast_Cursor_Up: int
KEY_ISO_First_Group: int
KEY_ISO_First_Group_Lock: int
KEY_ISO_Group_Latch: int
KEY_ISO_Group_Lock: int
KEY_ISO_Group_Shift: int
KEY_ISO_Last_Group: int
KEY_ISO_Last_Group_Lock: int
KEY_ISO_Left_Tab: int
KEY_ISO_Level2_Latch: int
KEY_ISO_Level3_Latch: int
KEY_ISO_Level3_Lock: int
KEY_ISO_Level3_Shift: int
KEY_ISO_Level5_Latch: int
KEY_ISO_Level5_Lock: int
KEY_ISO_Level5_Shift: int
KEY_ISO_Lock: int
KEY_ISO_Move_Line_Down: int
KEY_ISO_Move_Line_Up: int
KEY_ISO_Next_Group: int
KEY_ISO_Next_Group_Lock: int
KEY_ISO_Partial_Line_Down: int
KEY_ISO_Partial_Line_Up: int
KEY_ISO_Partial_Space_Left: int
KEY_ISO_Partial_Space_Right: int
KEY_ISO_Prev_Group: int
KEY_ISO_Prev_Group_Lock: int
KEY_ISO_Release_Both_Margins: int
KEY_ISO_Release_Margin_Left: int
KEY_ISO_Release_Margin_Right: int
KEY_ISO_Set_Margin_Left: int
KEY_ISO_Set_Margin_Right: int
KEY_Itilde: int
KEY_itilde: int
KEY_iTouch: int
KEY_J: int
KEY_j: int
KEY_Jcircumflex: int
KEY_jcircumflex: int
KEY_jot: int
KEY_K: int
KEY_k: int
KEY_kana_A: int
KEY_kana_a: int
KEY_kana_CHI: int
KEY_kana_closingbracket: int
KEY_kana_comma: int
KEY_kana_conjunctive: int
KEY_kana_E: int
KEY_kana_e: int
KEY_kana_FU: int
KEY_kana_fullstop: int
KEY_kana_HA: int
KEY_kana_HE: int
KEY_kana_HI: int
KEY_kana_HO: int
KEY_kana_HU: int
KEY_kana_I: int
KEY_kana_i: int
KEY_kana_KA: int
KEY_kana_KE: int
KEY_kana_KI: int
KEY_kana_KO: int
KEY_kana_KU: int
KEY_Kana_Lock: int
KEY_kana_MA: int
KEY_kana_ME: int
KEY_kana_MI: int
KEY_kana_middledot: int
KEY_kana_MO: int
KEY_kana_MU: int
KEY_kana_N: int
KEY_kana_NA: int
KEY_kana_NE: int
KEY_kana_NI: int
KEY_kana_NO: int
KEY_kana_NU: int
KEY_kana_O: int
KEY_kana_o: int
KEY_kana_openingbracket: int
KEY_kana_RA: int
KEY_kana_RE: int
KEY_kana_RI: int
KEY_kana_RO: int
KEY_kana_RU: int
KEY_kana_SA: int
KEY_kana_SE: int
KEY_kana_SHI: int
KEY_Kana_Shift: int
KEY_kana_SO: int
KEY_kana_SU: int
KEY_kana_switch: int
KEY_kana_TA: int
KEY_kana_TE: int
KEY_kana_TI: int
KEY_kana_TO: int
KEY_kana_TSU: int
KEY_kana_tsu: int
KEY_kana_TU: int
KEY_kana_tu: int
KEY_kana_U: int
KEY_kana_u: int
KEY_kana_WA: int
KEY_kana_WO: int
KEY_kana_YA: int
KEY_kana_ya: int
KEY_kana_YO: int
KEY_kana_yo: int
KEY_kana_YU: int
KEY_kana_yu: int
KEY_Kanji: int
KEY_Kanji_Bangou: int
KEY_kappa: int
KEY_Katakana: int
KEY_KbdBrightnessDown: int
KEY_KbdBrightnessUp: int
KEY_KbdLightOnOff: int
KEY_Kcedilla: int
KEY_kcedilla: int
KEY_Keyboard: int
KEY_Korean_Won: int
KEY_KP_0: int
KEY_KP_1: int
KEY_KP_2: int
KEY_KP_3: int
KEY_KP_4: int
KEY_KP_5: int
KEY_KP_6: int
KEY_KP_7: int
KEY_KP_8: int
KEY_KP_9: int
KEY_KP_Add: int
KEY_KP_Begin: int
KEY_KP_Decimal: int
KEY_KP_Delete: int
KEY_KP_Divide: int
KEY_KP_Down: int
KEY_KP_End: int
KEY_KP_Enter: int
KEY_KP_Equal: int
KEY_KP_F1: int
KEY_KP_F2: int
KEY_KP_F3: int
KEY_KP_F4: int
KEY_KP_Home: int
KEY_KP_Insert: int
KEY_KP_Left: int
KEY_KP_Multiply: int
KEY_KP_Next: int
KEY_KP_Page_Down: int
KEY_KP_Page_Up: int
KEY_KP_Prior: int
KEY_KP_Right: int
KEY_KP_Separator: int
KEY_KP_Space: int
KEY_KP_Subtract: int
KEY_KP_Tab: int
KEY_KP_Up: int
KEY_kra: int
KEY_L: int
KEY_l: int
KEY_L1: int
KEY_L10: int
KEY_L2: int
KEY_L3: int
KEY_L4: int
KEY_L5: int
KEY_L6: int
KEY_L7: int
KEY_L8: int
KEY_L9: int
KEY_Lacute: int
KEY_lacute: int
KEY_Last_Virtual_Screen: int
KEY_latincross: int
KEY_Launch0: int
KEY_Launch1: int
KEY_Launch2: int
KEY_Launch3: int
KEY_Launch4: int
KEY_Launch5: int
KEY_Launch6: int
KEY_Launch7: int
KEY_Launch8: int
KEY_Launch9: int
KEY_LaunchA: int
KEY_LaunchB: int
KEY_LaunchC: int
KEY_LaunchD: int
KEY_LaunchE: int
KEY_LaunchF: int
KEY_Lbelowdot: int
KEY_lbelowdot: int
KEY_Lcaron: int
KEY_lcaron: int
KEY_Lcedilla: int
KEY_lcedilla: int
KEY_Left: int
KEY_leftanglebracket: int
KEY_leftarrow: int
KEY_leftcaret: int
KEY_leftdoublequotemark: int
KEY_leftmiddlecurlybrace: int
KEY_leftopentriangle: int
KEY_leftpointer: int
KEY_leftradical: int
KEY_leftshoe: int
KEY_leftsinglequotemark: int
KEY_leftt: int
KEY_lefttack: int
KEY_less: int
KEY_lessthanequal: int
KEY_lf: int
KEY_LightBulb: int
KEY_Linefeed: int
KEY_LiraSign: int
KEY_LogGrabInfo: int
KEY_logicaland: int
KEY_logicalor: int
KEY_LogOff: int
KEY_LogWindowTree: int
KEY_lowleftcorner: int
KEY_lowrightcorner: int
KEY_Lstroke: int
KEY_lstroke: int
KEY_M: int
KEY_m: int
KEY_Mabovedot: int
KEY_mabovedot: int
KEY_Macedonia_DSE: int
KEY_Macedonia_dse: int
KEY_Macedonia_GJE: int
KEY_Macedonia_gje: int
KEY_Macedonia_KJE: int
KEY_Macedonia_kje: int
KEY_macron: int
KEY_Mae_Koho: int
KEY_Mail: int
KEY_MailForward: int
KEY_malesymbol: int
KEY_maltesecross: int
KEY_marker: int
KEY_Market: int
KEY_masculine: int
KEY_Massyo: int
KEY_Meeting: int
KEY_Memo: int
KEY_Menu: int
KEY_MenuKB: int
KEY_MenuPB: int
KEY_Messenger: int
KEY_Meta_L: int
KEY_Meta_R: int
KEY_MillSign: int
KEY_minus: int
KEY_minutes: int
KEY_ModeLock: int
KEY_Mode_switch: int
KEY_MonBrightnessDown: int
KEY_MonBrightnessUp: int
KEY_MouseKeys_Accel_Enable: int
KEY_MouseKeys_Enable: int
KEY_mu: int
KEY_Muhenkan: int
KEY_MultipleCandidate: int
KEY_multiply: int
KEY_Multi_key: int
KEY_Music: int
KEY_musicalflat: int
KEY_musicalsharp: int
KEY_MyComputer: int
KEY_MySites: int
KEY_N: int
KEY_n: int
KEY_nabla: int
KEY_Nacute: int
KEY_nacute: int
KEY_NairaSign: int
KEY_Ncaron: int
KEY_ncaron: int
KEY_Ncedilla: int
KEY_ncedilla: int
KEY_New: int
KEY_News: int
KEY_NewSheqelSign: int
KEY_Next: int
KEY_Next_Virtual_Screen: int
KEY_Next_VMode: int
KEY_ninesubscript: int
KEY_ninesuperior: int
KEY_nl: int
KEY_nobreakspace: int
KEY_notapproxeq: int
KEY_notelementof: int
KEY_notequal: int
KEY_notidentical: int
KEY_notsign: int
KEY_Ntilde: int
KEY_ntilde: int
KEY_numbersign: int
KEY_numerosign: int
KEY_Num_Lock: int
KEY_O: int
KEY_o: int
KEY_Oacute: int
KEY_oacute: int
KEY_Obarred: int
KEY_obarred: int
KEY_Obelowdot: int
KEY_obelowdot: int
KEY_Ocaron: int
KEY_ocaron: int
KEY_Ocircumflex: int
KEY_ocircumflex: int
KEY_Ocircumflexacute: int
KEY_ocircumflexacute: int
KEY_Ocircumflexbelowdot: int
KEY_ocircumflexbelowdot: int
KEY_Ocircumflexgrave: int
KEY_ocircumflexgrave: int
KEY_Ocircumflexhook: int
KEY_ocircumflexhook: int
KEY_Ocircumflextilde: int
KEY_ocircumflextilde: int
KEY_Odiaeresis: int
KEY_odiaeresis: int
KEY_Odoubleacute: int
KEY_odoubleacute: int
KEY_OE: int
KEY_oe: int
KEY_OfficeHome: int
KEY_ogonek: int
KEY_Ograve: int
KEY_ograve: int
KEY_Ohook: int
KEY_ohook: int
KEY_Ohorn: int
KEY_ohorn: int
KEY_Ohornacute: int
KEY_ohornacute: int
KEY_Ohornbelowdot: int
KEY_ohornbelowdot: int
KEY_Ohorngrave: int
KEY_ohorngrave: int
KEY_Ohornhook: int
KEY_ohornhook: int
KEY_Ohorntilde: int
KEY_ohorntilde: int
KEY_Omacron: int
KEY_omacron: int
KEY_oneeighth: int
KEY_onefifth: int
KEY_onehalf: int
KEY_onequarter: int
KEY_onesixth: int
KEY_onesubscript: int
KEY_onesuperior: int
KEY_onethird: int
KEY_Ooblique: int
KEY_ooblique: int
KEY_Open: int
KEY_openrectbullet: int
KEY_openstar: int
KEY_opentribulletdown: int
KEY_opentribulletup: int
KEY_OpenURL: int
KEY_Option: int
KEY_ordfeminine: int
KEY_Oslash: int
KEY_oslash: int
KEY_Otilde: int
KEY_otilde: int
KEY_overbar: int
KEY_Overlay1_Enable: int
KEY_Overlay2_Enable: int
KEY_overline: int
KEY_P: int
KEY_p: int
KEY_Pabovedot: int
KEY_pabovedot: int
KEY_Page_Down: int
KEY_Page_Up: int
KEY_paragraph: int
KEY_parenleft: int
KEY_parenright: int
KEY_partdifferential: int
KEY_partialderivative: int
KEY_Paste: int
KEY_Pause: int
KEY_percent: int
KEY_period: int
KEY_periodcentered: int
KEY_permille: int
KEY_PesetaSign: int
KEY_Phone: int
KEY_phonographcopyright: int
KEY_Pictures: int
KEY_plus: int
KEY_plusminus: int
KEY_Pointer_Accelerate: int
KEY_Pointer_Button1: int
KEY_Pointer_Button2: int
KEY_Pointer_Button3: int
KEY_Pointer_Button4: int
KEY_Pointer_Button5: int
KEY_Pointer_Button_Dflt: int
KEY_Pointer_DblClick1: int
KEY_Pointer_DblClick2: int
KEY_Pointer_DblClick3: int
KEY_Pointer_DblClick4: int
KEY_Pointer_DblClick5: int
KEY_Pointer_DblClick_Dflt: int
KEY_Pointer_DfltBtnNext: int
KEY_Pointer_DfltBtnPrev: int
KEY_Pointer_Down: int
KEY_Pointer_DownLeft: int
KEY_Pointer_DownRight: int
KEY_Pointer_Drag1: int
KEY_Pointer_Drag2: int
KEY_Pointer_Drag3: int
KEY_Pointer_Drag4: int
KEY_Pointer_Drag5: int
KEY_Pointer_Drag_Dflt: int
KEY_Pointer_EnableKeys: int
KEY_Pointer_Left: int
KEY_Pointer_Right: int
KEY_Pointer_Up: int
KEY_Pointer_UpLeft: int
KEY_Pointer_UpRight: int
KEY_PowerDown: int
KEY_PowerOff: int
KEY_prescription: int
KEY_PreviousCandidate: int
KEY_Prev_Virtual_Screen: int
KEY_Prev_VMode: int
KEY_Print: int
KEY_Prior: int
KEY_prolongedsound: int
KEY_punctspace: int
KEY_Q: int
KEY_q: int
KEY_quad: int
KEY_question: int
KEY_questiondown: int
KEY_quotedbl: int
KEY_quoteleft: int
KEY_quoteright: int
KEY_R: int
KEY_r: int
KEY_R1: int
KEY_R10: int
KEY_R11: int
KEY_R12: int
KEY_R13: int
KEY_R14: int
KEY_R15: int
KEY_R2: int
KEY_R3: int
KEY_R4: int
KEY_R5: int
KEY_R6: int
KEY_R7: int
KEY_R8: int
KEY_R9: int
KEY_Racute: int
KEY_racute: int
KEY_radical: int
KEY_Rcaron: int
KEY_rcaron: int
KEY_Rcedilla: int
KEY_rcedilla: int
KEY_Red: int
KEY_Redo: int
KEY_Refresh: int
KEY_registered: int
KEY_Reload: int
KEY_RepeatKeys_Enable: int
KEY_Reply: int
KEY_Return: int
KEY_RFKill: int
KEY_Right: int
KEY_rightanglebracket: int
KEY_rightarrow: int
KEY_rightcaret: int
KEY_rightdoublequotemark: int
KEY_rightmiddlecurlybrace: int
KEY_rightmiddlesummation: int
KEY_rightopentriangle: int
KEY_rightpointer: int
KEY_rightshoe: int
KEY_rightsinglequotemark: int
KEY_rightt: int
KEY_righttack: int
KEY_RockerDown: int
KEY_RockerEnter: int
KEY_RockerUp: int
KEY_Romaji: int
KEY_RotateWindows: int
KEY_RotationKB: int
KEY_RotationPB: int
KEY_RupeeSign: int
KEY_S: int
KEY_s: int
KEY_Sabovedot: int
KEY_sabovedot: int
KEY_Sacute: int
KEY_sacute: int
KEY_Save: int
KEY_Scaron: int
KEY_scaron: int
KEY_Scedilla: int
KEY_scedilla: int
KEY_SCHWA: int
KEY_schwa: int
KEY_Scircumflex: int
KEY_scircumflex: int
KEY_ScreenSaver: int
KEY_script_switch: int
KEY_ScrollClick: int
KEY_ScrollDown: int
KEY_ScrollUp: int
KEY_Scroll_Lock: int
KEY_Search: int
KEY_seconds: int
KEY_section: int
KEY_Select: int
KEY_SelectButton: int
KEY_semicolon: int
KEY_semivoicedsound: int
KEY_Send: int
KEY_Serbian_DJE: int
KEY_Serbian_dje: int
KEY_Serbian_DZE: int
KEY_Serbian_dze: int
KEY_Serbian_JE: int
KEY_Serbian_je: int
KEY_Serbian_LJE: int
KEY_Serbian_lje: int
KEY_Serbian_NJE: int
KEY_Serbian_nje: int
KEY_Serbian_TSHE: int
KEY_Serbian_tshe: int
KEY_seveneighths: int
KEY_sevensubscript: int
KEY_sevensuperior: int
KEY_Shift_L: int
KEY_Shift_Lock: int
KEY_Shift_R: int
KEY_Shop: int
KEY_signaturemark: int
KEY_signifblank: int
KEY_similarequal: int
KEY_SingleCandidate: int
KEY_singlelowquotemark: int
KEY_Sinh_a: int
KEY_Sinh_aa: int
KEY_Sinh_aa2: int
KEY_Sinh_ae: int
KEY_Sinh_ae2: int
KEY_Sinh_aee: int
KEY_Sinh_aee2: int
KEY_Sinh_ai: int
KEY_Sinh_ai2: int
KEY_Sinh_al: int
KEY_Sinh_au: int
KEY_Sinh_au2: int
KEY_Sinh_ba: int
KEY_Sinh_bha: int
KEY_Sinh_ca: int
KEY_Sinh_cha: int
KEY_Sinh_dda: int
KEY_Sinh_ddha: int
KEY_Sinh_dha: int
KEY_Sinh_dhha: int
KEY_Sinh_e: int
KEY_Sinh_e2: int
KEY_Sinh_ee: int
KEY_Sinh_ee2: int
KEY_Sinh_fa: int
KEY_Sinh_ga: int
KEY_Sinh_gha: int
KEY_Sinh_h2: int
KEY_Sinh_ha: int
KEY_Sinh_i: int
KEY_Sinh_i2: int
KEY_Sinh_ii: int
KEY_Sinh_ii2: int
KEY_Sinh_ja: int
KEY_Sinh_jha: int
KEY_Sinh_jnya: int
KEY_Sinh_ka: int
KEY_Sinh_kha: int
KEY_Sinh_kunddaliya: int
KEY_Sinh_la: int
KEY_Sinh_lla: int
KEY_Sinh_lu: int
KEY_Sinh_lu2: int
KEY_Sinh_luu: int
KEY_Sinh_luu2: int
KEY_Sinh_ma: int
KEY_Sinh_mba: int
KEY_Sinh_na: int
KEY_Sinh_ndda: int
KEY_Sinh_ndha: int
KEY_Sinh_ng: int
KEY_Sinh_ng2: int
KEY_Sinh_nga: int
KEY_Sinh_nja: int
KEY_Sinh_nna: int
KEY_Sinh_nya: int
KEY_Sinh_o: int
KEY_Sinh_o2: int
KEY_Sinh_oo: int
KEY_Sinh_oo2: int
KEY_Sinh_pa: int
KEY_Sinh_pha: int
KEY_Sinh_ra: int
KEY_Sinh_ri: int
KEY_Sinh_rii: int
KEY_Sinh_ru2: int
KEY_Sinh_ruu2: int
KEY_Sinh_sa: int
KEY_Sinh_sha: int
KEY_Sinh_ssha: int
KEY_Sinh_tha: int
KEY_Sinh_thha: int
KEY_Sinh_tta: int
KEY_Sinh_ttha: int
KEY_Sinh_u: int
KEY_Sinh_u2: int
KEY_Sinh_uu: int
KEY_Sinh_uu2: int
KEY_Sinh_va: int
KEY_Sinh_ya: int
KEY_sixsubscript: int
KEY_sixsuperior: int
KEY_slash: int
KEY_Sleep: int
KEY_SlowKeys_Enable: int
KEY_soliddiamond: int
KEY_space: int
KEY_Spell: int
KEY_SplitScreen: int
KEY_squareroot: int
KEY_ssharp: int
KEY_Standby: int
KEY_Start: int
KEY_sterling: int
KEY_StickyKeys_Enable: int
KEY_Stop: int
KEY_stricteq: int
KEY_Subtitle: int
KEY_Super_L: int
KEY_Super_R: int
KEY_Support: int
KEY_Suspend: int
KEY_Switch_VT_1: int
KEY_Switch_VT_10: int
KEY_Switch_VT_11: int
KEY_Switch_VT_12: int
KEY_Switch_VT_2: int
KEY_Switch_VT_3: int
KEY_Switch_VT_4: int
KEY_Switch_VT_5: int
KEY_Switch_VT_6: int
KEY_Switch_VT_7: int
KEY_Switch_VT_8: int
KEY_Switch_VT_9: int
KEY_Sys_Req: int
KEY_T: int
KEY_t: int
KEY_Tab: int
KEY_Tabovedot: int
KEY_tabovedot: int
KEY_TaskPane: int
KEY_Tcaron: int
KEY_tcaron: int
KEY_Tcedilla: int
KEY_tcedilla: int
KEY_telephone: int
KEY_telephonerecorder: int
KEY_Terminal: int
KEY_Terminate_Server: int
KEY_Thai_baht: int
KEY_Thai_bobaimai: int
KEY_Thai_chochan: int
KEY_Thai_chochang: int
KEY_Thai_choching: int
KEY_Thai_chochoe: int
KEY_Thai_dochada: int
KEY_Thai_dodek: int
KEY_Thai_fofa: int
KEY_Thai_fofan: int
KEY_Thai_hohip: int
KEY_Thai_honokhuk: int
KEY_Thai_khokhai: int
KEY_Thai_khokhon: int
KEY_Thai_khokhuat: int
KEY_Thai_khokhwai: int
KEY_Thai_khorakhang: int
KEY_Thai_kokai: int
KEY_Thai_lakkhangyao: int
KEY_Thai_lekchet: int
KEY_Thai_lekha: int
KEY_Thai_lekhok: int
KEY_Thai_lekkao: int
KEY_Thai_leknung: int
KEY_Thai_lekpaet: int
KEY_Thai_leksam: int
KEY_Thai_leksi: int
KEY_Thai_leksong: int
KEY_Thai_leksun: int
KEY_Thai_lochula: int
KEY_Thai_loling: int
KEY_Thai_lu: int
KEY_Thai_maichattawa: int
KEY_Thai_maiek: int
KEY_Thai_maihanakat: int
KEY_Thai_maihanakat_maitho: int
KEY_Thai_maitaikhu: int
KEY_Thai_maitho: int
KEY_Thai_maitri: int
KEY_Thai_maiyamok: int
KEY_Thai_moma: int
KEY_Thai_ngongu: int
KEY_Thai_nikhahit: int
KEY_Thai_nonen: int
KEY_Thai_nonu: int
KEY_Thai_oang: int
KEY_Thai_paiyannoi: int
KEY_Thai_phinthu: int
KEY_Thai_phophan: int
KEY_Thai_phophung: int
KEY_Thai_phosamphao: int
KEY_Thai_popla: int
KEY_Thai_rorua: int
KEY_Thai_ru: int
KEY_Thai_saraa: int
KEY_Thai_saraaa: int
KEY_Thai_saraae: int
KEY_Thai_saraaimaimalai: int
KEY_Thai_saraaimaimuan: int
KEY_Thai_saraam: int
KEY_Thai_sarae: int
KEY_Thai_sarai: int
KEY_Thai_saraii: int
KEY_Thai_sarao: int
KEY_Thai_sarau: int
KEY_Thai_saraue: int
KEY_Thai_sarauee: int
KEY_Thai_sarauu: int
KEY_Thai_sorusi: int
KEY_Thai_sosala: int
KEY_Thai_soso: int
KEY_Thai_sosua: int
KEY_Thai_thanthakhat: int
KEY_Thai_thonangmontho: int
KEY_Thai_thophuthao: int
KEY_Thai_thothahan: int
KEY_Thai_thothan: int
KEY_Thai_thothong: int
KEY_Thai_thothung: int
KEY_Thai_topatak: int
KEY_Thai_totao: int
KEY_Thai_wowaen: int
KEY_Thai_yoyak: int
KEY_Thai_yoying: int
KEY_therefore: int
KEY_thinspace: int
KEY_THORN: int
KEY_Thorn: int
KEY_thorn: int
KEY_threeeighths: int
KEY_threefifths: int
KEY_threequarters: int
KEY_threesubscript: int
KEY_threesuperior: int
KEY_Time: int
KEY_tintegral: int
KEY_ToDoList: int
KEY_Tools: int
KEY_topintegral: int
KEY_topleftparens: int
KEY_topleftradical: int
KEY_topleftsqbracket: int
KEY_topleftsummation: int
KEY_TopMenu: int
KEY_toprightparens: int
KEY_toprightsqbracket: int
KEY_toprightsummation: int
KEY_topt: int
KEY_topvertsummationconnector: int
KEY_TouchpadOff: int
KEY_TouchpadOn: int
KEY_TouchpadToggle: int
KEY_Touroku: int
KEY_trademark: int
KEY_trademarkincircle: int
KEY_Travel: int
KEY_Tslash: int
KEY_tslash: int
KEY_twofifths: int
KEY_twosubscript: int
KEY_twosuperior: int
KEY_twothirds: int
KEY_U: int
KEY_u: int
KEY_Uacute: int
KEY_uacute: int
KEY_Ubelowdot: int
KEY_ubelowdot: int
KEY_Ubreve: int
KEY_ubreve: int
KEY_Ucircumflex: int
KEY_ucircumflex: int
KEY_Udiaeresis: int
KEY_udiaeresis: int
KEY_Udoubleacute: int
KEY_udoubleacute: int
KEY_Ugrave: int
KEY_ugrave: int
KEY_Uhook: int
KEY_uhook: int
KEY_Uhorn: int
KEY_uhorn: int
KEY_Uhornacute: int
KEY_uhornacute: int
KEY_Uhornbelowdot: int
KEY_uhornbelowdot: int
KEY_Uhorngrave: int
KEY_uhorngrave: int
KEY_Uhornhook: int
KEY_uhornhook: int
KEY_Uhorntilde: int
KEY_uhorntilde: int
KEY_Ukrainian_GHE_WITH_UPTURN: int
KEY_Ukrainian_ghe_with_upturn: int
KEY_Ukrainian_I: int
KEY_Ukrainian_i: int
KEY_Ukrainian_IE: int
KEY_Ukrainian_ie: int
KEY_Ukrainian_YI: int
KEY_Ukrainian_yi: int
KEY_Ukranian_I: int
KEY_Ukranian_i: int
KEY_Ukranian_JE: int
KEY_Ukranian_je: int
KEY_Ukranian_YI: int
KEY_Ukranian_yi: int
KEY_Umacron: int
KEY_umacron: int
KEY_underbar: int
KEY_underscore: int
KEY_Undo: int
KEY_Ungrab: int
KEY_union: int
KEY_Uogonek: int
KEY_uogonek: int
KEY_Up: int
KEY_uparrow: int
KEY_upcaret: int
KEY_upleftcorner: int
KEY_uprightcorner: int
KEY_upshoe: int
KEY_upstile: int
KEY_uptack: int
KEY_Uring: int
KEY_uring: int
KEY_User1KB: int
KEY_User2KB: int
KEY_UserPB: int
KEY_Utilde: int
KEY_utilde: int
KEY_UWB: int
KEY_V: int
KEY_v: int
KEY_variation: int
KEY_VendorHome: int
KEY_vertbar: int
KEY_vertconnector: int
KEY_Video: int
KEY_View: int
KEY_voicedsound: int
KEY_VoidSymbol: int
KEY_vt: int
KEY_W: int
KEY_w: int
KEY_Wacute: int
KEY_wacute: int
KEY_WakeUp: int
KEY_Wcircumflex: int
KEY_wcircumflex: int
KEY_Wdiaeresis: int
KEY_wdiaeresis: int
KEY_WebCam: int
KEY_Wgrave: int
KEY_wgrave: int
KEY_WheelButton: int
KEY_WindowClear: int
KEY_WLAN: int
KEY_WonSign: int
KEY_Word: int
KEY_WWAN: int
KEY_WWW: int
KEY_X: int
KEY_x: int
KEY_Xabovedot: int
KEY_xabovedot: int
KEY_Xfer: int
KEY_Y: int
KEY_y: int
KEY_Yacute: int
KEY_yacute: int
KEY_Ybelowdot: int
KEY_ybelowdot: int
KEY_Ycircumflex: int
KEY_ycircumflex: int
KEY_Ydiaeresis: int
KEY_ydiaeresis: int
KEY_Yellow: int
KEY_yen: int
KEY_Ygrave: int
KEY_ygrave: int
KEY_Yhook: int
KEY_yhook: int
KEY_Ytilde: int
KEY_ytilde: int
KEY_Z: int
KEY_z: int
KEY_Zabovedot: int
KEY_zabovedot: int
KEY_Zacute: int
KEY_zacute: int
KEY_Zcaron: int
KEY_zcaron: int
KEY_Zenkaku: int
KEY_Zenkaku_Hankaku: int
KEY_Zen_Koho: int
KEY_zerosubscript: int
KEY_zerosuperior: int
KEY_ZoomIn: int
KEY_ZoomOut: int
KEY_Zstroke: int
KEY_zstroke: int
MAJOR_VERSION: int
MAX_TIMECOORD_AXES: int
MICRO_VERSION: int
MINOR_VERSION: int
PARENT_RELATIVE: int
PRIORITY_REDRAW: int

    
def add_option_entries_libgtk_only(group: GLib.OptionGroup): ...
def atom_intern(atom_name: str, only_if_exists: bool) -> Gdk.Atom: ...
def atom_intern_static_string(atom_name: str) -> Gdk.Atom: ...
def beep() -> None: ...
def cairo_create(window: Gdk.Window) -> cairo.Context: ...
def cairo_draw_from_gl(cr: cairo.Context, window: Gdk.Window, source: int, source_type: int, buffer_scale: int, x: int, y: int, width: int, height: int): ...
def cairo_get_clip_rectangle(cr: cairo.Context) -> tuple[bool, None]: ...
def cairo_get_drawing_context(cr: cairo.Context) -> Union[Gdk.DrawingContext, None]: ...
def cairo_rectangle(cr: cairo.Context, rectangle: Gdk.Rectangle): ...
def cairo_region(cr: cairo.Context, region: cairo.Region): ...
def cairo_region_create_from_surface(surface: cairo.Surface) -> cairo.Region: ...
def cairo_set_source_color(cr: cairo.Context, color: Gdk.Color): ...
def cairo_set_source_pixbuf(cr: cairo.Context, pixbuf: GdkPixbuf.Pixbuf, pixbuf_x: float, pixbuf_y: float): ...
def cairo_set_source_rgba(cr: cairo.Context, rgba: Gdk.RGBA): ...
def cairo_set_source_window(cr: cairo.Context, window: Gdk.Window, x: float, y: float): ...
def cairo_surface_create_from_pixbuf(pixbuf: GdkPixbuf.Pixbuf, scale: int, for_window: Gdk.Window) -> cairo.Surface: ...
def color_parse(*args, **kwargs) -> None: ...
def disable_multidevice() -> None: ...
def drag_abort(context: Gdk.DragContext, time_: int): ...
def drag_begin(window: Gdk.Window, targets: list) -> Gdk.DragContext: ...
def drag_begin_for_device(window: Gdk.Window, device: Gdk.Device, targets: list) -> Gdk.DragContext: ...
def drag_begin_from_point(window: Gdk.Window, device: Gdk.Device, targets: list, x_root: int, y_root: int) -> Gdk.DragContext: ...
def drag_drop(context: Gdk.DragContext, time_: int): ...
def drag_drop_done(context: Gdk.DragContext, success: bool): ...
def drag_drop_succeeded(context: Gdk.DragContext) -> bool: ...
def drag_find_window_for_screen(context: Gdk.DragContext, drag_window: Gdk.Window, screen: Gdk.Screen, x_root: int, y_root: int) -> tuple[None, None]: ...
def drag_get_selection(context: Gdk.DragContext) -> Gdk.Atom: ...
def drag_motion(context: Gdk.DragContext, dest_window: Gdk.Window, protocol: Gdk.DragProtocol, x_root: int, y_root: int, suggested_action: Gdk.DragAction, possible_actions: Gdk.DragAction, time_: int) -> bool: ...
def drag_status(context: Gdk.DragContext, action: Gdk.DragAction, time_: int): ...
def drop_finish(context: Gdk.DragContext, success: bool, time_: int): ...
def drop_reply(context: Gdk.DragContext, accepted: bool, time_: int): ...
def error_trap_pop() -> int: ...
def error_trap_pop_ignored() -> None: ...
def error_trap_push() -> None: ...
def events_get_angle(event1: Gdk.Event, event2: Gdk.Event) -> tuple[bool, None]: ...
def events_get_center(event1: Gdk.Event, event2: Gdk.Event) -> tuple[bool, None, None]: ...
def events_get_distance(event1: Gdk.Event, event2: Gdk.Event) -> tuple[bool, None]: ...
def events_pending() -> bool: ...
def event_get() -> Union[Gdk.Event, None]: ...
def event_handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
def event_peek() -> Union[Gdk.Event, None]: ...
def event_request_motions(event: Gdk.EventMotion): ...
def flush() -> None: ...
def get_default_root_window() -> Gdk.Window: ...
def get_display() -> str: ...
def get_display_arg_name() -> Union[str, None]: ...
def get_program_class() -> str: ...
def get_show_events() -> bool: ...
def gl_error_quark() -> int: ...
def init(argv: list) -> list: ...
def init_check(argv: list) -> tuple[bool, None]: ...
def keyboard_grab(window: Gdk.Window, owner_events: bool, time_: int) -> Gdk.GrabStatus: ...
def keyboard_ungrab(time_: int): ...
def keyval_convert_case(symbol: int) -> tuple[None, None]: ...
def keyval_from_name(keyval_name: str) -> int: ...
def keyval_is_lower(keyval: int) -> bool: ...
def keyval_is_upper(keyval: int) -> bool: ...
def keyval_name(keyval: int) -> Union[str, None]: ...
def keyval_to_lower(keyval: int) -> int: ...
def keyval_to_unicode(keyval: int) -> int: ...
def keyval_to_upper(keyval: int) -> int: ...
def list_visuals() -> list: ...
def notify_startup_complete() -> None: ...
def notify_startup_complete_with_id(startup_id: str): ...
def offscreen_window_get_embedder(window: Gdk.Window) -> Union[Gdk.Window, None]: ...
def offscreen_window_get_surface(window: Gdk.Window) -> Union[cairo.Surface, None]: ...
def offscreen_window_set_embedder(window: Gdk.Window, embedder: Gdk.Window): ...
def pango_context_get() -> Pango.Context: ...
def pango_context_get_for_display(display: Gdk.Display) -> Pango.Context: ...
def pango_context_get_for_screen(screen: Gdk.Screen) -> Pango.Context: ...
def parse_args(argv: list) -> list: ...
def pixbuf_get_from_surface(surface: cairo.Surface, src_x: int, src_y: int, width: int, height: int) -> Union[GdkPixbuf.Pixbuf, None]: ...
def pixbuf_get_from_window(window: Gdk.Window, src_x: int, src_y: int, width: int, height: int) -> Union[GdkPixbuf.Pixbuf, None]: ...
def pointer_grab(window: Gdk.Window, owner_events: bool, event_mask: Gdk.EventMask, confine_to: Gdk.Window, cursor: Gdk.Cursor, time_: int) -> Gdk.GrabStatus: ...
def pointer_is_grabbed() -> bool: ...
def pointer_ungrab(time_: int): ...
def pre_parse_libgtk_only() -> None: ...
def property_delete(window: Gdk.Window, property: Gdk.Atom): ...
def property_get(window: Gdk.Window, property: Gdk.Atom, type: Gdk.Atom, offset: int, length: int, pdelete: int) -> tuple[bool, None, None, None]: ...
def query_depths() -> list: ...
def query_visual_types() -> list: ...
def rectangle_intersect(*args, **kwargs) -> None: ...
def rectangle_union(*args, **kwargs) -> None: ...
def selection_convert(requestor: Gdk.Window, selection: Gdk.Atom, target: Gdk.Atom, time_: int): ...
def selection_owner_get(selection: Gdk.Atom) -> Union[Gdk.Window, None]: ...
def selection_owner_get_for_display(display: Gdk.Display, selection: Gdk.Atom) -> Union[Gdk.Window, None]: ...
def selection_owner_set(owner: Gdk.Window, selection: Gdk.Atom, time_: int, send_event: bool) -> bool: ...
def selection_owner_set_for_display(display: Gdk.Display, owner: Gdk.Window, selection: Gdk.Atom, time_: int, send_event: bool) -> bool: ...
def selection_send_notify(requestor: Gdk.Window, selection: Gdk.Atom, target: Gdk.Atom, property: Gdk.Atom, time_: int): ...
def selection_send_notify_for_display(display: Gdk.Display, requestor: Gdk.Window, selection: Gdk.Atom, target: Gdk.Atom, property: Gdk.Atom, time_: int): ...
def setting_get(name: str, value: GObject.Value) -> bool: ...
def set_allowed_backends(backends: str): ...
def set_double_click_time(msec: int): ...
def set_program_class(program_class: str): ...
def set_show_events(show_events: bool): ...
def synthesize_window_state(window: Gdk.Window, unset_flags: Gdk.WindowState, set_flags: Gdk.WindowState): ...
def test_render_sync(window: Gdk.Window): ...
def test_simulate_button(window: Gdk.Window, x: int, y: int, button: int, modifiers: Gdk.ModifierType, button_pressrelease: Gdk.EventType) -> bool: ...
def test_simulate_key(window: Gdk.Window, x: int, y: int, keyval: int, modifiers: Gdk.ModifierType, key_pressrelease: Gdk.EventType) -> bool: ...
def text_property_to_utf8_list_for_display(display: Gdk.Display, encoding: Gdk.Atom, format: int, text: list) -> tuple[int, None]: ...
def threads_add_idle(priority: int, function: GLib.SourceFunc, data) -> int: ...
def threads_add_timeout(priority: int, interval: int, function: GLib.SourceFunc, data) -> int: ...
def threads_add_timeout_seconds(priority: int, interval: int, function: GLib.SourceFunc, data) -> int: ...
def threads_enter() -> None: ...
def threads_init() -> None: ...
def threads_leave() -> None: ...
def unicode_to_keyval(wc: int) -> int: ...
def utf8_to_string_target(str: str) -> Union[str, None]: ...


class AnchorHints(__gobject.GFlags):
    GDK_ANCHOR_FLIP_X: int
    GDK_ANCHOR_FLIP_Y: int
    GDK_ANCHOR_SLIDE_X: int
    GDK_ANCHOR_SLIDE_Y: int
    GDK_ANCHOR_RESIZE_X: int
    GDK_ANCHOR_RESIZE_Y: int
    GDK_ANCHOR_FLIP: int
    GDK_ANCHOR_SLIDE: int
    GDK_ANCHOR_RESIZE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    FLIP: int
    FLIP_X: int
    FLIP_Y: int
    RESIZE: int
    RESIZE_X: int
    RESIZE_Y: int
    SLIDE: int
    SLIDE_X: int
    SLIDE_Y: int

class AppLaunchContext(__gi_repository_Gio.AppLaunchContext):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_get_display(self, info: Gio.AppInfo, files: list) -> Union[str, None]: ...
    def do_get_startup_notify_id(self, info: Gio.AppInfo, files: list) -> Union[str, None]: ...
    def do_launched(self, info: Gio.AppInfo, platform_data: GLib.Variant): ...
    def do_launch_failed(self, startup_notify_id: str): ...
    def do_launch_started(self, info: Gio.AppInfo, platform_data: GLib.Variant): ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_display(self, info: Gio.AppInfo, files: list) -> Union[str, None]: ...
    def get_environment(self) -> list: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_startup_notify_id(self, info: Gio.AppInfo, files: list) -> Union[str, None]: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def launch_failed(self, startup_notify_id: str): ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def new() -> Gdk.AppLaunchContext: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def setenv(self, variable: str, value: str): ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_desktop(self, desktop: int): ...
    def set_display(self, display: Gdk.Display): ...
    def set_icon(self, icon: Gio.Icon = ...): ...
    def set_icon_name(self, icon_name: str = ...): ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_timestamp(self, timestamp: int): ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def unsetenv(self, variable: str): ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    parent_instance: Incomplete
    priv: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class Atom(__gi.Struct):
    @staticmethod
    def intern(atom_name: str, only_if_exists: bool) -> Gdk.Atom: ...
    @staticmethod
    def intern_static_string(atom_name: str) -> Gdk.Atom: ...
    def name(self) -> str: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class AxisFlags(__gobject.GFlags):
    GDK_AXIS_FLAG_X: int
    GDK_AXIS_FLAG_Y: int
    GDK_AXIS_FLAG_PRESSURE: int
    GDK_AXIS_FLAG_XTILT: int
    GDK_AXIS_FLAG_YTILT: int
    GDK_AXIS_FLAG_WHEEL: int
    GDK_AXIS_FLAG_DISTANCE: int
    GDK_AXIS_FLAG_ROTATION: int
    GDK_AXIS_FLAG_SLIDER: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    DISTANCE: int
    PRESSURE: int
    ROTATION: int
    SLIDER: int
    WHEEL: int
    X: int
    XTILT: int
    Y: int
    YTILT: int

class AxisUse(__gobject.GEnum):
    GDK_AXIS_IGNORE: int
    GDK_AXIS_X: int
    GDK_AXIS_Y: int
    GDK_AXIS_PRESSURE: int
    GDK_AXIS_XTILT: int
    GDK_AXIS_YTILT: int
    GDK_AXIS_WHEEL: int
    GDK_AXIS_DISTANCE: int
    GDK_AXIS_ROTATION: int
    GDK_AXIS_SLIDER: int
    GDK_AXIS_LAST: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    DISTANCE: int
    IGNORE: int
    LAST: int
    PRESSURE: int
    ROTATION: int
    SLIDER: int
    WHEEL: int
    X: int
    XTILT: int
    Y: int
    YTILT: int

class ByteOrder(__gobject.GEnum):
    GDK_LSB_FIRST: int
    GDK_MSB_FIRST: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    LSB_FIRST: int
    MSB_FIRST: int

class Color(Color):
    def copy(self) -> Gdk.Color: ...
    def equal(self, colorb: Gdk.Color) -> bool: ...
    def free(self) -> None: ...
    def from_floats(red, green, blue) -> None: ...
    def hash(self) -> int: ...
    @staticmethod
    def parse(spec: str) -> tuple[bool, None]: ...
    def to_floats(self) -> None: ...
    def to_string(self) -> str: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, other): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, red, green, blue) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    blue: Incomplete
    blue_float: Incomplete
    green: Incomplete
    green_float: Incomplete
    pixel: Incomplete
    red: Incomplete
    red_float: Incomplete
    MAX_VALUE: int
    __hash__: Incomplete

class CrossingMode(__gobject.GEnum):
    GDK_CROSSING_NORMAL: int
    GDK_CROSSING_GRAB: int
    GDK_CROSSING_UNGRAB: int
    GDK_CROSSING_GTK_GRAB: int
    GDK_CROSSING_GTK_UNGRAB: int
    GDK_CROSSING_STATE_CHANGED: int
    GDK_CROSSING_TOUCH_BEGIN: int
    GDK_CROSSING_TOUCH_END: int
    GDK_CROSSING_DEVICE_SWITCH: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    DEVICE_SWITCH: int
    GRAB: int
    GTK_GRAB: int
    GTK_UNGRAB: int
    NORMAL: int
    STATE_CHANGED: int
    TOUCH_BEGIN: int
    TOUCH_END: int
    UNGRAB: int

class Cursor(Cursor):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_cursor_type(self) -> Gdk.CursorType: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_display(self) -> Gdk.Display: ...
    def get_image(self) -> Union[GdkPixbuf.Pixbuf, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_surface(self) -> Union[cairo.Surface, tuple[None, None, None]]: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def new(cursor_type: Gdk.CursorType) -> Gdk.Cursor: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    @staticmethod
    def new_for_display(display: Gdk.Display, cursor_type: Gdk.CursorType) -> Union[Gdk.Cursor, None]: ...
    @staticmethod
    def new_from_name(display: Gdk.Display, name: str) -> Union[Gdk.Cursor, None]: ...
    @staticmethod
    def new_from_pixbuf(display: Gdk.Display, pixbuf: GdkPixbuf.Pixbuf, x: int, y: int) -> Gdk.Cursor: ...
    @staticmethod
    def new_from_surface(display: Gdk.Display, surface: cairo.Surface, x: float, y: float) -> Gdk.Cursor: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self) -> Gdk.Cursor: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, *args, **kwds) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class CursorType(__gobject.GEnum):
    GDK_X_CURSOR: int
    GDK_ARROW: int
    GDK_BASED_ARROW_DOWN: int
    GDK_BASED_ARROW_UP: int
    GDK_BOAT: int
    GDK_BOGOSITY: int
    GDK_BOTTOM_LEFT_CORNER: int
    GDK_BOTTOM_RIGHT_CORNER: int
    GDK_BOTTOM_SIDE: int
    GDK_BOTTOM_TEE: int
    GDK_BOX_SPIRAL: int
    GDK_CENTER_PTR: int
    GDK_CIRCLE: int
    GDK_CLOCK: int
    GDK_COFFEE_MUG: int
    GDK_CROSS: int
    GDK_CROSS_REVERSE: int
    GDK_CROSSHAIR: int
    GDK_DIAMOND_CROSS: int
    GDK_DOT: int
    GDK_DOTBOX: int
    GDK_DOUBLE_ARROW: int
    GDK_DRAFT_LARGE: int
    GDK_DRAFT_SMALL: int
    GDK_DRAPED_BOX: int
    GDK_EXCHANGE: int
    GDK_FLEUR: int
    GDK_GOBBLER: int
    GDK_GUMBY: int
    GDK_HAND1: int
    GDK_HAND2: int
    GDK_HEART: int
    GDK_ICON: int
    GDK_IRON_CROSS: int
    GDK_LEFT_PTR: int
    GDK_LEFT_SIDE: int
    GDK_LEFT_TEE: int
    GDK_LEFTBUTTON: int
    GDK_LL_ANGLE: int
    GDK_LR_ANGLE: int
    GDK_MAN: int
    GDK_MIDDLEBUTTON: int
    GDK_MOUSE: int
    GDK_PENCIL: int
    GDK_PIRATE: int
    GDK_PLUS: int
    GDK_QUESTION_ARROW: int
    GDK_RIGHT_PTR: int
    GDK_RIGHT_SIDE: int
    GDK_RIGHT_TEE: int
    GDK_RIGHTBUTTON: int
    GDK_RTL_LOGO: int
    GDK_SAILBOAT: int
    GDK_SB_DOWN_ARROW: int
    GDK_SB_H_DOUBLE_ARROW: int
    GDK_SB_LEFT_ARROW: int
    GDK_SB_RIGHT_ARROW: int
    GDK_SB_UP_ARROW: int
    GDK_SB_V_DOUBLE_ARROW: int
    GDK_SHUTTLE: int
    GDK_SIZING: int
    GDK_SPIDER: int
    GDK_SPRAYCAN: int
    GDK_STAR: int
    GDK_TARGET: int
    GDK_TCROSS: int
    GDK_TOP_LEFT_ARROW: int
    GDK_TOP_LEFT_CORNER: int
    GDK_TOP_RIGHT_CORNER: int
    GDK_TOP_SIDE: int
    GDK_TOP_TEE: int
    GDK_TREK: int
    GDK_UL_ANGLE: int
    GDK_UMBRELLA: int
    GDK_UR_ANGLE: int
    GDK_WATCH: int
    GDK_XTERM: int
    GDK_LAST_CURSOR: int
    GDK_BLANK_CURSOR: int
    GDK_CURSOR_IS_PIXMAP: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ARROW: int
    BASED_ARROW_DOWN: int
    BASED_ARROW_UP: int
    BLANK_CURSOR: int
    BOAT: int
    BOGOSITY: int
    BOTTOM_LEFT_CORNER: int
    BOTTOM_RIGHT_CORNER: int
    BOTTOM_SIDE: int
    BOTTOM_TEE: int
    BOX_SPIRAL: int
    CENTER_PTR: int
    CIRCLE: int
    CLOCK: int
    COFFEE_MUG: int
    CROSS: int
    CROSSHAIR: int
    CROSS_REVERSE: int
    CURSOR_IS_PIXMAP: int
    DIAMOND_CROSS: int
    DOT: int
    DOTBOX: int
    DOUBLE_ARROW: int
    DRAFT_LARGE: int
    DRAFT_SMALL: int
    DRAPED_BOX: int
    EXCHANGE: int
    FLEUR: int
    GOBBLER: int
    GUMBY: int
    HAND1: int
    HAND2: int
    HEART: int
    ICON: int
    IRON_CROSS: int
    LAST_CURSOR: int
    LEFTBUTTON: int
    LEFT_PTR: int
    LEFT_SIDE: int
    LEFT_TEE: int
    LL_ANGLE: int
    LR_ANGLE: int
    MAN: int
    MIDDLEBUTTON: int
    MOUSE: int
    PENCIL: int
    PIRATE: int
    PLUS: int
    QUESTION_ARROW: int
    RIGHTBUTTON: int
    RIGHT_PTR: int
    RIGHT_SIDE: int
    RIGHT_TEE: int
    RTL_LOGO: int
    SAILBOAT: int
    SB_DOWN_ARROW: int
    SB_H_DOUBLE_ARROW: int
    SB_LEFT_ARROW: int
    SB_RIGHT_ARROW: int
    SB_UP_ARROW: int
    SB_V_DOUBLE_ARROW: int
    SHUTTLE: int
    SIZING: int
    SPIDER: int
    SPRAYCAN: int
    STAR: int
    TARGET: int
    TCROSS: int
    TOP_LEFT_ARROW: int
    TOP_LEFT_CORNER: int
    TOP_RIGHT_CORNER: int
    TOP_SIDE: int
    TOP_TEE: int
    TREK: int
    UL_ANGLE: int
    UMBRELLA: int
    UR_ANGLE: int
    WATCH: int
    XTERM: int
    X_CURSOR: int

class Device(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_associated_device(self) -> Union[Gdk.Device, None]: ...
    def get_axes(self) -> Gdk.AxisFlags: ...
    def get_axis_use(self, index_: int) -> Gdk.AxisUse: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_device_type(self) -> Gdk.DeviceType: ...
    def get_display(self) -> Gdk.Display: ...
    def get_has_cursor(self) -> bool: ...
    def get_key(self, index_: int) -> tuple[bool, None, None]: ...
    def get_last_event_window(self) -> Union[Gdk.Window, None]: ...
    def get_mode(self) -> Gdk.InputMode: ...
    def get_name(self) -> str: ...
    def get_n_axes(self) -> int: ...
    def get_n_keys(self) -> int: ...
    def get_position(self) -> tuple[None, None, None]: ...
    def get_position_double(self) -> tuple[None, None, None]: ...
    def get_product_id(self) -> Union[str, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source(self) -> Gdk.InputSource: ...
    def get_vendor_id(self) -> Union[str, None]: ...
    def get_window_at_position(self) -> Union[Gdk.Window, tuple[None, None, None]]: ...
    def get_window_at_position_double(self) -> Union[Gdk.Window, tuple[None, None, None]]: ...
    def grab(self, window: Gdk.Window, grab_ownership: Gdk.GrabOwnership, owner_events: bool, event_mask: Gdk.EventMask, cursor: Gdk.Cursor, time_: int) -> Gdk.GrabStatus: ...
    @staticmethod
    def grab_info_libgtk_only(display: Gdk.Display, device: Gdk.Device) -> tuple[bool, None, None]: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_axes(self) -> list: ...
    def list_properties(self) -> tuple[list, None]: ...
    def list_slave_devices(self) -> Union[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_axis_use(self, index_: int, use: Gdk.AxisUse): ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_key(self, index_: int, keyval: int, modifiers: Gdk.ModifierType): ...
    def set_mode(self, mode: Gdk.InputMode) -> bool: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def ungrab(self, time_: int): ...
    def unref(self, *args, **kargs) -> None: ...
    def warp(self, screen: Gdk.Screen, x: int, y: int): ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class DeviceManager(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_client_pointer(self) -> Gdk.Device: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_display(self) -> Union[Gdk.Display, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_devices(self, type: Gdk.DeviceType) -> list: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class DevicePad(__gobject.GInterface):
    def get_feature_group(self, feature: Gdk.DevicePadFeature, feature_idx: int) -> int: ...
    def get_group_n_modes(self, group_idx: int) -> int: ...
    def get_n_features(self, feature: Gdk.DevicePadFeature) -> int: ...
    def get_n_groups(self) -> int: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class DevicePadFeature(__gobject.GEnum):
    GDK_DEVICE_PAD_FEATURE_BUTTON: int
    GDK_DEVICE_PAD_FEATURE_RING: int
    GDK_DEVICE_PAD_FEATURE_STRIP: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BUTTON: int
    RING: int
    STRIP: int

class DevicePadInterface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class DeviceTool(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_hardware_id(self) -> int: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_serial(self) -> int: ...
    def get_tool_type(self) -> Gdk.DeviceToolType: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class DeviceToolType(__gobject.GEnum):
    GDK_DEVICE_TOOL_TYPE_UNKNOWN: int
    GDK_DEVICE_TOOL_TYPE_PEN: int
    GDK_DEVICE_TOOL_TYPE_ERASER: int
    GDK_DEVICE_TOOL_TYPE_BRUSH: int
    GDK_DEVICE_TOOL_TYPE_PENCIL: int
    GDK_DEVICE_TOOL_TYPE_AIRBRUSH: int
    GDK_DEVICE_TOOL_TYPE_MOUSE: int
    GDK_DEVICE_TOOL_TYPE_LENS: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    AIRBRUSH: int
    BRUSH: int
    ERASER: int
    LENS: int
    MOUSE: int
    PEN: int
    PENCIL: int
    UNKNOWN: int

class DeviceType(__gobject.GEnum):
    GDK_DEVICE_TYPE_MASTER: int
    GDK_DEVICE_TYPE_SLAVE: int
    GDK_DEVICE_TYPE_FLOATING: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    FLOATING: int
    MASTER: int
    SLAVE: int

class Display(__gi_overrides_GObject.Object):
    def beep(self) -> None: ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def close(self) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def device_is_grabbed(self, device: Gdk.Device) -> bool: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def flush(self) -> None: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_app_launch_context(self) -> Gdk.AppLaunchContext: ...
    def get_data(self, *args, **kargs) -> None: ...
    @staticmethod
    def get_default() -> Union[Gdk.Display, None]: ...
    def get_default_cursor_size(self) -> int: ...
    def get_default_group(self) -> Gdk.Window: ...
    def get_default_screen(self) -> Gdk.Screen: ...
    def get_default_seat(self) -> Gdk.Seat: ...
    def get_device_manager(self) -> Union[Gdk.DeviceManager, None]: ...
    def get_event(self) -> Union[Gdk.Event, None]: ...
    def get_maximal_cursor_size(self) -> tuple[None, None]: ...
    def get_monitor(self, monitor_num: int) -> Union[Gdk.Monitor, None]: ...
    def get_monitor_at_point(self, x: int, y: int) -> Gdk.Monitor: ...
    def get_monitor_at_window(self, window: Gdk.Window) -> Gdk.Monitor: ...
    def get_name(self) -> str: ...
    def get_n_monitors(self) -> int: ...
    def get_n_screens(self) -> int: ...
    def get_pointer(self) -> tuple[None, None, None, None]: ...
    def get_primary_monitor(self) -> Union[Gdk.Monitor, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_screen(self, screen_num: int) -> Gdk.Screen: ...
    def get_window_at_pointer(self) -> Union[Gdk.Window, tuple[None, None, None]]: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def has_pending(self) -> bool: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_closed(self) -> bool: ...
    def is_floating(self) -> bool: ...
    def keyboard_ungrab(self, time_: int): ...
    def list_devices(self) -> list: ...
    def list_properties(self) -> tuple[list, None]: ...
    def list_seats(self) -> list: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def notify_startup_complete(self, startup_id: str): ...
    @staticmethod
    def open(display_name: str) -> Union[Gdk.Display, None]: ...
    @staticmethod
    def open_default_libgtk_only() -> Union[Gdk.Display, None]: ...
    def override_property(self, property_id: int, name: str): ...
    def peek_event(self) -> Union[Gdk.Event, None]: ...
    def pointer_is_grabbed(self) -> bool: ...
    def pointer_ungrab(self, time_: int): ...
    def put_event(self, event: Gdk.Event): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def request_selection_notification(self, selection: Gdk.Atom) -> bool: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_double_click_distance(self, distance: int): ...
    def set_double_click_time(self, msec: int): ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def store_clipboard(self, clipboard_window: Gdk.Window, time_: int, targets: list = ...): ...
    def supports_clipboard_persistence(self) -> bool: ...
    def supports_composite(self) -> bool: ...
    def supports_cursor_alpha(self) -> bool: ...
    def supports_cursor_color(self) -> bool: ...
    def supports_input_shapes(self) -> bool: ...
    def supports_selection_notification(self) -> bool: ...
    def supports_shapes(self) -> bool: ...
    def sync(self) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def warp_pointer(self, screen: Gdk.Screen, x: int, y: int): ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class DisplayManager(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    @staticmethod
    def get() -> Gdk.DisplayManager: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_default_display(self) -> Union[Gdk.Display, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_displays(self) -> list: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def open_display(self, name: str) -> Union[Gdk.Display, None]: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_default_display(self, display: Gdk.Display): ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class DragAction(__gobject.GFlags):
    GDK_ACTION_DEFAULT: int
    GDK_ACTION_COPY: int
    GDK_ACTION_MOVE: int
    GDK_ACTION_LINK: int
    GDK_ACTION_PRIVATE: int
    GDK_ACTION_ASK: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ASK: int
    COPY: int
    DEFAULT: int
    LINK: int
    MOVE: int
    PRIVATE: int

class DragCancelReason(__gobject.GEnum):
    GDK_DRAG_CANCEL_NO_TARGET: int
    GDK_DRAG_CANCEL_USER_CANCELLED: int
    GDK_DRAG_CANCEL_ERROR: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ERROR: int
    NO_TARGET: int
    USER_CANCELLED: int

class DragContext(DragContext):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def finish(self, success, del_, time) -> None: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_actions(self) -> Gdk.DragAction: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_dest_window(self) -> Gdk.Window: ...
    def get_device(self) -> Gdk.Device: ...
    def get_drag_window(self) -> Union[Gdk.Window, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_protocol(self) -> Gdk.DragProtocol: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_selected_action(self) -> Gdk.DragAction: ...
    def get_source_window(self) -> Gdk.Window: ...
    def get_suggested_action(self) -> Gdk.DragAction: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    def list_targets(self) -> list: ...
    def manage_dnd(self, ipc_window: Gdk.Window, actions: Gdk.DragAction) -> bool: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_device(self, device: Gdk.Device): ...
    def set_hotspot(self, hot_x: int, hot_y: int): ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class DragProtocol(__gobject.GEnum):
    GDK_DRAG_PROTO_NONE: int
    GDK_DRAG_PROTO_MOTIF: int
    GDK_DRAG_PROTO_XDND: int
    GDK_DRAG_PROTO_ROOTWIN: int
    GDK_DRAG_PROTO_WIN32_DROPFILES: int
    GDK_DRAG_PROTO_OLE2: int
    GDK_DRAG_PROTO_LOCAL: int
    GDK_DRAG_PROTO_WAYLAND: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    LOCAL: int
    MOTIF: int
    NONE: int
    OLE2: int
    ROOTWIN: int
    WAYLAND: int
    WIN32_DROPFILES: int
    XDND: int

class DrawingContext(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_cairo_context(self) -> cairo.Context: ...
    def get_clip(self) -> Union[cairo.Region, None]: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_window(self) -> Gdk.Window: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def is_valid(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class DrawingContextClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class Event(Event):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(self, axis_use: Gdk.AxisUse) -> tuple[bool, None]: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(self) -> tuple[bool, None, None]: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(self) -> tuple[bool, None, None]: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(self) -> tuple[bool, None]: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getattr__(self, name) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    any: Incomplete
    button: Incomplete
    configure: Incomplete
    crossing: Incomplete
    dnd: Incomplete
    expose: Incomplete
    focus_change: Incomplete
    grab_broken: Incomplete
    key: Incomplete
    motion: Incomplete
    owner_change: Incomplete
    pad_axis: Incomplete
    pad_button: Incomplete
    pad_group_mode: Incomplete
    property: Incomplete
    proximity: Incomplete
    scroll: Incomplete
    selection: Incomplete
    setting: Incomplete
    touch: Incomplete
    touchpad_pinch: Incomplete
    touchpad_swipe: Incomplete
    type: Incomplete
    visibility: Incomplete
    window_state: Incomplete
    GDK_DELETE: str
    GDK_DESTROY: str
    GDK_EXPOSE: str
    GDK_MOTION_NOTIFY: str
    GDK_BUTTON_PRESS: str
    GDK_2BUTTON_PRESS: str
    GDK_3BUTTON_PRESS: str
    GDK_BUTTON_RELEASE: str
    GDK_KEY_PRESS: str
    GDK_KEY_RELEASE: str
    GDK_ENTER_NOTIFY: str
    GDK_LEAVE_NOTIFY: str
    GDK_FOCUS_CHANGE: str
    GDK_CONFIGURE: str
    GDK_MAP: str
    GDK_UNMAP: str
    GDK_PROPERTY_NOTIFY: str
    GDK_SELECTION_CLEAR: str
    GDK_SELECTION_REQUEST: str
    GDK_SELECTION_NOTIFY: str
    GDK_PROXIMITY_IN: str
    GDK_PROXIMITY_OUT: str
    GDK_DRAG_ENTER: str
    GDK_DRAG_LEAVE: str
    GDK_DRAG_MOTION: str
    GDK_DRAG_STATUS: str
    GDK_DROP_START: str
    GDK_DROP_FINISHED: str
    GDK_CLIENT_EVENT: str
    GDK_VISIBILITY_NOTIFY: str
    GDK_SCROLL: str
    GDK_TOUCH_BEGIN: str
    GDK_TOUCH_UPDATE: str
    GDK_TOUCH_END: str
    GDK_TOUCH_CANCEL: str

class EventAny(EventAny):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    send_event: Incomplete
    type: Incomplete
    window: Incomplete

class EventButton(EventButton):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    axes: Incomplete
    button: Incomplete
    device: Incomplete
    send_event: Incomplete
    state: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete
    x: Incomplete
    x_root: Incomplete
    y: Incomplete
    y_root: Incomplete

class EventConfigure(EventConfigure):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    height: Incomplete
    send_event: Incomplete
    type: Incomplete
    width: Incomplete
    window: Incomplete
    x: Incomplete
    y: Incomplete

class EventCrossing(EventCrossing):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    detail: Incomplete
    focus: Incomplete
    mode: Incomplete
    send_event: Incomplete
    state: Incomplete
    subwindow: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete
    x: Incomplete
    x_root: Incomplete
    y: Incomplete
    y_root: Incomplete

class EventDND(EventDND):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    context: Incomplete
    send_event: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete
    x_root: Incomplete
    y_root: Incomplete

class EventExpose(EventExpose):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    area: Incomplete
    count: Incomplete
    region: Incomplete
    send_event: Incomplete
    type: Incomplete
    window: Incomplete

class EventFocus(EventFocus):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    in_: Incomplete
    send_event: Incomplete
    type: Incomplete
    window: Incomplete

class EventGrabBroken(EventGrabBroken):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    grab_window: Incomplete
    implicit: Incomplete
    keyboard: Incomplete
    send_event: Incomplete
    type: Incomplete
    window: Incomplete

class EventKey(EventKey):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    group: Incomplete
    hardware_keycode: Incomplete
    is_modifier: Incomplete
    keyval: Incomplete
    length: Incomplete
    send_event: Incomplete
    state: Incomplete
    string: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete

class EventMask(__gobject.GFlags):
    GDK_EXPOSURE_MASK: int
    GDK_POINTER_MOTION_MASK: int
    GDK_POINTER_MOTION_HINT_MASK: int
    GDK_BUTTON_MOTION_MASK: int
    GDK_BUTTON1_MOTION_MASK: int
    GDK_BUTTON2_MOTION_MASK: int
    GDK_BUTTON3_MOTION_MASK: int
    GDK_BUTTON_PRESS_MASK: int
    GDK_BUTTON_RELEASE_MASK: int
    GDK_KEY_PRESS_MASK: int
    GDK_KEY_RELEASE_MASK: int
    GDK_ENTER_NOTIFY_MASK: int
    GDK_LEAVE_NOTIFY_MASK: int
    GDK_FOCUS_CHANGE_MASK: int
    GDK_STRUCTURE_MASK: int
    GDK_PROPERTY_CHANGE_MASK: int
    GDK_VISIBILITY_NOTIFY_MASK: int
    GDK_PROXIMITY_IN_MASK: int
    GDK_PROXIMITY_OUT_MASK: int
    GDK_SUBSTRUCTURE_MASK: int
    GDK_SCROLL_MASK: int
    GDK_TOUCH_MASK: int
    GDK_SMOOTH_SCROLL_MASK: int
    GDK_TOUCHPAD_GESTURE_MASK: int
    GDK_TABLET_PAD_MASK: int
    GDK_ALL_EVENTS_MASK: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ALL_EVENTS_MASK: int
    BUTTON1_MOTION_MASK: int
    BUTTON2_MOTION_MASK: int
    BUTTON3_MOTION_MASK: int
    BUTTON_MOTION_MASK: int
    BUTTON_PRESS_MASK: int
    BUTTON_RELEASE_MASK: int
    ENTER_NOTIFY_MASK: int
    EXPOSURE_MASK: int
    FOCUS_CHANGE_MASK: int
    KEY_PRESS_MASK: int
    KEY_RELEASE_MASK: int
    LEAVE_NOTIFY_MASK: int
    POINTER_MOTION_HINT_MASK: int
    POINTER_MOTION_MASK: int
    PROPERTY_CHANGE_MASK: int
    PROXIMITY_IN_MASK: int
    PROXIMITY_OUT_MASK: int
    SCROLL_MASK: int
    SMOOTH_SCROLL_MASK: int
    STRUCTURE_MASK: int
    SUBSTRUCTURE_MASK: int
    TABLET_PAD_MASK: int
    TOUCHPAD_GESTURE_MASK: int
    TOUCH_MASK: int
    VISIBILITY_NOTIFY_MASK: int

class EventMotion(EventMotion):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    axes: Incomplete
    device: Incomplete
    is_hint: Incomplete
    send_event: Incomplete
    state: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete
    x: Incomplete
    x_root: Incomplete
    y: Incomplete
    y_root: Incomplete

class EventOwnerChange(EventOwnerChange):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    owner: Incomplete
    reason: Incomplete
    selection: Incomplete
    selection_time: Incomplete
    send_event: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete

class EventPadAxis(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    group: Incomplete
    index: Incomplete
    mode: Incomplete
    send_event: Incomplete
    time: Incomplete
    type: Incomplete
    value: Incomplete
    window: Incomplete

class EventPadButton(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    button: Incomplete
    group: Incomplete
    mode: Incomplete
    send_event: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete

class EventPadGroupMode(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    group: Incomplete
    mode: Incomplete
    send_event: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete

class EventProperty(EventProperty):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    atom: Incomplete
    send_event: Incomplete
    state: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete

class EventProximity(EventProximity):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    device: Incomplete
    send_event: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete

class EventScroll(EventScroll):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    delta_x: Incomplete
    delta_y: Incomplete
    device: Incomplete
    direction: Incomplete
    is_stop: Incomplete
    send_event: Incomplete
    state: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete
    x: Incomplete
    x_root: Incomplete
    y: Incomplete
    y_root: Incomplete

class EventSelection(EventSelection):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    property: Incomplete
    requestor: Incomplete
    selection: Incomplete
    send_event: Incomplete
    target: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete

class EventSequence(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class EventSetting(EventSetting):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    action: Incomplete
    name: Incomplete
    send_event: Incomplete
    type: Incomplete
    window: Incomplete

class EventTouch(EventTouch):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    axes: Incomplete
    device: Incomplete
    emulating_pointer: Incomplete
    send_event: Incomplete
    sequence: Incomplete
    state: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete
    x: Incomplete
    x_root: Incomplete
    y: Incomplete
    y_root: Incomplete

class EventTouchpadPinch(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    angle_delta: Incomplete
    dx: Incomplete
    dy: Incomplete
    n_fingers: Incomplete
    phase: Incomplete
    scale: Incomplete
    send_event: Incomplete
    state: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete
    x: Incomplete
    x_root: Incomplete
    y: Incomplete
    y_root: Incomplete

class EventTouchpadSwipe(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    dx: Incomplete
    dy: Incomplete
    n_fingers: Incomplete
    phase: Incomplete
    send_event: Incomplete
    state: Incomplete
    time: Incomplete
    type: Incomplete
    window: Incomplete
    x: Incomplete
    x_root: Incomplete
    y: Incomplete
    y_root: Incomplete

class EventType(__gobject.GEnum):
    GDK_NOTHING: int
    GDK_DELETE: int
    GDK_DESTROY: int
    GDK_EXPOSE: int
    GDK_MOTION_NOTIFY: int
    GDK_BUTTON_PRESS: int
    GDK_2BUTTON_PRESS: int
    GDK_3BUTTON_PRESS: int
    GDK_BUTTON_RELEASE: int
    GDK_KEY_PRESS: int
    GDK_KEY_RELEASE: int
    GDK_ENTER_NOTIFY: int
    GDK_LEAVE_NOTIFY: int
    GDK_FOCUS_CHANGE: int
    GDK_CONFIGURE: int
    GDK_MAP: int
    GDK_UNMAP: int
    GDK_PROPERTY_NOTIFY: int
    GDK_SELECTION_CLEAR: int
    GDK_SELECTION_REQUEST: int
    GDK_SELECTION_NOTIFY: int
    GDK_PROXIMITY_IN: int
    GDK_PROXIMITY_OUT: int
    GDK_DRAG_ENTER: int
    GDK_DRAG_LEAVE: int
    GDK_DRAG_MOTION: int
    GDK_DRAG_STATUS: int
    GDK_DROP_START: int
    GDK_DROP_FINISHED: int
    GDK_CLIENT_EVENT: int
    GDK_VISIBILITY_NOTIFY: int
    GDK_SCROLL: int
    GDK_WINDOW_STATE: int
    GDK_SETTING: int
    GDK_OWNER_CHANGE: int
    GDK_GRAB_BROKEN: int
    GDK_DAMAGE: int
    GDK_TOUCH_BEGIN: int
    GDK_TOUCH_UPDATE: int
    GDK_TOUCH_END: int
    GDK_TOUCH_CANCEL: int
    GDK_TOUCHPAD_SWIPE: int
    GDK_TOUCHPAD_PINCH: int
    GDK_PAD_BUTTON_PRESS: int
    GDK_PAD_BUTTON_RELEASE: int
    GDK_PAD_RING: int
    GDK_PAD_STRIP: int
    GDK_PAD_GROUP_MODE: int
    GDK_EVENT_LAST: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete

class EventVisibility(EventVisibility):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    send_event: Incomplete
    state: Incomplete
    type: Incomplete
    window: Incomplete

class EventWindowState(EventWindowState):
    def copy(self) -> Gdk.Event: ...
    def free(self) -> None: ...
    @staticmethod
    def get() -> Union[Gdk.Event, None]: ...
    def get_axis(*args, **kwargs) -> None: ...
    def get_button(self) -> tuple[bool, None]: ...
    def get_click_count(self) -> tuple[bool, None]: ...
    def get_coords(*args, **kwargs) -> None: ...
    def get_device(self) -> Union[Gdk.Device, None]: ...
    def get_device_tool(self) -> Gdk.DeviceTool: ...
    def get_event_sequence(self) -> Gdk.EventSequence: ...
    def get_event_type(self) -> Gdk.EventType: ...
    def get_keycode(self) -> tuple[bool, None]: ...
    def get_keyval(self) -> tuple[bool, None]: ...
    def get_pointer_emulated(self) -> bool: ...
    def get_root_coords(*args, **kwargs) -> None: ...
    def get_scancode(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_scroll_deltas(self) -> tuple[bool, None, None]: ...
    def get_scroll_direction(self) -> tuple[bool, None]: ...
    def get_seat(self) -> Gdk.Seat: ...
    def get_source_device(self) -> Union[Gdk.Device, None]: ...
    def get_state(*args, **kwargs) -> None: ...
    def get_time(self) -> int: ...
    def get_window(self) -> Gdk.Window: ...
    @staticmethod
    def handler_set(func: Gdk.EventFunc, data: Incomplete | None = ...): ...
    def is_scroll_stop_event(self) -> bool: ...
    @staticmethod
    def new(type: Gdk.EventType) -> Gdk.Event: ...
    @staticmethod
    def peek() -> Union[Gdk.Event, None]: ...
    def put(self) -> None: ...
    @staticmethod
    def request_motions(event: Gdk.EventMotion): ...
    def set_device(self, device: Gdk.Device): ...
    def set_device_tool(self, tool: Gdk.DeviceTool = ...): ...
    def set_screen(self, screen: Gdk.Screen): ...
    def set_source_device(self, device: Gdk.Device): ...
    def triggers_context_menu(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    changed_mask: Incomplete
    new_window_state: Incomplete
    send_event: Incomplete
    type: Incomplete
    window: Incomplete

class FilterReturn(__gobject.GEnum):
    GDK_FILTER_CONTINUE: int
    GDK_FILTER_TRANSLATE: int
    GDK_FILTER_REMOVE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CONTINUE: int
    REMOVE: int
    TRANSLATE: int

class FrameClock(__gi_overrides_GObject.Object):
    def begin_updating(self) -> None: ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def end_updating(self) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_current_timings(self) -> Union[Gdk.FrameTimings, None]: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_frame_counter(self) -> int: ...
    def get_frame_time(self) -> int: ...
    def get_history_start(self) -> int: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_refresh_info(self, base_time: int) -> tuple[None, None]: ...
    def get_timings(self, frame_counter: int) -> Union[Gdk.FrameTimings, None]: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def request_phase(self, phase: Gdk.FrameClockPhase): ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class FrameClockClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class FrameClockPhase(__gobject.GFlags):
    GDK_FRAME_CLOCK_PHASE_NONE: int
    GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS: int
    GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT: int
    GDK_FRAME_CLOCK_PHASE_UPDATE: int
    GDK_FRAME_CLOCK_PHASE_LAYOUT: int
    GDK_FRAME_CLOCK_PHASE_PAINT: int
    GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS: int
    GDK_FRAME_CLOCK_PHASE_AFTER_PAINT: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    AFTER_PAINT: int
    BEFORE_PAINT: int
    FLUSH_EVENTS: int
    LAYOUT: int
    NONE: int
    PAINT: int
    RESUME_EVENTS: int
    UPDATE: int

class FrameClockPrivate(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class FrameTimings(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def get_complete(self) -> bool: ...
    def get_frame_counter(self) -> int: ...
    def get_frame_time(self) -> int: ...
    def get_predicted_presentation_time(self) -> int: ...
    def get_presentation_time(self) -> int: ...
    def get_refresh_interval(self) -> int: ...
    def ref(self) -> Gdk.FrameTimings: ...
    def unref(self) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class FullscreenMode(__gobject.GEnum):
    GDK_FULLSCREEN_ON_CURRENT_MONITOR: int
    GDK_FULLSCREEN_ON_ALL_MONITORS: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ALL_MONITORS: int
    CURRENT_MONITOR: int

class Geometry(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    base_height: Incomplete
    base_width: Incomplete
    height_inc: Incomplete
    max_aspect: Incomplete
    max_height: Incomplete
    max_width: Incomplete
    min_aspect: Incomplete
    min_height: Incomplete
    min_width: Incomplete
    width_inc: Incomplete
    win_gravity: Incomplete

class GLContext(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    @staticmethod
    def clear_current() -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    @staticmethod
    def get_current() -> Union[Gdk.GLContext, None]: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_debug_enabled(self) -> bool: ...
    def get_display(self) -> Union[Gdk.Display, None]: ...
    def get_forward_compatible(self) -> bool: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_required_version(self) -> tuple[None, None]: ...
    def get_shared_context(self) -> Union[Gdk.GLContext, None]: ...
    def get_use_es(self) -> bool: ...
    def get_version(self) -> tuple[None, None]: ...
    def get_window(self) -> Union[Gdk.Window, None]: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def is_legacy(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    def make_current(self) -> None: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def realize(self) -> bool: ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_debug_enabled(self, enabled: bool): ...
    def set_forward_compatible(self, compatible: bool): ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def set_required_version(self, major: int, minor: int): ...
    def set_use_es(self, use_es: int): ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class GLError(__gobject.GEnum):
    GDK_GL_ERROR_NOT_AVAILABLE: int
    GDK_GL_ERROR_UNSUPPORTED_FORMAT: int
    GDK_GL_ERROR_UNSUPPORTED_PROFILE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    @staticmethod
    def quark() -> int: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    NOT_AVAILABLE: int
    UNSUPPORTED_FORMAT: int
    UNSUPPORTED_PROFILE: int

class GrabOwnership(__gobject.GEnum):
    GDK_OWNERSHIP_NONE: int
    GDK_OWNERSHIP_WINDOW: int
    GDK_OWNERSHIP_APPLICATION: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    APPLICATION: int
    NONE: int
    WINDOW: int

class GrabStatus(__gobject.GEnum):
    GDK_GRAB_SUCCESS: int
    GDK_GRAB_ALREADY_GRABBED: int
    GDK_GRAB_INVALID_TIME: int
    GDK_GRAB_NOT_VIEWABLE: int
    GDK_GRAB_FROZEN: int
    GDK_GRAB_FAILED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ALREADY_GRABBED: int
    FAILED: int
    FROZEN: int
    INVALID_TIME: int
    NOT_VIEWABLE: int
    SUCCESS: int

class Gravity(__gobject.GEnum):
    GDK_GRAVITY_NORTH_WEST: int
    GDK_GRAVITY_NORTH: int
    GDK_GRAVITY_NORTH_EAST: int
    GDK_GRAVITY_WEST: int
    GDK_GRAVITY_CENTER: int
    GDK_GRAVITY_EAST: int
    GDK_GRAVITY_SOUTH_WEST: int
    GDK_GRAVITY_SOUTH: int
    GDK_GRAVITY_SOUTH_EAST: int
    GDK_GRAVITY_STATIC: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CENTER: int
    EAST: int
    NORTH: int
    NORTH_EAST: int
    NORTH_WEST: int
    SOUTH: int
    SOUTH_EAST: int
    SOUTH_WEST: int
    STATIC: int
    WEST: int

class InputMode(__gobject.GEnum):
    GDK_MODE_DISABLED: int
    GDK_MODE_SCREEN: int
    GDK_MODE_WINDOW: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    DISABLED: int
    SCREEN: int
    WINDOW: int

class InputSource(__gobject.GEnum):
    GDK_SOURCE_MOUSE: int
    GDK_SOURCE_PEN: int
    GDK_SOURCE_ERASER: int
    GDK_SOURCE_CURSOR: int
    GDK_SOURCE_KEYBOARD: int
    GDK_SOURCE_TOUCHSCREEN: int
    GDK_SOURCE_TOUCHPAD: int
    GDK_SOURCE_TRACKPOINT: int
    GDK_SOURCE_TABLET_PAD: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CURSOR: int
    ERASER: int
    KEYBOARD: int
    MOUSE: int
    PEN: int
    TABLET_PAD: int
    TOUCHPAD: int
    TOUCHSCREEN: int
    TRACKPOINT: int

class Keymap(__gi_overrides_GObject.Object):
    def add_virtual_modifiers(self, state: Gdk.ModifierType) -> Gdk.ModifierType: ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_caps_lock_state(self) -> bool: ...
    def get_data(self, *args, **kargs) -> None: ...
    @staticmethod
    def get_default() -> Gdk.Keymap: ...
    def get_direction(self) -> Pango.Direction: ...
    def get_entries_for_keycode(self, hardware_keycode: int) -> tuple[bool, None, None]: ...
    def get_entries_for_keyval(self, keyval: int) -> tuple[bool, None]: ...
    @staticmethod
    def get_for_display(display: Gdk.Display) -> Gdk.Keymap: ...
    def get_modifier_mask(self, intent: Gdk.ModifierIntent) -> Gdk.ModifierType: ...
    def get_modifier_state(self) -> int: ...
    def get_num_lock_state(self) -> bool: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_scroll_lock_state(self) -> bool: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def have_bidi_layouts(self) -> bool: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    def lookup_key(self, key: Gdk.KeymapKey) -> int: ...
    def map_virtual_modifiers(self, state: Gdk.ModifierType) -> tuple[bool, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def translate_keyboard_state(self, hardware_keycode: int, state: Gdk.ModifierType, group: int) -> tuple[bool, None, None, None, None]: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class KeymapKey(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    group: Incomplete
    keycode: Incomplete
    level: Incomplete

class ModifierIntent(__gobject.GEnum):
    GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR: int
    GDK_MODIFIER_INTENT_CONTEXT_MENU: int
    GDK_MODIFIER_INTENT_EXTEND_SELECTION: int
    GDK_MODIFIER_INTENT_MODIFY_SELECTION: int
    GDK_MODIFIER_INTENT_NO_TEXT_INPUT: int
    GDK_MODIFIER_INTENT_SHIFT_GROUP: int
    GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CONTEXT_MENU: int
    DEFAULT_MOD_MASK: int
    EXTEND_SELECTION: int
    MODIFY_SELECTION: int
    NO_TEXT_INPUT: int
    PRIMARY_ACCELERATOR: int
    SHIFT_GROUP: int

class ModifierType(__gobject.GFlags):
    GDK_SHIFT_MASK: int
    GDK_LOCK_MASK: int
    GDK_CONTROL_MASK: int
    GDK_MOD1_MASK: int
    GDK_MOD2_MASK: int
    GDK_MOD3_MASK: int
    GDK_MOD4_MASK: int
    GDK_MOD5_MASK: int
    GDK_BUTTON1_MASK: int
    GDK_BUTTON2_MASK: int
    GDK_BUTTON3_MASK: int
    GDK_BUTTON4_MASK: int
    GDK_BUTTON5_MASK: int
    GDK_MODIFIER_RESERVED_13_MASK: int
    GDK_MODIFIER_RESERVED_14_MASK: int
    GDK_MODIFIER_RESERVED_15_MASK: int
    GDK_MODIFIER_RESERVED_16_MASK: int
    GDK_MODIFIER_RESERVED_17_MASK: int
    GDK_MODIFIER_RESERVED_18_MASK: int
    GDK_MODIFIER_RESERVED_19_MASK: int
    GDK_MODIFIER_RESERVED_20_MASK: int
    GDK_MODIFIER_RESERVED_21_MASK: int
    GDK_MODIFIER_RESERVED_22_MASK: int
    GDK_MODIFIER_RESERVED_23_MASK: int
    GDK_MODIFIER_RESERVED_24_MASK: int
    GDK_MODIFIER_RESERVED_25_MASK: int
    GDK_SUPER_MASK: int
    GDK_HYPER_MASK: int
    GDK_META_MASK: int
    GDK_MODIFIER_RESERVED_29_MASK: int
    GDK_RELEASE_MASK: int
    GDK_MODIFIER_MASK: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    BUTTON1_MASK: int
    BUTTON2_MASK: int
    BUTTON3_MASK: int
    BUTTON4_MASK: int
    BUTTON5_MASK: int
    CONTROL_MASK: int
    HYPER_MASK: int
    LOCK_MASK: int
    META_MASK: int
    MOD1_MASK: int
    MOD2_MASK: int
    MOD3_MASK: int
    MOD4_MASK: int
    MOD5_MASK: int
    MODIFIER_MASK: int
    MODIFIER_RESERVED_13_MASK: int
    MODIFIER_RESERVED_14_MASK: int
    MODIFIER_RESERVED_15_MASK: int
    MODIFIER_RESERVED_16_MASK: int
    MODIFIER_RESERVED_17_MASK: int
    MODIFIER_RESERVED_18_MASK: int
    MODIFIER_RESERVED_19_MASK: int
    MODIFIER_RESERVED_20_MASK: int
    MODIFIER_RESERVED_21_MASK: int
    MODIFIER_RESERVED_22_MASK: int
    MODIFIER_RESERVED_23_MASK: int
    MODIFIER_RESERVED_24_MASK: int
    MODIFIER_RESERVED_25_MASK: int
    MODIFIER_RESERVED_29_MASK: int
    RELEASE_MASK: int
    SHIFT_MASK: int
    SUPER_MASK: int

class Monitor(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_display(self) -> Gdk.Display: ...
    def get_geometry(self) -> Gdk.Rectangle: ...
    def get_height_mm(self) -> int: ...
    def get_manufacturer(self) -> Union[str, None]: ...
    def get_model(self) -> Union[str, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_refresh_rate(self) -> int: ...
    def get_scale_factor(self) -> int: ...
    def get_subpixel_layout(self) -> Gdk.SubpixelLayout: ...
    def get_width_mm(self) -> int: ...
    def get_workarea(self) -> Gdk.Rectangle: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def is_primary(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class MonitorClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class NotifyType(__gobject.GEnum):
    GDK_NOTIFY_ANCESTOR: int
    GDK_NOTIFY_VIRTUAL: int
    GDK_NOTIFY_INFERIOR: int
    GDK_NOTIFY_NONLINEAR: int
    GDK_NOTIFY_NONLINEAR_VIRTUAL: int
    GDK_NOTIFY_UNKNOWN: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ANCESTOR: int
    INFERIOR: int
    NONLINEAR: int
    NONLINEAR_VIRTUAL: int
    UNKNOWN: int
    VIRTUAL: int

class OwnerChange(__gobject.GEnum):
    GDK_OWNER_CHANGE_NEW_OWNER: int
    GDK_OWNER_CHANGE_DESTROY: int
    GDK_OWNER_CHANGE_CLOSE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CLOSE: int
    DESTROY: int
    NEW_OWNER: int

class Point(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    x: Incomplete
    y: Incomplete

class PropertyState(__gobject.GEnum):
    GDK_PROPERTY_NEW_VALUE: int
    GDK_PROPERTY_DELETE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    DELETE: int
    NEW_VALUE: int

class PropMode(__gobject.GEnum):
    GDK_PROP_MODE_REPLACE: int
    GDK_PROP_MODE_PREPEND: int
    GDK_PROP_MODE_APPEND: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    APPEND: int
    PREPEND: int
    REPLACE: int

class Rectangle(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def equal(self, rect2: Gdk.Rectangle) -> bool: ...
    def intersect(self, src2: Gdk.Rectangle) -> tuple[bool, None]: ...
    def union(self, src2: Gdk.Rectangle) -> Gdk.Rectangle: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    height: Incomplete
    width: Incomplete
    x: Incomplete
    y: Incomplete

class RGBA(RGBA):
    def copy(self) -> Gdk.RGBA: ...
    def equal(self, p2: Gdk.RGBA) -> bool: ...
    def free(self) -> None: ...
    @staticmethod
    def from_color(color: Gdk.Color) -> Gdk.RGBA: ...
    def hash(self) -> int: ...
    def parse(self, spec: str) -> bool: ...
    def to_color(self) -> None: ...
    def to_string(self) -> str: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, other): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, red: float = ..., green: float = ..., blue: float = ..., alpha: float = ...) -> None: ...
    def __iter__(self): ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    alpha: Incomplete
    blue: Incomplete
    green: Incomplete
    red: Incomplete
    __hash__: Incomplete

class Screen(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_active_window(self) -> Union[Gdk.Window, None]: ...
    def get_data(self, *args, **kargs) -> None: ...
    @staticmethod
    def get_default() -> Union[Gdk.Screen, None]: ...
    def get_display(self) -> Gdk.Display: ...
    def get_font_options(self) -> Union[cairo.FontOptions, None]: ...
    def get_height(self) -> int: ...
    def get_height_mm(self) -> int: ...
    def get_monitor_at_point(self, x: int, y: int) -> int: ...
    def get_monitor_at_window(self, window: Gdk.Window) -> int: ...
    def get_monitor_geometry(self, monitor_num: int) -> Gdk.Rectangle: ...
    def get_monitor_height_mm(self, monitor_num: int) -> int: ...
    def get_monitor_plug_name(self, monitor_num: int) -> Union[str, None]: ...
    def get_monitor_scale_factor(self, monitor_num: int) -> int: ...
    def get_monitor_width_mm(self, monitor_num: int) -> int: ...
    def get_monitor_workarea(self, monitor_num: int) -> Gdk.Rectangle: ...
    def get_number(self) -> int: ...
    def get_n_monitors(self) -> int: ...
    def get_primary_monitor(self) -> int: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_resolution(self) -> float: ...
    def get_rgba_visual(self) -> Union[Gdk.Visual, None]: ...
    def get_root_window(self) -> Gdk.Window: ...
    def get_setting(self, name: str, value: GObject.Value) -> bool: ...
    def get_system_visual(self) -> Gdk.Visual: ...
    def get_toplevel_windows(self) -> list: ...
    def get_width(self) -> int: ...
    def get_width_mm(self) -> int: ...
    def get_window_stack(self) -> Union[list, None]: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    @staticmethod
    def height() -> int: ...
    @staticmethod
    def height_mm() -> int: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_composited(self) -> bool: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    def list_visuals(self) -> list: ...
    def make_display_name(self) -> str: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_font_options(self, options: cairo.FontOptions = ...): ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def set_resolution(self, dpi: float): ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    @staticmethod
    def width() -> int: ...
    @staticmethod
    def width_mm() -> int: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class ScrollDirection(__gobject.GEnum):
    GDK_SCROLL_UP: int
    GDK_SCROLL_DOWN: int
    GDK_SCROLL_LEFT: int
    GDK_SCROLL_RIGHT: int
    GDK_SCROLL_SMOOTH: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    DOWN: int
    LEFT: int
    RIGHT: int
    SMOOTH: int
    UP: int

class Seat(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_capabilities(self) -> Gdk.SeatCapabilities: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_display(self) -> Gdk.Display: ...
    def get_keyboard(self) -> Union[Gdk.Device, None]: ...
    def get_pointer(self) -> Union[Gdk.Device, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_slaves(self, capabilities: Gdk.SeatCapabilities) -> list: ...
    def grab(self, window: Gdk.Window, capabilities: Gdk.SeatCapabilities, owner_events: bool, cursor: Gdk.Cursor, event: Gdk.Event, prepare_func: Gdk.SeatGrabPrepareFunc, prepare_func_data) -> Gdk.GrabStatus: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def ungrab(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    parent_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class SeatCapabilities(__gobject.GFlags):
    GDK_SEAT_CAPABILITY_NONE: int
    GDK_SEAT_CAPABILITY_POINTER: int
    GDK_SEAT_CAPABILITY_TOUCH: int
    GDK_SEAT_CAPABILITY_TABLET_STYLUS: int
    GDK_SEAT_CAPABILITY_KEYBOARD: int
    GDK_SEAT_CAPABILITY_ALL_POINTING: int
    GDK_SEAT_CAPABILITY_ALL: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ALL: int
    ALL_POINTING: int
    KEYBOARD: int
    NONE: int
    POINTER: int
    TABLET_STYLUS: int
    TOUCH: int

class SettingAction(__gobject.GEnum):
    GDK_SETTING_ACTION_NEW: int
    GDK_SETTING_ACTION_CHANGED: int
    GDK_SETTING_ACTION_DELETED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CHANGED: int
    DELETED: int
    NEW: int

class Status(__gobject.GEnum):
    GDK_OK: int
    GDK_ERROR: int
    GDK_ERROR_PARAM: int
    GDK_ERROR_FILE: int
    GDK_ERROR_MEM: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ERROR: int
    ERROR_FILE: int
    ERROR_MEM: int
    ERROR_PARAM: int
    OK: int

class SubpixelLayout(__gobject.GEnum):
    GDK_SUBPIXEL_LAYOUT_UNKNOWN: int
    GDK_SUBPIXEL_LAYOUT_NONE: int
    GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB: int
    GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR: int
    GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB: int
    GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    HORIZONTAL_BGR: int
    HORIZONTAL_RGB: int
    NONE: int
    UNKNOWN: int
    VERTICAL_BGR: int
    VERTICAL_RGB: int

class TimeCoord(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    axes: Incomplete
    time: Incomplete

class TouchpadGesturePhase(__gobject.GEnum):
    GDK_TOUCHPAD_GESTURE_PHASE_BEGIN: int
    GDK_TOUCHPAD_GESTURE_PHASE_UPDATE: int
    GDK_TOUCHPAD_GESTURE_PHASE_END: int
    GDK_TOUCHPAD_GESTURE_PHASE_CANCEL: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BEGIN: int
    CANCEL: int
    END: int
    UPDATE: int

class VisibilityState(__gobject.GEnum):
    GDK_VISIBILITY_UNOBSCURED: int
    GDK_VISIBILITY_PARTIAL: int
    GDK_VISIBILITY_FULLY_OBSCURED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    FULLY_OBSCURED: int
    PARTIAL: int
    UNOBSCURED: int

class Visual(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    @staticmethod
    def get_best() -> Gdk.Visual: ...
    @staticmethod
    def get_best_depth() -> int: ...
    @staticmethod
    def get_best_type() -> Gdk.VisualType: ...
    @staticmethod
    def get_best_with_both(depth: int, visual_type: Gdk.VisualType) -> Union[Gdk.Visual, None]: ...
    @staticmethod
    def get_best_with_depth(depth: int) -> Gdk.Visual: ...
    @staticmethod
    def get_best_with_type(visual_type: Gdk.VisualType) -> Gdk.Visual: ...
    def get_bits_per_rgb(self) -> int: ...
    def get_blue_pixel_details(self) -> tuple[None, None, None]: ...
    def get_byte_order(self) -> Gdk.ByteOrder: ...
    def get_colormap_size(self) -> int: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_depth(self) -> int: ...
    def get_green_pixel_details(self) -> tuple[None, None, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_red_pixel_details(self) -> tuple[None, None, None]: ...
    def get_screen(self) -> Gdk.Screen: ...
    @staticmethod
    def get_system() -> Gdk.Visual: ...
    def get_visual_type(self) -> Gdk.VisualType: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class VisualType(__gobject.GEnum):
    GDK_VISUAL_STATIC_GRAY: int
    GDK_VISUAL_GRAYSCALE: int
    GDK_VISUAL_STATIC_COLOR: int
    GDK_VISUAL_PSEUDO_COLOR: int
    GDK_VISUAL_TRUE_COLOR: int
    GDK_VISUAL_DIRECT_COLOR: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    DIRECT_COLOR: int
    GRAYSCALE: int
    PSEUDO_COLOR: int
    STATIC_COLOR: int
    STATIC_GRAY: int
    TRUE_COLOR: int

class Window(Window):
    @staticmethod
    def at_pointer() -> tuple[Gdk.Window, None, None]: ...
    def beep(self) -> None: ...
    def begin_draw_frame(self, region: cairo.Region) -> Gdk.DrawingContext: ...
    def begin_move_drag(self, button: int, root_x: int, root_y: int, timestamp: int): ...
    def begin_move_drag_for_device(self, device: Gdk.Device, button: int, root_x: int, root_y: int, timestamp: int): ...
    def begin_paint_rect(self, rectangle: Gdk.Rectangle): ...
    def begin_paint_region(self, region: cairo.Region): ...
    def begin_resize_drag(self, edge: Gdk.WindowEdge, button: int, root_x: int, root_y: int, timestamp: int): ...
    def begin_resize_drag_for_device(self, edge: Gdk.WindowEdge, device: Gdk.Device, button: int, root_x: int, root_y: int, timestamp: int): ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def cairo_create(self) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def configure_finished(self) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    @staticmethod
    def constrain_size(geometry: Gdk.Geometry, flags: Gdk.WindowHints, width: int, height: int) -> tuple[None, None]: ...
    def coords_from_parent(self, parent_x: float, parent_y: float) -> tuple[None, None]: ...
    def coords_to_parent(self, x: float, y: float) -> tuple[None, None]: ...
    def create_gl_context(self) -> Gdk.GLContext: ...
    def create_similar_image_surface(self, format: cairo.Format, width: int, height: int, scale: int) -> cairo.Surface: ...
    def create_similar_surface(self, content: cairo.Content, width: int, height: int) -> cairo.Surface: ...
    def deiconify(self) -> None: ...
    def destroy(self) -> None: ...
    def destroy_notify(self) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_create_surface(self, width: int, height: int) -> cairo.Surface: ...
    def do_from_embedder(self, embedder_x: float, embedder_y: float, offscreen_x: float, offscreen_y: float): ...
    def do_to_embedder(self, offscreen_x: float, offscreen_y: float, embedder_x: float, embedder_y: float): ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def enable_synchronized_configure(self) -> None: ...
    def end_draw_frame(self, context: Gdk.DrawingContext): ...
    def end_paint(self) -> None: ...
    def ensure_native(self) -> bool: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def flush(self) -> None: ...
    def focus(self, timestamp: int): ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def freeze_toplevel_updates_libgtk_only(self) -> None: ...
    def freeze_updates(self) -> None: ...
    def fullscreen(self) -> None: ...
    def fullscreen_on_monitor(self, monitor: int): ...
    def geometry_changed(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_accept_focus(self) -> bool: ...
    def get_background_pattern(self) -> Union[cairo.Pattern, None]: ...
    def get_children(self) -> list: ...
    def get_children_with_user_data(self, user_data) -> list: ...
    def get_clip_region(self) -> cairo.Region: ...
    def get_composited(self) -> bool: ...
    def get_cursor(self) -> Union[Gdk.Cursor, None]: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_decorations(self) -> tuple[bool, None]: ...
    def get_device_cursor(self, device: Gdk.Device) -> Union[Gdk.Cursor, None]: ...
    def get_device_events(self, device: Gdk.Device) -> Gdk.EventMask: ...
    def get_device_position(self, device: Gdk.Device) -> Union[Gdk.Window, tuple[None, None, None, None]]: ...
    def get_device_position_double(self, device: Gdk.Device) -> Union[Gdk.Window, tuple[None, None, None, None]]: ...
    def get_display(self) -> Gdk.Display: ...
    def get_drag_protocol(self) -> tuple[Gdk.DragProtocol, None]: ...
    def get_effective_parent(self) -> Gdk.Window: ...
    def get_effective_toplevel(self) -> Gdk.Window: ...
    def get_events(self) -> Gdk.EventMask: ...
    def get_event_compression(self) -> bool: ...
    def get_focus_on_map(self) -> bool: ...
    def get_frame_clock(self) -> Gdk.FrameClock: ...
    def get_frame_extents(self) -> Gdk.Rectangle: ...
    def get_fullscreen_mode(self) -> Gdk.FullscreenMode: ...
    def get_geometry(self) -> tuple[None, None, None, None]: ...
    def get_group(self) -> Gdk.Window: ...
    def get_height(self) -> int: ...
    def get_modal_hint(self) -> bool: ...
    def get_origin(self) -> tuple[int, None, None]: ...
    def get_parent(self) -> Gdk.Window: ...
    def get_pass_through(self) -> bool: ...
    def get_pointer(self) -> Union[Gdk.Window, tuple[None, None, None, None]]: ...
    def get_position(self) -> tuple[None, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_root_coords(self, x: int, y: int) -> tuple[None, None]: ...
    def get_root_origin(self) -> tuple[None, None]: ...
    def get_scale_factor(self) -> int: ...
    def get_screen(self) -> Gdk.Screen: ...
    def get_source_events(self, source: Gdk.InputSource) -> Gdk.EventMask: ...
    def get_state(self) -> Gdk.WindowState: ...
    def get_support_multidevice(self) -> bool: ...
    def get_toplevel(self) -> Gdk.Window: ...
    def get_type_hint(self) -> Gdk.WindowTypeHint: ...
    def get_update_area(self) -> cairo.Region: ...
    def get_user_data(self) -> data: ...
    def get_visible_region(self) -> cairo.Region: ...
    def get_visual(self) -> Gdk.Visual: ...
    def get_width(self) -> int: ...
    def get_window_type(self) -> Gdk.WindowType: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def has_native(self) -> bool: ...
    def hide(self) -> None: ...
    def iconify(self) -> None: ...
    def input_shape_combine_region(self, shape_region: cairo.Region, offset_x: int, offset_y: int): ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def invalidate_maybe_recurse(self, region: cairo.Region, child_func: Gdk.WindowChildFunc = ..., user_data: Incomplete | None = ...): ...
    def invalidate_rect(self, rect: Gdk.Rectangle, invalidate_children: bool): ...
    def invalidate_region(self, region: cairo.Region, invalidate_children: bool): ...
    def is_destroyed(self) -> bool: ...
    def is_floating(self) -> bool: ...
    def is_input_only(self) -> bool: ...
    def is_shaped(self) -> bool: ...
    def is_viewable(self) -> bool: ...
    def is_visible(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    def lower(self) -> None: ...
    def mark_paint_from_clip(self, cr: cairo.Context): ...
    def maximize(self) -> None: ...
    def merge_child_input_shapes(self) -> None: ...
    def merge_child_shapes(self) -> None: ...
    def move(self, x: int, y: int): ...
    def move_region(self, region: cairo.Region, dx: int, dy: int): ...
    def move_resize(self, x: int, y: int, width: int, height: int): ...
    def move_to_rect(self, rect: Gdk.Rectangle, rect_anchor: Gdk.Gravity, window_anchor: Gdk.Gravity, anchor_hints: Gdk.AnchorHints, rect_anchor_dx: int, rect_anchor_dy: int): ...
    @staticmethod
    def new(parent: Gdk.Window, attributes: Gdk.WindowAttr, attributes_mask: Gdk.WindowAttributesType) -> Gdk.Window: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def peek_children(self) -> list: ...
    @staticmethod
    def process_all_updates() -> None: ...
    def process_updates(self, update_children: bool): ...
    def raise_(self) -> None: ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def register_dnd(self) -> None: ...
    def reparent(self, new_parent: Gdk.Window, x: int, y: int): ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def resize(self, width: int, height: int): ...
    def restack(self, sibling: Gdk.Window, above: bool): ...
    def run_dispose(self) -> None: ...
    def scroll(self, dx: int, dy: int): ...
    def set_accept_focus(self, accept_focus: bool): ...
    def set_background(self, color: Gdk.Color): ...
    def set_background_pattern(self, pattern: cairo.Pattern = ...): ...
    def set_background_rgba(self, rgba: Gdk.RGBA): ...
    def set_child_input_shapes(self) -> None: ...
    def set_child_shapes(self) -> None: ...
    def set_composited(self, composited: bool): ...
    def set_cursor(self, cursor: Gdk.Cursor = ...): ...
    def set_data(self, *args, **kargs) -> None: ...
    @staticmethod
    def set_debug_updates(setting: bool): ...
    def set_decorations(self, decorations: Gdk.WMDecoration): ...
    def set_device_cursor(self, device: Gdk.Device, cursor: Gdk.Cursor): ...
    def set_device_events(self, device: Gdk.Device, event_mask: Gdk.EventMask): ...
    def set_events(self, event_mask: Gdk.EventMask): ...
    def set_event_compression(self, event_compression: bool): ...
    def set_focus_on_map(self, focus_on_map: bool): ...
    def set_fullscreen_mode(self, mode: Gdk.FullscreenMode): ...
    def set_functions(self, functions: Gdk.WMFunction): ...
    def set_geometry_hints(self, geometry: Gdk.Geometry, geom_mask: Gdk.WindowHints): ...
    def set_group(self, leader: Gdk.Window = ...): ...
    def set_icon_list(self, pixbufs: list): ...
    def set_icon_name(self, name: str = ...): ...
    def set_keep_above(self, setting: bool): ...
    def set_keep_below(self, setting: bool): ...
    def set_modal_hint(self, modal: bool): ...
    def set_opacity(self, opacity: float): ...
    def set_opaque_region(self, region: cairo.Region = ...): ...
    def set_override_redirect(self, override_redirect: bool): ...
    def set_pass_through(self, pass_through: bool): ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def set_role(self, role: str): ...
    def set_shadow_width(self, left: int, right: int, top: int, bottom: int): ...
    def set_skip_pager_hint(self, skips_pager: bool): ...
    def set_skip_taskbar_hint(self, skips_taskbar: bool): ...
    def set_source_events(self, source: Gdk.InputSource, event_mask: Gdk.EventMask): ...
    def set_startup_id(self, startup_id: str): ...
    def set_static_gravities(self, use_static: bool) -> bool: ...
    def set_support_multidevice(self, support_multidevice: bool): ...
    def set_title(self, title: str): ...
    def set_transient_for(self, parent: Gdk.Window): ...
    def set_type_hint(self, hint: Gdk.WindowTypeHint): ...
    def set_urgency_hint(self, urgent: bool): ...
    def set_user_data(self, user_data: GObject.Object = ...): ...
    def shape_combine_region(self, shape_region: cairo.Region, offset_x: int, offset_y: int): ...
    def show(self) -> None: ...
    def show_unraised(self) -> None: ...
    def show_window_menu(self, event: Gdk.Event) -> bool: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stick(self) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def thaw_toplevel_updates_libgtk_only(self) -> None: ...
    def thaw_updates(self) -> None: ...
    def unfullscreen(self) -> None: ...
    def unmaximize(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def unstick(self) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def withdraw(self) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, parent, attributes, attributes_mask) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, parent, attributes, attributes_mask) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class WindowAttr(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    cursor: Incomplete
    event_mask: Incomplete
    height: Incomplete
    override_redirect: Incomplete
    title: Incomplete
    type_hint: Incomplete
    visual: Incomplete
    wclass: Incomplete
    width: Incomplete
    window_type: Incomplete
    wmclass_class: Incomplete
    wmclass_name: Incomplete
    x: Incomplete
    y: Incomplete

class WindowAttributesType(__gobject.GFlags):
    GDK_WA_TITLE: int
    GDK_WA_X: int
    GDK_WA_Y: int
    GDK_WA_CURSOR: int
    GDK_WA_VISUAL: int
    GDK_WA_WMCLASS: int
    GDK_WA_NOREDIR: int
    GDK_WA_TYPE_HINT: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    CURSOR: int
    NOREDIR: int
    TITLE: int
    TYPE_HINT: int
    VISUAL: int
    WMCLASS: int
    X: int
    Y: int

class WindowClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    create_surface: Incomplete
    from_embedder: Incomplete
    parent_class: Incomplete
    pick_embedded_child: Incomplete
    to_embedder: Incomplete

class WindowEdge(__gobject.GEnum):
    GDK_WINDOW_EDGE_NORTH_WEST: int
    GDK_WINDOW_EDGE_NORTH: int
    GDK_WINDOW_EDGE_NORTH_EAST: int
    GDK_WINDOW_EDGE_WEST: int
    GDK_WINDOW_EDGE_EAST: int
    GDK_WINDOW_EDGE_SOUTH_WEST: int
    GDK_WINDOW_EDGE_SOUTH: int
    GDK_WINDOW_EDGE_SOUTH_EAST: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    EAST: int
    NORTH: int
    NORTH_EAST: int
    NORTH_WEST: int
    SOUTH: int
    SOUTH_EAST: int
    SOUTH_WEST: int
    WEST: int

class WindowHints(__gobject.GFlags):
    GDK_HINT_POS: int
    GDK_HINT_MIN_SIZE: int
    GDK_HINT_MAX_SIZE: int
    GDK_HINT_BASE_SIZE: int
    GDK_HINT_ASPECT: int
    GDK_HINT_RESIZE_INC: int
    GDK_HINT_WIN_GRAVITY: int
    GDK_HINT_USER_POS: int
    GDK_HINT_USER_SIZE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ASPECT: int
    BASE_SIZE: int
    MAX_SIZE: int
    MIN_SIZE: int
    POS: int
    RESIZE_INC: int
    USER_POS: int
    USER_SIZE: int
    WIN_GRAVITY: int

class WindowRedirect(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class WindowState(__gobject.GFlags):
    GDK_WINDOW_STATE_WITHDRAWN: int
    GDK_WINDOW_STATE_ICONIFIED: int
    GDK_WINDOW_STATE_MAXIMIZED: int
    GDK_WINDOW_STATE_STICKY: int
    GDK_WINDOW_STATE_FULLSCREEN: int
    GDK_WINDOW_STATE_ABOVE: int
    GDK_WINDOW_STATE_BELOW: int
    GDK_WINDOW_STATE_FOCUSED: int
    GDK_WINDOW_STATE_TILED: int
    GDK_WINDOW_STATE_TOP_TILED: int
    GDK_WINDOW_STATE_TOP_RESIZABLE: int
    GDK_WINDOW_STATE_RIGHT_TILED: int
    GDK_WINDOW_STATE_RIGHT_RESIZABLE: int
    GDK_WINDOW_STATE_BOTTOM_TILED: int
    GDK_WINDOW_STATE_BOTTOM_RESIZABLE: int
    GDK_WINDOW_STATE_LEFT_TILED: int
    GDK_WINDOW_STATE_LEFT_RESIZABLE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ABOVE: int
    BELOW: int
    BOTTOM_RESIZABLE: int
    BOTTOM_TILED: int
    FOCUSED: int
    FULLSCREEN: int
    ICONIFIED: int
    LEFT_RESIZABLE: int
    LEFT_TILED: int
    MAXIMIZED: int
    RIGHT_RESIZABLE: int
    RIGHT_TILED: int
    STICKY: int
    TILED: int
    TOP_RESIZABLE: int
    TOP_TILED: int
    WITHDRAWN: int

class WindowType(__gobject.GEnum):
    GDK_WINDOW_ROOT: int
    GDK_WINDOW_TOPLEVEL: int
    GDK_WINDOW_CHILD: int
    GDK_WINDOW_TEMP: int
    GDK_WINDOW_FOREIGN: int
    GDK_WINDOW_OFFSCREEN: int
    GDK_WINDOW_SUBSURFACE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CHILD: int
    FOREIGN: int
    OFFSCREEN: int
    ROOT: int
    SUBSURFACE: int
    TEMP: int
    TOPLEVEL: int

class WindowTypeHint(__gobject.GEnum):
    GDK_WINDOW_TYPE_HINT_NORMAL: int
    GDK_WINDOW_TYPE_HINT_DIALOG: int
    GDK_WINDOW_TYPE_HINT_MENU: int
    GDK_WINDOW_TYPE_HINT_TOOLBAR: int
    GDK_WINDOW_TYPE_HINT_SPLASHSCREEN: int
    GDK_WINDOW_TYPE_HINT_UTILITY: int
    GDK_WINDOW_TYPE_HINT_DOCK: int
    GDK_WINDOW_TYPE_HINT_DESKTOP: int
    GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU: int
    GDK_WINDOW_TYPE_HINT_POPUP_MENU: int
    GDK_WINDOW_TYPE_HINT_TOOLTIP: int
    GDK_WINDOW_TYPE_HINT_NOTIFICATION: int
    GDK_WINDOW_TYPE_HINT_COMBO: int
    GDK_WINDOW_TYPE_HINT_DND: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    COMBO: int
    DESKTOP: int
    DIALOG: int
    DND: int
    DOCK: int
    DROPDOWN_MENU: int
    MENU: int
    NORMAL: int
    NOTIFICATION: int
    POPUP_MENU: int
    SPLASHSCREEN: int
    TOOLBAR: int
    TOOLTIP: int
    UTILITY: int

class WindowWindowClass(__gobject.GEnum):
    GDK_INPUT_OUTPUT: int
    GDK_INPUT_ONLY: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    INPUT_ONLY: int
    INPUT_OUTPUT: int

class WMDecoration(__gobject.GFlags):
    GDK_DECOR_ALL: int
    GDK_DECOR_BORDER: int
    GDK_DECOR_RESIZEH: int
    GDK_DECOR_TITLE: int
    GDK_DECOR_MENU: int
    GDK_DECOR_MINIMIZE: int
    GDK_DECOR_MAXIMIZE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ALL: int
    BORDER: int
    MAXIMIZE: int
    MENU: int
    MINIMIZE: int
    RESIZEH: int
    TITLE: int

class WMFunction(__gobject.GFlags):
    GDK_FUNC_ALL: int
    GDK_FUNC_RESIZE: int
    GDK_FUNC_MOVE: int
    GDK_FUNC_MINIMIZE: int
    GDK_FUNC_MAXIMIZE: int
    GDK_FUNC_CLOSE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ALL: int
    CLOSE: int
    MAXIMIZE: int
    MINIMIZE: int
    MOVE: int
    RESIZE: int

class __class__(__gi_overrides.OverridesProxyModule):
    def __delattr__(self, name) -> None: ...
    def __dir__(self) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getattr__(self, name) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, introspection_module) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __annotations__: Incomplete

SELECTION_CLIPBOARD: Incomplete
SELECTION_PRIMARY: Incomplete
SELECTION_SECONDARY: Incomplete
SELECTION_TYPE_ATOM: Incomplete
SELECTION_TYPE_BITMAP: Incomplete
SELECTION_TYPE_COLORMAP: Incomplete
SELECTION_TYPE_DRAWABLE: Incomplete
SELECTION_TYPE_INTEGER: Incomplete
SELECTION_TYPE_PIXMAP: Incomplete
SELECTION_TYPE_STRING: Incomplete
SELECTION_TYPE_WINDOW: Incomplete
TARGET_BITMAP: Incomplete
TARGET_COLORMAP: Incomplete
TARGET_DRAWABLE: Incomplete
TARGET_PIXMAP: Incomplete
TARGET_STRING: Incomplete
__annotations__: Incomplete
__loader__: Incomplete
__path__: Incomplete
__spec__: Incomplete
