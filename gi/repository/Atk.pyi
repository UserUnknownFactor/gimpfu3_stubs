import gi as __gi
import gi.overrides.GObject as __gi_overrides_GObject
import gobject as __gobject
from _typeshed import Incomplete


BINARY_AGE: int
INTERFACE_AGE: int
MAJOR_VERSION: int
MICRO_VERSION: int
MINOR_VERSION: int
VERSION_MIN_REQUIRED: int

def attribute_set_free(attrib_set: list): ...
def focus_tracker_notify(object: Atk.Object): ...
def get_binary_age() -> int: ...
def get_default_registry() -> Atk.Registry: ...
def get_focus_object() -> Atk.Object: ...
def get_interface_age() -> int: ...
def get_major_version() -> int: ...
def get_micro_version() -> int: ...
def get_minor_version() -> int: ...
def get_root() -> Atk.Object: ...
def get_toolkit_name() -> str: ...
def get_toolkit_version() -> str: ...
def get_version() -> str: ...
def relation_type_for_name(name: str) -> Atk.RelationType: ...
def relation_type_get_name(type: Atk.RelationType) -> str: ...
def relation_type_register(name: str) -> Atk.RelationType: ...
def remove_focus_tracker(tracker_id: int): ...
def remove_global_event_listener(listener_id: int): ...
def remove_key_event_listener(listener_id: int): ...
def role_for_name(name: str) -> Atk.Role: ...
def role_get_localized_name(role: Atk.Role) -> str: ...
def role_get_name(role: Atk.Role) -> str: ...
def role_register(name: str) -> Atk.Role: ...
def state_type_for_name(name: str) -> Atk.StateType: ...
def state_type_get_name(type: Atk.StateType) -> str: ...
def state_type_register(name: str) -> Atk.StateType: ...
def text_attribute_for_name(name: str) -> Atk.TextAttribute: ...
def text_attribute_get_name(attr: Atk.TextAttribute) -> str: ...
def text_attribute_get_value(attr: Atk.TextAttribute, index_: int) -> Union[str, None]: ...
def text_attribute_register(name: str) -> Atk.TextAttribute: ...
def text_free_ranges(ranges: list): ...
def value_type_get_localized_name(value_type: Atk.ValueType) -> str: ...
def value_type_get_name(value_type: Atk.ValueType) -> str: ...

class Action(__gobject.GInterface):
    def do_action(self, i: int) -> bool: ...
    def get_description(self, i: int) -> Union[str, None]: ...
    def get_keybinding(self, i: int) -> Union[str, None]: ...
    def get_localized_name(self, i: int) -> Union[str, None]: ...
    def get_name(self, i: int) -> Union[str, None]: ...
    def get_n_actions(self) -> int: ...
    def set_description(self, i: int, desc: str) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class ActionIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    do_action: Incomplete
    get_description: Incomplete
    get_keybinding: Incomplete
    get_localized_name: Incomplete
    get_name: Incomplete
    get_n_actions: Incomplete
    parent: Incomplete
    set_description: Incomplete

class Attribute(__gi.Struct):
    @staticmethod
    def set_free(attrib_set: list): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    name: Incomplete
    value: Incomplete

class Component(__gobject.GInterface):
    def contains(self, x: int, y: int, coord_type: Atk.CoordType) -> bool: ...
    def get_alpha(self) -> float: ...
    def get_extents(self, coord_type: Atk.CoordType) -> tuple[None, None, None, None]: ...
    def get_layer(self) -> Atk.Layer: ...
    def get_mdi_zorder(self) -> int: ...
    def get_position(self, coord_type: Atk.CoordType) -> tuple[None, None]: ...
    def get_size(self) -> tuple[None, None]: ...
    def grab_focus(self) -> bool: ...
    def ref_accessible_at_point(self, x: int, y: int, coord_type: Atk.CoordType) -> Union[Atk.Object, None]: ...
    def remove_focus_handler(self, handler_id: int): ...
    def scroll_to(self, type: Atk.ScrollType) -> bool: ...
    def scroll_to_point(self, coords: Atk.CoordType, x: int, y: int) -> bool: ...
    def set_extents(self, x: int, y: int, width: int, height: int, coord_type: Atk.CoordType) -> bool: ...
    def set_position(self, x: int, y: int, coord_type: Atk.CoordType) -> bool: ...
    def set_size(self, width: int, height: int) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class ComponentIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    add_focus_handler: Incomplete
    bounds_changed: Incomplete
    contains: Incomplete
    get_alpha: Incomplete
    get_extents: Incomplete
    get_layer: Incomplete
    get_mdi_zorder: Incomplete
    get_position: Incomplete
    get_size: Incomplete
    grab_focus: Incomplete
    parent: Incomplete
    ref_accessible_at_point: Incomplete
    remove_focus_handler: Incomplete
    scroll_to: Incomplete
    scroll_to_point: Incomplete
    set_extents: Incomplete
    set_position: Incomplete
    set_size: Incomplete

class CoordType(__gobject.GEnum):
    ATK_XY_SCREEN: int
    ATK_XY_WINDOW: int
    ATK_XY_PARENT: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    PARENT: int
    SCREEN: int
    WINDOW: int

class Document(__gobject.GInterface):
    def get_attributes(self) -> list: ...
    def get_attribute_value(self, attribute_name: str) -> Union[str, None]: ...
    def get_current_page_number(self) -> int: ...
    def get_document(self) -> None: ...
    def get_document_type(self) -> str: ...
    def get_locale(self) -> str: ...
    def get_page_count(self) -> int: ...
    def set_attribute_value(self, attribute_name: str, attribute_value: str) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class DocumentIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    get_current_page_number: Incomplete
    get_document: Incomplete
    get_document_attributes: Incomplete
    get_document_attribute_value: Incomplete
    get_document_locale: Incomplete
    get_document_type: Incomplete
    get_page_count: Incomplete
    parent: Incomplete
    set_document_attribute: Incomplete

class EditableText(__gobject.GInterface):
    def copy_text(self, start_pos: int, end_pos: int): ...
    def cut_text(self, start_pos: int, end_pos: int): ...
    def delete_text(self, start_pos: int, end_pos: int): ...
    def insert_text(self, string: str, length: int, position: int): ...
    def paste_text(self, position: int): ...
    def set_run_attributes(self, attrib_set: list, start_offset: int, end_offset: int) -> bool: ...
    def set_text_contents(self, string: str): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class EditableTextIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    copy_text: Incomplete
    cut_text: Incomplete
    delete_text: Incomplete
    insert_text: Incomplete
    parent_interface: Incomplete
    paste_text: Incomplete
    set_run_attributes: Incomplete
    set_text_contents: Incomplete

class Object(__gi_overrides_GObject.Object):
    def add_relationship(self, relationship: Atk.RelationType, target: Atk.Object) -> bool: ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_active_descendant_changed(self, child: Incomplete | None = ...) -> None: ...
    def do_children_changed(self, change_index: int, changed_child: Incomplete | None = ...): ...
    def do_focus_event(self, focus_in: bool): ...
    def do_get_attributes(self) -> list: ...
    def do_get_description(self) -> str: ...
    def do_get_index_in_parent(self) -> int: ...
    def do_get_layer(self) -> Atk.Layer: ...
    def do_get_mdi_zorder(self) -> int: ...
    def do_get_name(self) -> str: ...
    def do_get_n_children(self) -> int: ...
    def do_get_object_locale(self) -> str: ...
    def do_get_parent(self) -> Atk.Object: ...
    def do_get_role(self) -> Atk.Role: ...
    def do_initialize(self, data: Incomplete | None = ...) -> None: ...
    def do_property_change(self, values: Atk.PropertyValues): ...
    def do_ref_relation_set(self) -> Atk.RelationSet: ...
    def do_ref_state_set(self) -> Atk.StateSet: ...
    def do_remove_property_change_handler(self, handler_id: int): ...
    def do_set_description(self, description: str): ...
    def do_set_name(self, name: str): ...
    def do_set_parent(self, parent: Atk.Object): ...
    def do_set_role(self, role: Atk.Role): ...
    def do_state_change(self, name: str, state_set: bool): ...
    def do_visible_data_changed(self) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_accessible_id(self) -> str: ...
    def get_attributes(self) -> list: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_description(self) -> str: ...
    def get_index_in_parent(self) -> int: ...
    def get_layer(self) -> Atk.Layer: ...
    def get_mdi_zorder(self) -> int: ...
    def get_name(self) -> str: ...
    def get_n_accessible_children(self) -> int: ...
    def get_object_locale(self) -> str: ...
    def get_parent(self) -> Atk.Object: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_role(self) -> Atk.Role: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def initialize(self, data: Incomplete | None = ...) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def notify_state_change(self, state: int, value: bool): ...
    def override_property(self, property_id: int, name: str): ...
    def peek_parent(self) -> Atk.Object: ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_accessible_child(self, i: int) -> Atk.Object: ...
    def ref_relation_set(self) -> Atk.RelationSet: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def ref_state_set(self) -> Atk.StateSet: ...
    def remove_property_change_handler(self, handler_id: int): ...
    def remove_relationship(self, relationship: Atk.RelationType, target: Atk.Object) -> bool: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_accessible_id(self, name: str): ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_description(self, description: str): ...
    def set_name(self, name: str): ...
    def set_parent(self, parent: Atk.Object): ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def set_role(self, role: Atk.Role): ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    accessible_parent: Incomplete
    description: Incomplete
    g_type_instance: Incomplete
    layer: Incomplete
    name: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    relation_set: Incomplete
    role: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class GObjectAccessible(Object):
    def add_relationship(self, relationship: Atk.RelationType, target: Atk.Object) -> bool: ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_active_descendant_changed(self, child: Incomplete | None = ...) -> None: ...
    def do_children_changed(self, change_index: int, changed_child: Incomplete | None = ...): ...
    def do_focus_event(self, focus_in: bool): ...
    def do_get_attributes(self) -> list: ...
    def do_get_description(self) -> str: ...
    def do_get_index_in_parent(self) -> int: ...
    def do_get_layer(self) -> Atk.Layer: ...
    def do_get_mdi_zorder(self) -> int: ...
    def do_get_name(self) -> str: ...
    def do_get_n_children(self) -> int: ...
    def do_get_object_locale(self) -> str: ...
    def do_get_parent(self) -> Atk.Object: ...
    def do_get_role(self) -> Atk.Role: ...
    def do_initialize(self, data: Incomplete | None = ...) -> None: ...
    def do_property_change(self, values: Atk.PropertyValues): ...
    def do_ref_relation_set(self) -> Atk.RelationSet: ...
    def do_ref_state_set(self) -> Atk.StateSet: ...
    def do_remove_property_change_handler(self, handler_id: int): ...
    def do_set_description(self, description: str): ...
    def do_set_name(self, name: str): ...
    def do_set_parent(self, parent: Atk.Object): ...
    def do_set_role(self, role: Atk.Role): ...
    def do_state_change(self, name: str, state_set: bool): ...
    def do_visible_data_changed(self) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    @staticmethod
    def for_object(obj: GObject.Object) -> Atk.Object: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_accessible_id(self) -> str: ...
    def get_attributes(self) -> list: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_description(self) -> str: ...
    def get_index_in_parent(self) -> int: ...
    def get_layer(self) -> Atk.Layer: ...
    def get_mdi_zorder(self) -> int: ...
    def get_name(self) -> str: ...
    def get_n_accessible_children(self) -> int: ...
    def get_object(self) -> GObject.Object: ...
    def get_object_locale(self) -> str: ...
    def get_parent(self) -> Atk.Object: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_role(self) -> Atk.Role: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def initialize(self, data: Incomplete | None = ...) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def notify_state_change(self, state: int, value: bool): ...
    def override_property(self, property_id: int, name: str): ...
    def peek_parent(self) -> Atk.Object: ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_accessible_child(self, i: int) -> Atk.Object: ...
    def ref_relation_set(self) -> Atk.RelationSet: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def ref_state_set(self) -> Atk.StateSet: ...
    def remove_property_change_handler(self, handler_id: int): ...
    def remove_relationship(self, relationship: Atk.RelationType, target: Atk.Object) -> bool: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_accessible_id(self, name: str): ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_description(self, description: str): ...
    def set_name(self, name: str): ...
    def set_parent(self, parent: Atk.Object): ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def set_role(self, role: Atk.Role): ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    accessible_parent: Incomplete
    description: Incomplete
    g_type_instance: Incomplete
    layer: Incomplete
    name: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    relation_set: Incomplete
    role: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class GObjectAccessibleClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    pad1: Incomplete
    pad2: Incomplete
    parent_class: Incomplete

class Hyperlink(__gi_overrides_GObject.Object, Action):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_action(self, i: int) -> bool: ...
    def do_get_end_index(self) -> int: ...
    def do_get_n_anchors(self) -> int: ...
    def do_get_object(self, i: int) -> Atk.Object: ...
    def do_get_start_index(self) -> int: ...
    def do_get_uri(self, i: int) -> str: ...
    def do_is_selected_link(self) -> bool: ...
    def do_is_valid(self) -> bool: ...
    def do_link_activated(self) -> None: ...
    def do_link_state(self) -> int: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_description(self, i: int) -> Union[str, None]: ...
    def get_end_index(self) -> int: ...
    def get_keybinding(self, i: int) -> Union[str, None]: ...
    def get_localized_name(self, i: int) -> Union[str, None]: ...
    def get_name(self, i: int) -> Union[str, None]: ...
    def get_n_actions(self) -> int: ...
    def get_n_anchors(self) -> int: ...
    def get_object(self, i: int) -> Atk.Object: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_start_index(self) -> int: ...
    def get_uri(self, i: int) -> str: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def is_inline(self) -> bool: ...
    def is_selected_link(self) -> bool: ...
    def is_valid(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_description(self, i: int, desc: str) -> bool: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class HyperlinkClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    get_end_index: Incomplete
    get_n_anchors: Incomplete
    get_object: Incomplete
    get_start_index: Incomplete
    get_uri: Incomplete
    is_selected_link: Incomplete
    is_valid: Incomplete
    link_activated: Incomplete
    link_state: Incomplete
    pad1: Incomplete
    parent: Incomplete

class HyperlinkImpl(__gobject.GInterface):
    def get_hyperlink(self) -> Atk.Hyperlink: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class HyperlinkImplIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    get_hyperlink: Incomplete
    parent: Incomplete

class HyperlinkStateFlags(__gobject.GFlags):
    ATK_HYPERLINK_IS_INLINE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    INLINE: int

class Hypertext(__gobject.GInterface):
    def get_link(self, link_index: int) -> Atk.Hyperlink: ...
    def get_link_index(self, char_index: int) -> int: ...
    def get_n_links(self) -> int: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class HypertextIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    get_link: Incomplete
    get_link_index: Incomplete
    get_n_links: Incomplete
    link_selected: Incomplete
    parent: Incomplete

class Image(__gobject.GInterface):
    def get_image_description(self) -> str: ...
    def get_image_locale(self) -> Union[str, None]: ...
    def get_image_position(self, coord_type: Atk.CoordType) -> tuple[None, None]: ...
    def get_image_size(self) -> tuple[None, None]: ...
    def set_image_description(self, description: str) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class ImageIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    get_image_description: Incomplete
    get_image_locale: Incomplete
    get_image_position: Incomplete
    get_image_size: Incomplete
    parent: Incomplete
    set_image_description: Incomplete

class Implementor(__gi.Struct):
    def ref_accessible(self) -> Atk.Object: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class ImplementorIface(__gobject.GInterface):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class KeyEventStruct(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    keycode: Incomplete
    keyval: Incomplete
    length: Incomplete
    state: Incomplete
    string: Incomplete
    timestamp: Incomplete
    type: Incomplete

class KeyEventType(__gobject.GEnum):
    ATK_KEY_EVENT_PRESS: int
    ATK_KEY_EVENT_RELEASE: int
    ATK_KEY_EVENT_LAST_DEFINED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    LAST_DEFINED: int
    PRESS: int
    RELEASE: int

class Layer(__gobject.GEnum):
    ATK_LAYER_INVALID: int
    ATK_LAYER_BACKGROUND: int
    ATK_LAYER_CANVAS: int
    ATK_LAYER_WIDGET: int
    ATK_LAYER_MDI: int
    ATK_LAYER_POPUP: int
    ATK_LAYER_OVERLAY: int
    ATK_LAYER_WINDOW: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BACKGROUND: int
    CANVAS: int
    INVALID: int
    MDI: int
    OVERLAY: int
    POPUP: int
    WIDGET: int
    WINDOW: int

class Misc(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_threads_enter(self) -> None: ...
    def do_threads_leave(self) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    @staticmethod
    def get_instance() -> Atk.Misc: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def threads_enter(self) -> None: ...
    def threads_leave(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class MiscClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    parent: Incomplete
    threads_enter: Incomplete
    threads_leave: Incomplete
    vfuncs: Incomplete

class Selection(__gobject.GInterface):
    def add_selection(self, i: int) -> bool: ...
    def clear_selection(self) -> bool: ...
    def get_selection_count(self) -> int: ...
    def is_child_selected(self, i: int) -> bool: ...
    def ref_selection(self, i: int) -> Union[Atk.Object, None]: ...
    def remove_selection(self, i: int) -> bool: ...
    def select_all_selection(self) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class Table(__gobject.GInterface):
    def add_column_selection(self, column: int) -> bool: ...
    def add_row_selection(self, row: int) -> bool: ...
    def get_caption(self) -> Union[Atk.Object, None]: ...
    def get_column_at_index(self, index_: int) -> int: ...
    def get_column_description(self, column: int) -> str: ...
    def get_column_extent_at(self, row: int, column: int) -> int: ...
    def get_column_header(self, column: int) -> Union[Atk.Object, None]: ...
    def get_index_at(self, row: int, column: int) -> int: ...
    def get_n_columns(self) -> int: ...
    def get_n_rows(self) -> int: ...
    def get_row_at_index(self, index_: int) -> int: ...
    def get_row_description(self, row: int) -> Union[str, None]: ...
    def get_row_extent_at(self, row: int, column: int) -> int: ...
    def get_row_header(self, row: int) -> Union[Atk.Object, None]: ...
    def get_selected_columns(self, selected: int) -> int: ...
    def get_selected_rows(self, selected: int) -> int: ...
    def get_summary(self) -> Atk.Object: ...
    def is_column_selected(self, column: int) -> bool: ...
    def is_row_selected(self, row: int) -> bool: ...
    def is_selected(self, row: int, column: int) -> bool: ...
    def ref_at(self, row: int, column: int) -> Atk.Object: ...
    def remove_column_selection(self, column: int) -> bool: ...
    def remove_row_selection(self, row: int) -> bool: ...
    def set_caption(self, caption: Atk.Object): ...
    def set_column_description(self, column: int, description: str): ...
    def set_column_header(self, column: int, header: Atk.Object): ...
    def set_row_description(self, row: int, description: str): ...
    def set_row_header(self, row: int, header: Atk.Object): ...
    def set_summary(self, accessible: Atk.Object): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class TableCell(__gobject.GInterface):
    def get_column_header_cells(self) -> list: ...
    def get_column_span(self) -> int: ...
    def get_position(self) -> tuple[bool, None, None]: ...
    def get_row_column_span(self) -> tuple[bool, None, None, None, None]: ...
    def get_row_header_cells(self) -> list: ...
    def get_row_span(self) -> int: ...
    def get_table(self) -> Atk.Object: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class Text(__gobject.GInterface):
    def add_selection(self, start_offset: int, end_offset: int) -> bool: ...
    @staticmethod
    def free_ranges(ranges: list): ...
    def get_bounded_ranges(self, rect: Atk.TextRectangle, coord_type: Atk.CoordType, x_clip_type: Atk.TextClipType, y_clip_type: Atk.TextClipType) -> list: ...
    def get_caret_offset(self) -> int: ...
    def get_character_at_offset(self, offset: int) -> str: ...
    def get_character_count(self) -> int: ...
    def get_character_extents(self, offset: int, coords: Atk.CoordType) -> tuple[None, None, None, None]: ...
    def get_default_attributes(self) -> list: ...
    def get_n_selections(self) -> int: ...
    def get_offset_at_point(self, x: int, y: int, coords: Atk.CoordType) -> int: ...
    def get_range_extents(self, start_offset: int, end_offset: int, coord_type: Atk.CoordType) -> Atk.TextRectangle: ...
    def get_run_attributes(self, offset: int) -> tuple[list, None, None]: ...
    def get_selection(self, selection_num: int) -> tuple[str, None, None]: ...
    def get_string_at_offset(self, offset: int, granularity: Atk.TextGranularity) -> Union[str, tuple[None, None, None]]: ...
    def get_text(self, start_offset: int, end_offset: int) -> str: ...
    def get_text_after_offset(self, offset: int, boundary_type: Atk.TextBoundary) -> tuple[str, None, None]: ...
    def get_text_at_offset(self, offset: int, boundary_type: Atk.TextBoundary) -> tuple[str, None, None]: ...
    def get_text_before_offset(self, offset: int, boundary_type: Atk.TextBoundary) -> tuple[str, None, None]: ...
    def remove_selection(self, selection_num: int) -> bool: ...
    def scroll_substring_to(self, start_offset: int, end_offset: int, type: Atk.ScrollType) -> bool: ...
    def scroll_substring_to_point(self, start_offset: int, end_offset: int, coords: Atk.CoordType, x: int, y: int) -> bool: ...
    def set_caret_offset(self, offset: int) -> bool: ...
    def set_selection(self, selection_num: int, start_offset: int, end_offset: int) -> bool: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class Value(__gobject.GInterface):
    def get_current_value(self) -> GObject.Value: ...
    def get_increment(self) -> float: ...
    def get_maximum_value(self) -> GObject.Value: ...
    def get_minimum_increment(self) -> GObject.Value: ...
    def get_minimum_value(self) -> GObject.Value: ...
    def get_range(self) -> Union[Atk.Range, None]: ...
    def get_sub_ranges(self) -> list: ...
    def get_value_and_text(self) -> tuple[None, None]: ...
    def set_current_value(self, value: GObject.Value) -> bool: ...
    def set_value(self, new_value: float): ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class Window(__gobject.GInterface):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class NoOpObject(Object, Action, Component, Document, EditableText, Hypertext, Image, Selection, Table, TableCell, Text, Value, Window):
    def add_column_selection(self, column: int) -> bool: ...
    def add_relationship(self, relationship: Atk.RelationType, target: Atk.Object) -> bool: ...
    def add_row_selection(self, row: int) -> bool: ...
    def add_selection(self, i: int) -> bool: ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def clear_selection(self) -> bool: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def contains(self, x: int, y: int, coord_type: Atk.CoordType) -> bool: ...
    def copy_text(self, start_pos: int, end_pos: int): ...
    def cut_text(self, start_pos: int, end_pos: int): ...
    def delete_text(self, start_pos: int, end_pos: int): ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_action(self, i: int) -> bool: ...
    def do_active_descendant_changed(self, child: Incomplete | None = ...) -> None: ...
    def do_children_changed(self, change_index: int, changed_child: Incomplete | None = ...): ...
    def do_focus_event(self, focus_in: bool): ...
    def do_get_attributes(self) -> list: ...
    def do_get_description(self) -> str: ...
    def do_get_index_in_parent(self) -> int: ...
    def do_get_layer(self) -> Atk.Layer: ...
    def do_get_mdi_zorder(self) -> int: ...
    def do_get_name(self) -> str: ...
    def do_get_n_children(self) -> int: ...
    def do_get_object_locale(self) -> str: ...
    def do_get_parent(self) -> Atk.Object: ...
    def do_get_role(self) -> Atk.Role: ...
    def do_initialize(self, data: Incomplete | None = ...) -> None: ...
    def do_property_change(self, values: Atk.PropertyValues): ...
    def do_ref_relation_set(self) -> Atk.RelationSet: ...
    def do_ref_state_set(self) -> Atk.StateSet: ...
    def do_remove_property_change_handler(self, handler_id: int): ...
    def do_set_description(self, description: str): ...
    def do_set_name(self, name: str): ...
    def do_set_parent(self, parent: Atk.Object): ...
    def do_set_role(self, role: Atk.Role): ...
    def do_state_change(self, name: str, state_set: bool): ...
    def do_visible_data_changed(self) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    @staticmethod
    def free_ranges(ranges: list): ...
    def getv(self, names: list, values: list): ...
    def get_accessible_id(self) -> str: ...
    def get_alpha(self) -> float: ...
    def get_attributes(self) -> list: ...
    def get_attribute_value(self, attribute_name: str) -> Union[str, None]: ...
    def get_bounded_ranges(self, rect: Atk.TextRectangle, coord_type: Atk.CoordType, x_clip_type: Atk.TextClipType, y_clip_type: Atk.TextClipType) -> list: ...
    def get_caption(self) -> Union[Atk.Object, None]: ...
    def get_caret_offset(self) -> int: ...
    def get_character_at_offset(self, offset: int) -> str: ...
    def get_character_count(self) -> int: ...
    def get_character_extents(self, offset: int, coords: Atk.CoordType) -> tuple[None, None, None, None]: ...
    def get_column_at_index(self, index_: int) -> int: ...
    def get_column_description(self, column: int) -> str: ...
    def get_column_extent_at(self, row: int, column: int) -> int: ...
    def get_column_header(self, column: int) -> Union[Atk.Object, None]: ...
    def get_column_header_cells(self) -> list: ...
    def get_column_span(self) -> int: ...
    def get_current_page_number(self) -> int: ...
    def get_current_value(self) -> GObject.Value: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_default_attributes(self) -> list: ...
    def get_description(self) -> str: ...
    def get_document(self) -> None: ...
    def get_document_type(self) -> str: ...
    def get_extents(self, coord_type: Atk.CoordType) -> tuple[None, None, None, None]: ...
    def get_image_description(self) -> str: ...
    def get_image_locale(self) -> Union[str, None]: ...
    def get_image_position(self, coord_type: Atk.CoordType) -> tuple[None, None]: ...
    def get_image_size(self) -> tuple[None, None]: ...
    def get_increment(self) -> float: ...
    def get_index_at(self, row: int, column: int) -> int: ...
    def get_index_in_parent(self) -> int: ...
    def get_keybinding(self, i: int) -> Union[str, None]: ...
    def get_layer(self) -> Atk.Layer: ...
    def get_link(self, link_index: int) -> Atk.Hyperlink: ...
    def get_link_index(self, char_index: int) -> int: ...
    def get_locale(self) -> str: ...
    def get_localized_name(self, i: int) -> Union[str, None]: ...
    def get_maximum_value(self) -> GObject.Value: ...
    def get_mdi_zorder(self) -> int: ...
    def get_minimum_increment(self) -> GObject.Value: ...
    def get_minimum_value(self) -> GObject.Value: ...
    def get_name(self) -> str: ...
    def get_n_accessible_children(self) -> int: ...
    def get_n_actions(self) -> int: ...
    def get_n_columns(self) -> int: ...
    def get_n_links(self) -> int: ...
    def get_n_rows(self) -> int: ...
    def get_n_selections(self) -> int: ...
    def get_object_locale(self) -> str: ...
    def get_offset_at_point(self, x: int, y: int, coords: Atk.CoordType) -> int: ...
    def get_page_count(self) -> int: ...
    def get_parent(self) -> Atk.Object: ...
    def get_position(self, coord_type: Atk.CoordType) -> tuple[None, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_range(self) -> Union[Atk.Range, None]: ...
    def get_range_extents(self, start_offset: int, end_offset: int, coord_type: Atk.CoordType) -> Atk.TextRectangle: ...
    def get_role(self) -> Atk.Role: ...
    def get_row_at_index(self, index_: int) -> int: ...
    def get_row_column_span(self) -> tuple[bool, None, None, None, None]: ...
    def get_row_description(self, row: int) -> Union[str, None]: ...
    def get_row_extent_at(self, row: int, column: int) -> int: ...
    def get_row_header(self, row: int) -> Union[Atk.Object, None]: ...
    def get_row_header_cells(self) -> list: ...
    def get_row_span(self) -> int: ...
    def get_run_attributes(self, offset: int) -> tuple[list, None, None]: ...
    def get_selected_columns(self, selected: int) -> int: ...
    def get_selected_rows(self, selected: int) -> int: ...
    def get_selection(self, selection_num: int) -> tuple[str, None, None]: ...
    def get_selection_count(self) -> int: ...
    def get_size(self) -> tuple[None, None]: ...
    def get_string_at_offset(self, offset: int, granularity: Atk.TextGranularity) -> Union[str, tuple[None, None, None]]: ...
    def get_sub_ranges(self) -> list: ...
    def get_summary(self) -> Atk.Object: ...
    def get_table(self) -> Atk.Object: ...
    def get_text(self, start_offset: int, end_offset: int) -> str: ...
    def get_text_after_offset(self, offset: int, boundary_type: Atk.TextBoundary) -> tuple[str, None, None]: ...
    def get_text_at_offset(self, offset: int, boundary_type: Atk.TextBoundary) -> tuple[str, None, None]: ...
    def get_text_before_offset(self, offset: int, boundary_type: Atk.TextBoundary) -> tuple[str, None, None]: ...
    def get_value_and_text(self) -> tuple[None, None]: ...
    def grab_focus(self) -> bool: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def initialize(self, data: Incomplete | None = ...) -> None: ...
    def insert_text(self, string: str, length: int, position: int): ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_child_selected(self, i: int) -> bool: ...
    def is_column_selected(self, column: int) -> bool: ...
    def is_floating(self) -> bool: ...
    def is_row_selected(self, row: int) -> bool: ...
    def is_selected(self, row: int, column: int) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def new(obj: GObject.Object) -> Atk.Object: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def notify_state_change(self, state: int, value: bool): ...
    def override_property(self, property_id: int, name: str): ...
    def paste_text(self, position: int): ...
    def peek_parent(self) -> Atk.Object: ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_accessible_at_point(self, x: int, y: int, coord_type: Atk.CoordType) -> Union[Atk.Object, None]: ...
    def ref_accessible_child(self, i: int) -> Atk.Object: ...
    def ref_at(self, row: int, column: int) -> Atk.Object: ...
    def ref_relation_set(self) -> Atk.RelationSet: ...
    def ref_selection(self, i: int) -> Union[Atk.Object, None]: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def ref_state_set(self) -> Atk.StateSet: ...
    def remove_column_selection(self, column: int) -> bool: ...
    def remove_focus_handler(self, handler_id: int): ...
    def remove_property_change_handler(self, handler_id: int): ...
    def remove_relationship(self, relationship: Atk.RelationType, target: Atk.Object) -> bool: ...
    def remove_row_selection(self, row: int) -> bool: ...
    def remove_selection(self, i: int) -> bool: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def scroll_substring_to(self, start_offset: int, end_offset: int, type: Atk.ScrollType) -> bool: ...
    def scroll_substring_to_point(self, start_offset: int, end_offset: int, coords: Atk.CoordType, x: int, y: int) -> bool: ...
    def scroll_to(self, type: Atk.ScrollType) -> bool: ...
    def scroll_to_point(self, coords: Atk.CoordType, x: int, y: int) -> bool: ...
    def select_all_selection(self) -> bool: ...
    def set_accessible_id(self, name: str): ...
    def set_attribute_value(self, attribute_name: str, attribute_value: str) -> bool: ...
    def set_caption(self, caption: Atk.Object): ...
    def set_caret_offset(self, offset: int) -> bool: ...
    def set_column_description(self, column: int, description: str): ...
    def set_column_header(self, column: int, header: Atk.Object): ...
    def set_current_value(self, value: GObject.Value) -> bool: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_description(self, description: str): ...
    def set_extents(self, x: int, y: int, width: int, height: int, coord_type: Atk.CoordType) -> bool: ...
    def set_image_description(self, description: str) -> bool: ...
    def set_name(self, name: str): ...
    def set_parent(self, parent: Atk.Object): ...
    def set_position(self, x: int, y: int, coord_type: Atk.CoordType) -> bool: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def set_role(self, role: Atk.Role): ...
    def set_row_description(self, row: int, description: str): ...
    def set_row_header(self, row: int, header: Atk.Object): ...
    def set_run_attributes(self, attrib_set: list, start_offset: int, end_offset: int) -> bool: ...
    def set_selection(self, selection_num: int, start_offset: int, end_offset: int) -> bool: ...
    def set_size(self, width: int, height: int) -> bool: ...
    def set_summary(self, accessible: Atk.Object): ...
    def set_text_contents(self, string: str): ...
    def set_value(self, new_value: float): ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    accessible_parent: Incomplete
    description: Incomplete
    g_type_instance: Incomplete
    layer: Incomplete
    name: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    relation_set: Incomplete
    role: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class NoOpObjectClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    parent_class: Incomplete

class ObjectFactory(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def create_accessible(self, obj: GObject.Object) -> Atk.Object: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_invalidate(self) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_accessible_type(self) -> GType: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def invalidate(self) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class NoOpObjectFactory(ObjectFactory):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def create_accessible(self, obj: GObject.Object) -> Atk.Object: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_invalidate(self) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_accessible_type(self) -> GType: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def invalidate(self) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def new() -> Atk.ObjectFactory: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class NoOpObjectFactoryClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    parent_class: Incomplete

class ObjectClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    active_descendant_changed: Incomplete
    children_changed: Incomplete
    connect_property_change_handler: Incomplete
    focus_event: Incomplete
    get_attributes: Incomplete
    get_description: Incomplete
    get_index_in_parent: Incomplete
    get_layer: Incomplete
    get_mdi_zorder: Incomplete
    get_name: Incomplete
    get_n_children: Incomplete
    get_object_locale: Incomplete
    get_parent: Incomplete
    get_role: Incomplete
    initialize: Incomplete
    pad1: Incomplete
    parent: Incomplete
    property_change: Incomplete
    ref_child: Incomplete
    ref_relation_set: Incomplete
    ref_state_set: Incomplete
    remove_property_change_handler: Incomplete
    set_description: Incomplete
    set_name: Incomplete
    set_parent: Incomplete
    set_role: Incomplete
    state_change: Incomplete
    visible_data_changed: Incomplete

class ObjectFactoryClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    create_accessible: Incomplete
    get_accessible_type: Incomplete
    invalidate: Incomplete
    pad1: Incomplete
    pad2: Incomplete
    parent_class: Incomplete

class Plug(Object, Component):
    def add_relationship(self, relationship: Atk.RelationType, target: Atk.Object) -> bool: ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def contains(self, x: int, y: int, coord_type: Atk.CoordType) -> bool: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_active_descendant_changed(self, child: Incomplete | None = ...) -> None: ...
    def do_children_changed(self, change_index: int, changed_child: Incomplete | None = ...): ...
    def do_focus_event(self, focus_in: bool): ...
    def do_get_attributes(self) -> list: ...
    def do_get_description(self) -> str: ...
    def do_get_index_in_parent(self) -> int: ...
    def do_get_layer(self) -> Atk.Layer: ...
    def do_get_mdi_zorder(self) -> int: ...
    def do_get_name(self) -> str: ...
    def do_get_n_children(self) -> int: ...
    def do_get_object_id(self) -> str: ...
    def do_get_object_locale(self) -> str: ...
    def do_get_parent(self) -> Atk.Object: ...
    def do_get_role(self) -> Atk.Role: ...
    def do_initialize(self, data: Incomplete | None = ...) -> None: ...
    def do_property_change(self, values: Atk.PropertyValues): ...
    def do_ref_relation_set(self) -> Atk.RelationSet: ...
    def do_ref_state_set(self) -> Atk.StateSet: ...
    def do_remove_property_change_handler(self, handler_id: int): ...
    def do_set_description(self, description: str): ...
    def do_set_name(self, name: str): ...
    def do_set_parent(self, parent: Atk.Object): ...
    def do_set_role(self, role: Atk.Role): ...
    def do_state_change(self, name: str, state_set: bool): ...
    def do_visible_data_changed(self) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_accessible_id(self) -> str: ...
    def get_alpha(self) -> float: ...
    def get_attributes(self) -> list: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_description(self) -> str: ...
    def get_extents(self, coord_type: Atk.CoordType) -> tuple[None, None, None, None]: ...
    def get_id(self) -> str: ...
    def get_index_in_parent(self) -> int: ...
    def get_layer(self) -> Atk.Layer: ...
    def get_mdi_zorder(self) -> int: ...
    def get_name(self) -> str: ...
    def get_n_accessible_children(self) -> int: ...
    def get_object_locale(self) -> str: ...
    def get_parent(self) -> Atk.Object: ...
    def get_position(self, coord_type: Atk.CoordType) -> tuple[None, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_role(self) -> Atk.Role: ...
    def get_size(self) -> tuple[None, None]: ...
    def grab_focus(self) -> bool: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def initialize(self, data: Incomplete | None = ...) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def new() -> Atk.Object: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def notify_state_change(self, state: int, value: bool): ...
    def override_property(self, property_id: int, name: str): ...
    def peek_parent(self) -> Atk.Object: ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_accessible_at_point(self, x: int, y: int, coord_type: Atk.CoordType) -> Union[Atk.Object, None]: ...
    def ref_accessible_child(self, i: int) -> Atk.Object: ...
    def ref_relation_set(self) -> Atk.RelationSet: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def ref_state_set(self) -> Atk.StateSet: ...
    def remove_focus_handler(self, handler_id: int): ...
    def remove_property_change_handler(self, handler_id: int): ...
    def remove_relationship(self, relationship: Atk.RelationType, target: Atk.Object) -> bool: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def scroll_to(self, type: Atk.ScrollType) -> bool: ...
    def scroll_to_point(self, coords: Atk.CoordType, x: int, y: int) -> bool: ...
    def set_accessible_id(self, name: str): ...
    def set_child(self, child: Atk.Object): ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_description(self, description: str): ...
    def set_extents(self, x: int, y: int, width: int, height: int, coord_type: Atk.CoordType) -> bool: ...
    def set_name(self, name: str): ...
    def set_parent(self, parent: Atk.Object): ...
    def set_position(self, x: int, y: int, coord_type: Atk.CoordType) -> bool: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def set_role(self, role: Atk.Role): ...
    def set_size(self, width: int, height: int) -> bool: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    accessible_parent: Incomplete
    description: Incomplete
    g_type_instance: Incomplete
    layer: Incomplete
    name: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    relation_set: Incomplete
    role: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class PlugClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    get_object_id: Incomplete
    parent_class: Incomplete

class PropertyValues(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    new_value: Incomplete
    old_value: Incomplete
    property_name: Incomplete

class Range(__gi.Boxed):
    def copy(self) -> Atk.Range: ...
    def free(self) -> None: ...
    def get_description(self) -> str: ...
    def get_lower_limit(self) -> float: ...
    def get_upper_limit(self) -> float: ...
    @staticmethod
    def new(lower_limit: float, upper_limit: float, description: str) -> Atk.Range: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(lower_limit: float, upper_limit: float, description: str) -> Atk.Range: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

class Rectangle(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    height: Incomplete
    width: Incomplete
    x: Incomplete
    y: Incomplete

class Registry(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_factory(self, type: GType) -> Atk.ObjectFactory: ...
    def get_factory_type(self, type: GType) -> GType: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_factory_type(self, type: GType, factory_type: GType): ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    factory_singleton_cache: Incomplete
    factory_type_registry: Incomplete
    g_type_instance: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class RegistryClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    parent_class: Incomplete

class Relation(__gi_overrides_GObject.Object):
    def add_target(self, target: Atk.Object): ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_relation_type(self) -> Atk.RelationType: ...
    def get_target(self) -> list: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def new(targets: list, relationship: Atk.RelationType) -> Atk.Relation: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def remove_target(self, target: Atk.Object) -> bool: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    relationship: Incomplete
    target: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class RelationClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    parent: Incomplete

class RelationSet(__gi_overrides_GObject.Object):
    def add(self, relation: Atk.Relation): ...
    def add_relation_by_type(self, relationship: Atk.RelationType, target: Atk.Object): ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def contains(self, relationship: Atk.RelationType) -> bool: ...
    def contains_target(self, relationship: Atk.RelationType, target: Atk.Object) -> bool: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_n_relations(self) -> int: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_relation(self, i: int) -> Atk.Relation: ...
    def get_relation_by_type(self, relationship: Atk.RelationType) -> Atk.Relation: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def new() -> Atk.RelationSet: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def remove(self, relation: Atk.Relation): ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    relations: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class RelationSetClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    pad1: Incomplete
    pad2: Incomplete
    parent: Incomplete

class RelationType(__gobject.GEnum):
    ATK_RELATION_NULL: int
    ATK_RELATION_CONTROLLED_BY: int
    ATK_RELATION_CONTROLLER_FOR: int
    ATK_RELATION_LABEL_FOR: int
    ATK_RELATION_LABELLED_BY: int
    ATK_RELATION_MEMBER_OF: int
    ATK_RELATION_NODE_CHILD_OF: int
    ATK_RELATION_FLOWS_TO: int
    ATK_RELATION_FLOWS_FROM: int
    ATK_RELATION_SUBWINDOW_OF: int
    ATK_RELATION_EMBEDS: int
    ATK_RELATION_EMBEDDED_BY: int
    ATK_RELATION_POPUP_FOR: int
    ATK_RELATION_PARENT_WINDOW_OF: int
    ATK_RELATION_DESCRIBED_BY: int
    ATK_RELATION_DESCRIPTION_FOR: int
    ATK_RELATION_NODE_PARENT_OF: int
    ATK_RELATION_DETAILS: int
    ATK_RELATION_DETAILS_FOR: int
    ATK_RELATION_ERROR_MESSAGE: int
    ATK_RELATION_ERROR_FOR: int
    ATK_RELATION_LAST_DEFINED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    @staticmethod
    def for_name(name: str) -> Atk.RelationType: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    @staticmethod
    def get_name(type: Atk.RelationType) -> str: ...
    @staticmethod
    def register(name: str) -> Atk.RelationType: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CONTROLLED_BY: int
    CONTROLLER_FOR: int
    DESCRIBED_BY: int
    DESCRIPTION_FOR: int
    DETAILS: int
    DETAILS_FOR: int
    EMBEDDED_BY: int
    EMBEDS: int
    ERROR_FOR: int
    ERROR_MESSAGE: int
    FLOWS_FROM: int
    FLOWS_TO: int
    LABELLED_BY: int
    LABEL_FOR: int
    LAST_DEFINED: int
    MEMBER_OF: int
    NODE_CHILD_OF: int
    NODE_PARENT_OF: int
    NULL: int
    PARENT_WINDOW_OF: int
    POPUP_FOR: int
    SUBWINDOW_OF: int

class Role(__gobject.GEnum):
    ATK_ROLE_INVALID: int
    ATK_ROLE_ACCEL_LABEL: int
    ATK_ROLE_ALERT: int
    ATK_ROLE_ANIMATION: int
    ATK_ROLE_ARROW: int
    ATK_ROLE_CALENDAR: int
    ATK_ROLE_CANVAS: int
    ATK_ROLE_CHECK_BOX: int
    ATK_ROLE_CHECK_MENU_ITEM: int
    ATK_ROLE_COLOR_CHOOSER: int
    ATK_ROLE_COLUMN_HEADER: int
    ATK_ROLE_COMBO_BOX: int
    ATK_ROLE_DATE_EDITOR: int
    ATK_ROLE_DESKTOP_ICON: int
    ATK_ROLE_DESKTOP_FRAME: int
    ATK_ROLE_DIAL: int
    ATK_ROLE_DIALOG: int
    ATK_ROLE_DIRECTORY_PANE: int
    ATK_ROLE_DRAWING_AREA: int
    ATK_ROLE_FILE_CHOOSER: int
    ATK_ROLE_FILLER: int
    ATK_ROLE_FONT_CHOOSER: int
    ATK_ROLE_FRAME: int
    ATK_ROLE_GLASS_PANE: int
    ATK_ROLE_HTML_CONTAINER: int
    ATK_ROLE_ICON: int
    ATK_ROLE_IMAGE: int
    ATK_ROLE_INTERNAL_FRAME: int
    ATK_ROLE_LABEL: int
    ATK_ROLE_LAYERED_PANE: int
    ATK_ROLE_LIST: int
    ATK_ROLE_LIST_ITEM: int
    ATK_ROLE_MENU: int
    ATK_ROLE_MENU_BAR: int
    ATK_ROLE_MENU_ITEM: int
    ATK_ROLE_OPTION_PANE: int
    ATK_ROLE_PAGE_TAB: int
    ATK_ROLE_PAGE_TAB_LIST: int
    ATK_ROLE_PANEL: int
    ATK_ROLE_PASSWORD_TEXT: int
    ATK_ROLE_POPUP_MENU: int
    ATK_ROLE_PROGRESS_BAR: int
    ATK_ROLE_PUSH_BUTTON: int
    ATK_ROLE_RADIO_BUTTON: int
    ATK_ROLE_RADIO_MENU_ITEM: int
    ATK_ROLE_ROOT_PANE: int
    ATK_ROLE_ROW_HEADER: int
    ATK_ROLE_SCROLL_BAR: int
    ATK_ROLE_SCROLL_PANE: int
    ATK_ROLE_SEPARATOR: int
    ATK_ROLE_SLIDER: int
    ATK_ROLE_SPLIT_PANE: int
    ATK_ROLE_SPIN_BUTTON: int
    ATK_ROLE_STATUSBAR: int
    ATK_ROLE_TABLE: int
    ATK_ROLE_TABLE_CELL: int
    ATK_ROLE_TABLE_COLUMN_HEADER: int
    ATK_ROLE_TABLE_ROW_HEADER: int
    ATK_ROLE_TEAR_OFF_MENU_ITEM: int
    ATK_ROLE_TERMINAL: int
    ATK_ROLE_TEXT: int
    ATK_ROLE_TOGGLE_BUTTON: int
    ATK_ROLE_TOOL_BAR: int
    ATK_ROLE_TOOL_TIP: int
    ATK_ROLE_TREE: int
    ATK_ROLE_TREE_TABLE: int
    ATK_ROLE_UNKNOWN: int
    ATK_ROLE_VIEWPORT: int
    ATK_ROLE_WINDOW: int
    ATK_ROLE_HEADER: int
    ATK_ROLE_FOOTER: int
    ATK_ROLE_PARAGRAPH: int
    ATK_ROLE_RULER: int
    ATK_ROLE_APPLICATION: int
    ATK_ROLE_AUTOCOMPLETE: int
    ATK_ROLE_EDITBAR: int
    ATK_ROLE_EMBEDDED: int
    ATK_ROLE_ENTRY: int
    ATK_ROLE_CHART: int
    ATK_ROLE_CAPTION: int
    ATK_ROLE_DOCUMENT_FRAME: int
    ATK_ROLE_HEADING: int
    ATK_ROLE_PAGE: int
    ATK_ROLE_SECTION: int
    ATK_ROLE_REDUNDANT_OBJECT: int
    ATK_ROLE_FORM: int
    ATK_ROLE_LINK: int
    ATK_ROLE_INPUT_METHOD_WINDOW: int
    ATK_ROLE_TABLE_ROW: int
    ATK_ROLE_TREE_ITEM: int
    ATK_ROLE_DOCUMENT_SPREADSHEET: int
    ATK_ROLE_DOCUMENT_PRESENTATION: int
    ATK_ROLE_DOCUMENT_TEXT: int
    ATK_ROLE_DOCUMENT_WEB: int
    ATK_ROLE_DOCUMENT_EMAIL: int
    ATK_ROLE_COMMENT: int
    ATK_ROLE_LIST_BOX: int
    ATK_ROLE_GROUPING: int
    ATK_ROLE_IMAGE_MAP: int
    ATK_ROLE_NOTIFICATION: int
    ATK_ROLE_INFO_BAR: int
    ATK_ROLE_LEVEL_BAR: int
    ATK_ROLE_TITLE_BAR: int
    ATK_ROLE_BLOCK_QUOTE: int
    ATK_ROLE_AUDIO: int
    ATK_ROLE_VIDEO: int
    ATK_ROLE_DEFINITION: int
    ATK_ROLE_ARTICLE: int
    ATK_ROLE_LANDMARK: int
    ATK_ROLE_LOG: int
    ATK_ROLE_MARQUEE: int
    ATK_ROLE_MATH: int
    ATK_ROLE_RATING: int
    ATK_ROLE_TIMER: int
    ATK_ROLE_DESCRIPTION_LIST: int
    ATK_ROLE_DESCRIPTION_TERM: int
    ATK_ROLE_DESCRIPTION_VALUE: int
    ATK_ROLE_STATIC: int
    ATK_ROLE_MATH_FRACTION: int
    ATK_ROLE_MATH_ROOT: int
    ATK_ROLE_SUBSCRIPT: int
    ATK_ROLE_SUPERSCRIPT: int
    ATK_ROLE_FOOTNOTE: int
    ATK_ROLE_CONTENT_DELETION: int
    ATK_ROLE_CONTENT_INSERTION: int
    ATK_ROLE_MARK: int
    ATK_ROLE_SUGGESTION: int
    ATK_ROLE_LAST_DEFINED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    @staticmethod
    def for_name(name: str) -> Atk.Role: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    @staticmethod
    def get_localized_name(role: Atk.Role) -> str: ...
    @staticmethod
    def get_name(role: Atk.Role) -> str: ...
    @staticmethod
    def register(name: str) -> Atk.Role: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ACCELERATOR_LABEL: int
    ALERT: int
    ANIMATION: int
    APPLICATION: int
    ARROW: int
    ARTICLE: int
    AUDIO: int
    AUTOCOMPLETE: int
    BLOCK_QUOTE: int
    CALENDAR: int
    CANVAS: int
    CAPTION: int
    CHART: int
    CHECK_BOX: int
    CHECK_MENU_ITEM: int
    COLOR_CHOOSER: int
    COLUMN_HEADER: int
    COMBO_BOX: int
    COMMENT: int
    CONTENT_DELETION: int
    CONTENT_INSERTION: int
    DATE_EDITOR: int
    DEFINITION: int
    DESCRIPTION_LIST: int
    DESCRIPTION_TERM: int
    DESCRIPTION_VALUE: int
    DESKTOP_FRAME: int
    DESKTOP_ICON: int
    DIAL: int
    DIALOG: int
    DIRECTORY_PANE: int
    DOCUMENT_EMAIL: int
    DOCUMENT_FRAME: int
    DOCUMENT_PRESENTATION: int
    DOCUMENT_SPREADSHEET: int
    DOCUMENT_TEXT: int
    DOCUMENT_WEB: int
    DRAWING_AREA: int
    EDIT_BAR: int
    EMBEDDED: int
    ENTRY: int
    FILE_CHOOSER: int
    FILLER: int
    FONT_CHOOSER: int
    FOOTER: int
    FOOTNOTE: int
    FORM: int
    FRAME: int
    GLASS_PANE: int
    GROUPING: int
    HEADER: int
    HEADING: int
    HTML_CONTAINER: int
    ICON: int
    IMAGE: int
    IMAGE_MAP: int
    INFO_BAR: int
    INPUT_METHOD_WINDOW: int
    INTERNAL_FRAME: int
    INVALID: int
    LABEL: int
    LANDMARK: int
    LAST_DEFINED: int
    LAYERED_PANE: int
    LEVEL_BAR: int
    LINK: int
    LIST: int
    LIST_BOX: int
    LIST_ITEM: int
    LOG: int
    MARK: int
    MARQUEE: int
    MATH: int
    MATH_FRACTION: int
    MATH_ROOT: int
    MENU: int
    MENU_BAR: int
    MENU_ITEM: int
    NOTIFICATION: int
    OPTION_PANE: int
    PAGE: int
    PAGE_TAB: int
    PAGE_TAB_LIST: int
    PANEL: int
    PARAGRAPH: int
    PASSWORD_TEXT: int
    POPUP_MENU: int
    PROGRESS_BAR: int
    PUSH_BUTTON: int
    RADIO_BUTTON: int
    RADIO_MENU_ITEM: int
    RATING: int
    REDUNDANT_OBJECT: int
    ROOT_PANE: int
    ROW_HEADER: int
    RULER: int
    SCROLL_BAR: int
    SCROLL_PANE: int
    SECTION: int
    SEPARATOR: int
    SLIDER: int
    SPIN_BUTTON: int
    SPLIT_PANE: int
    STATIC: int
    STATUSBAR: int
    SUBSCRIPT: int
    SUGGESTION: int
    SUPERSCRIPT: int
    TABLE: int
    TABLE_CELL: int
    TABLE_COLUMN_HEADER: int
    TABLE_ROW: int
    TABLE_ROW_HEADER: int
    TEAR_OFF_MENU_ITEM: int
    TERMINAL: int
    TEXT: int
    TIMER: int
    TITLE_BAR: int
    TOGGLE_BUTTON: int
    TOOL_BAR: int
    TOOL_TIP: int
    TREE: int
    TREE_ITEM: int
    TREE_TABLE: int
    UNKNOWN: int
    VIDEO: int
    VIEWPORT: int
    WINDOW: int

class ScrollType(__gobject.GEnum):
    ATK_SCROLL_TOP_LEFT: int
    ATK_SCROLL_BOTTOM_RIGHT: int
    ATK_SCROLL_TOP_EDGE: int
    ATK_SCROLL_BOTTOM_EDGE: int
    ATK_SCROLL_LEFT_EDGE: int
    ATK_SCROLL_RIGHT_EDGE: int
    ATK_SCROLL_ANYWHERE: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ANYWHERE: int
    BOTTOM_EDGE: int
    BOTTOM_RIGHT: int
    LEFT_EDGE: int
    RIGHT_EDGE: int
    TOP_EDGE: int
    TOP_LEFT: int

class SelectionIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    add_selection: Incomplete
    clear_selection: Incomplete
    get_selection_count: Incomplete
    is_child_selected: Incomplete
    parent: Incomplete
    ref_selection: Incomplete
    remove_selection: Incomplete
    selection_changed: Incomplete
    select_all_selection: Incomplete

class Socket(Object, Component):
    def add_relationship(self, relationship: Atk.RelationType, target: Atk.Object) -> bool: ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def contains(self, x: int, y: int, coord_type: Atk.CoordType) -> bool: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def do_active_descendant_changed(self, child: Incomplete | None = ...) -> None: ...
    def do_children_changed(self, change_index: int, changed_child: Incomplete | None = ...): ...
    def do_embed(self, plug_id: str): ...
    def do_focus_event(self, focus_in: bool): ...
    def do_get_attributes(self) -> list: ...
    def do_get_description(self) -> str: ...
    def do_get_index_in_parent(self) -> int: ...
    def do_get_layer(self) -> Atk.Layer: ...
    def do_get_mdi_zorder(self) -> int: ...
    def do_get_name(self) -> str: ...
    def do_get_n_children(self) -> int: ...
    def do_get_object_locale(self) -> str: ...
    def do_get_parent(self) -> Atk.Object: ...
    def do_get_role(self) -> Atk.Role: ...
    def do_initialize(self, data: Incomplete | None = ...) -> None: ...
    def do_property_change(self, values: Atk.PropertyValues): ...
    def do_ref_relation_set(self) -> Atk.RelationSet: ...
    def do_ref_state_set(self) -> Atk.StateSet: ...
    def do_remove_property_change_handler(self, handler_id: int): ...
    def do_set_description(self, description: str): ...
    def do_set_name(self, name: str): ...
    def do_set_parent(self, parent: Atk.Object): ...
    def do_set_role(self, role: Atk.Role): ...
    def do_state_change(self, name: str, state_set: bool): ...
    def do_visible_data_changed(self) -> None: ...
    def embed(self, plug_id: str): ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_accessible_id(self) -> str: ...
    def get_alpha(self) -> float: ...
    def get_attributes(self) -> list: ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_description(self) -> str: ...
    def get_extents(self, coord_type: Atk.CoordType) -> tuple[None, None, None, None]: ...
    def get_index_in_parent(self) -> int: ...
    def get_layer(self) -> Atk.Layer: ...
    def get_mdi_zorder(self) -> int: ...
    def get_name(self) -> str: ...
    def get_n_accessible_children(self) -> int: ...
    def get_object_locale(self) -> str: ...
    def get_parent(self) -> Atk.Object: ...
    def get_position(self, coord_type: Atk.CoordType) -> tuple[None, None]: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def get_role(self) -> Atk.Role: ...
    def get_size(self) -> tuple[None, None]: ...
    def grab_focus(self) -> bool: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def initialize(self, data: Incomplete | None = ...) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def is_occupied(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def new() -> Atk.Object: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def notify_state_change(self, state: int, value: bool): ...
    def override_property(self, property_id: int, name: str): ...
    def peek_parent(self) -> Atk.Object: ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_accessible_at_point(self, x: int, y: int, coord_type: Atk.CoordType) -> Union[Atk.Object, None]: ...
    def ref_accessible_child(self, i: int) -> Atk.Object: ...
    def ref_relation_set(self) -> Atk.RelationSet: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def ref_state_set(self) -> Atk.StateSet: ...
    def remove_focus_handler(self, handler_id: int): ...
    def remove_property_change_handler(self, handler_id: int): ...
    def remove_relationship(self, relationship: Atk.RelationType, target: Atk.Object) -> bool: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def scroll_to(self, type: Atk.ScrollType) -> bool: ...
    def scroll_to_point(self, coords: Atk.CoordType, x: int, y: int) -> bool: ...
    def set_accessible_id(self, name: str): ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_description(self, description: str): ...
    def set_extents(self, x: int, y: int, width: int, height: int, coord_type: Atk.CoordType) -> bool: ...
    def set_name(self, name: str): ...
    def set_parent(self, parent: Atk.Object): ...
    def set_position(self, x: int, y: int, coord_type: Atk.CoordType) -> bool: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def set_role(self, role: Atk.Role): ...
    def set_size(self, width: int, height: int) -> bool: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    accessible_parent: Incomplete
    description: Incomplete
    embedded_plug_id: Incomplete
    g_type_instance: Incomplete
    layer: Incomplete
    name: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    relation_set: Incomplete
    role: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class SocketClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    embed: Incomplete
    parent_class: Incomplete

class StateSet(__gi_overrides_GObject.Object):
    def add_state(self, type: Atk.StateType) -> bool: ...
    def add_states(self, types: list): ...
    def and_sets(self, compare_set: Atk.StateSet) -> Atk.StateSet: ...
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def clear_states(self) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def contains_state(self, type: Atk.StateType) -> bool: ...
    def contains_states(self, types: list) -> bool: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_empty(self) -> bool: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def new() -> Atk.StateSet: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def or_sets(self, compare_set: Atk.StateSet) -> Union[Atk.StateSet, None]: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def remove_state(self, type: Atk.StateType) -> bool: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def xor_sets(self, compare_set: Atk.StateSet) -> Atk.StateSet: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class StateSetClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    parent: Incomplete

class StateType(__gobject.GEnum):
    ATK_STATE_INVALID: int
    ATK_STATE_ACTIVE: int
    ATK_STATE_ARMED: int
    ATK_STATE_BUSY: int
    ATK_STATE_CHECKED: int
    ATK_STATE_DEFUNCT: int
    ATK_STATE_EDITABLE: int
    ATK_STATE_ENABLED: int
    ATK_STATE_EXPANDABLE: int
    ATK_STATE_EXPANDED: int
    ATK_STATE_FOCUSABLE: int
    ATK_STATE_FOCUSED: int
    ATK_STATE_HORIZONTAL: int
    ATK_STATE_ICONIFIED: int
    ATK_STATE_MODAL: int
    ATK_STATE_MULTI_LINE: int
    ATK_STATE_MULTISELECTABLE: int
    ATK_STATE_OPAQUE: int
    ATK_STATE_PRESSED: int
    ATK_STATE_RESIZABLE: int
    ATK_STATE_SELECTABLE: int
    ATK_STATE_SELECTED: int
    ATK_STATE_SENSITIVE: int
    ATK_STATE_SHOWING: int
    ATK_STATE_SINGLE_LINE: int
    ATK_STATE_STALE: int
    ATK_STATE_TRANSIENT: int
    ATK_STATE_VERTICAL: int
    ATK_STATE_VISIBLE: int
    ATK_STATE_MANAGES_DESCENDANTS: int
    ATK_STATE_INDETERMINATE: int
    ATK_STATE_TRUNCATED: int
    ATK_STATE_REQUIRED: int
    ATK_STATE_INVALID_ENTRY: int
    ATK_STATE_SUPPORTS_AUTOCOMPLETION: int
    ATK_STATE_SELECTABLE_TEXT: int
    ATK_STATE_DEFAULT: int
    ATK_STATE_ANIMATED: int
    ATK_STATE_VISITED: int
    ATK_STATE_CHECKABLE: int
    ATK_STATE_HAS_POPUP: int
    ATK_STATE_HAS_TOOLTIP: int
    ATK_STATE_READ_ONLY: int
    ATK_STATE_COLLAPSED: int
    ATK_STATE_LAST_DEFINED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    @staticmethod
    def for_name(name: str) -> Atk.StateType: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    @staticmethod
    def get_name(type: Atk.StateType) -> str: ...
    @staticmethod
    def register(name: str) -> Atk.StateType: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ACTIVE: int
    ANIMATED: int
    ARMED: int
    BUSY: int
    CHECKABLE: int
    CHECKED: int
    COLLAPSED: int
    DEFAULT: int
    DEFUNCT: int
    EDITABLE: int
    ENABLED: int
    EXPANDABLE: int
    EXPANDED: int
    FOCUSABLE: int
    FOCUSED: int
    HAS_POPUP: int
    HAS_TOOLTIP: int
    HORIZONTAL: int
    ICONIFIED: int
    INDETERMINATE: int
    INVALID: int
    INVALID_ENTRY: int
    LAST_DEFINED: int
    MANAGES_DESCENDANTS: int
    MODAL: int
    MULTISELECTABLE: int
    MULTI_LINE: int
    OPAQUE: int
    PRESSED: int
    READ_ONLY: int
    REQUIRED: int
    RESIZABLE: int
    SELECTABLE: int
    SELECTABLE_TEXT: int
    SELECTED: int
    SENSITIVE: int
    SHOWING: int
    SINGLE_LINE: int
    STALE: int
    SUPPORTS_AUTOCOMPLETION: int
    TRANSIENT: int
    TRUNCATED: int
    VERTICAL: int
    VISIBLE: int
    VISITED: int

class StreamableContent(__gobject.GInterface):
    def get_mime_type(self, i: int) -> str: ...
    def get_n_mime_types(self) -> int: ...
    def get_stream(self, mime_type: str) -> GLib.IOChannel: ...
    def get_uri(self, mime_type: str) -> Union[str, None]: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __gsignals__: Incomplete

class StreamableContentIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    get_mime_type: Incomplete
    get_n_mime_types: Incomplete
    get_stream: Incomplete
    get_uri: Incomplete
    pad1: Incomplete
    pad2: Incomplete
    pad3: Incomplete
    parent: Incomplete

class TableCellIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    get_column_header_cells: Incomplete
    get_column_span: Incomplete
    get_position: Incomplete
    get_row_column_span: Incomplete
    get_row_header_cells: Incomplete
    get_row_span: Incomplete
    get_table: Incomplete
    parent: Incomplete

class TableIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    add_column_selection: Incomplete
    add_row_selection: Incomplete
    column_deleted: Incomplete
    column_inserted: Incomplete
    column_reordered: Incomplete
    get_caption: Incomplete
    get_column_at_index: Incomplete
    get_column_description: Incomplete
    get_column_extent_at: Incomplete
    get_column_header: Incomplete
    get_index_at: Incomplete
    get_n_columns: Incomplete
    get_n_rows: Incomplete
    get_row_at_index: Incomplete
    get_row_description: Incomplete
    get_row_extent_at: Incomplete
    get_row_header: Incomplete
    get_selected_columns: Incomplete
    get_selected_rows: Incomplete
    get_summary: Incomplete
    is_column_selected: Incomplete
    is_row_selected: Incomplete
    is_selected: Incomplete
    model_changed: Incomplete
    parent: Incomplete
    ref_at: Incomplete
    remove_column_selection: Incomplete
    remove_row_selection: Incomplete
    row_deleted: Incomplete
    row_inserted: Incomplete
    row_reordered: Incomplete
    set_caption: Incomplete
    set_column_description: Incomplete
    set_column_header: Incomplete
    set_row_description: Incomplete
    set_row_header: Incomplete
    set_summary: Incomplete

class TextAttribute(__gobject.GEnum):
    ATK_TEXT_ATTR_INVALID: int
    ATK_TEXT_ATTR_LEFT_MARGIN: int
    ATK_TEXT_ATTR_RIGHT_MARGIN: int
    ATK_TEXT_ATTR_INDENT: int
    ATK_TEXT_ATTR_INVISIBLE: int
    ATK_TEXT_ATTR_EDITABLE: int
    ATK_TEXT_ATTR_PIXELS_ABOVE_LINES: int
    ATK_TEXT_ATTR_PIXELS_BELOW_LINES: int
    ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP: int
    ATK_TEXT_ATTR_BG_FULL_HEIGHT: int
    ATK_TEXT_ATTR_RISE: int
    ATK_TEXT_ATTR_UNDERLINE: int
    ATK_TEXT_ATTR_STRIKETHROUGH: int
    ATK_TEXT_ATTR_SIZE: int
    ATK_TEXT_ATTR_SCALE: int
    ATK_TEXT_ATTR_WEIGHT: int
    ATK_TEXT_ATTR_LANGUAGE: int
    ATK_TEXT_ATTR_FAMILY_NAME: int
    ATK_TEXT_ATTR_BG_COLOR: int
    ATK_TEXT_ATTR_FG_COLOR: int
    ATK_TEXT_ATTR_BG_STIPPLE: int
    ATK_TEXT_ATTR_FG_STIPPLE: int
    ATK_TEXT_ATTR_WRAP_MODE: int
    ATK_TEXT_ATTR_DIRECTION: int
    ATK_TEXT_ATTR_JUSTIFICATION: int
    ATK_TEXT_ATTR_STRETCH: int
    ATK_TEXT_ATTR_VARIANT: int
    ATK_TEXT_ATTR_STYLE: int
    ATK_TEXT_ATTR_TEXT_POSITION: int
    ATK_TEXT_ATTR_LAST_DEFINED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    @staticmethod
    def for_name(name: str) -> Atk.TextAttribute: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    @staticmethod
    def get_name(attr: Atk.TextAttribute) -> str: ...
    @staticmethod
    def get_value(attr: Atk.TextAttribute, index_: int) -> Union[str, None]: ...
    @staticmethod
    def register(name: str) -> Atk.TextAttribute: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BG_COLOR: int
    BG_FULL_HEIGHT: int
    BG_STIPPLE: int
    DIRECTION: int
    EDITABLE: int
    FAMILY_NAME: int
    FG_COLOR: int
    FG_STIPPLE: int
    INDENT: int
    INVALID: int
    INVISIBLE: int
    JUSTIFICATION: int
    LANGUAGE: int
    LAST_DEFINED: int
    LEFT_MARGIN: int
    PIXELS_ABOVE_LINES: int
    PIXELS_BELOW_LINES: int
    PIXELS_INSIDE_WRAP: int
    RIGHT_MARGIN: int
    RISE: int
    SCALE: int
    SIZE: int
    STRETCH: int
    STRIKETHROUGH: int
    STYLE: int
    TEXT_POSITION: int
    UNDERLINE: int
    VARIANT: int
    WEIGHT: int
    WRAP_MODE: int

class TextBoundary(__gobject.GEnum):
    ATK_TEXT_BOUNDARY_CHAR: int
    ATK_TEXT_BOUNDARY_WORD_START: int
    ATK_TEXT_BOUNDARY_WORD_END: int
    ATK_TEXT_BOUNDARY_SENTENCE_START: int
    ATK_TEXT_BOUNDARY_SENTENCE_END: int
    ATK_TEXT_BOUNDARY_LINE_START: int
    ATK_TEXT_BOUNDARY_LINE_END: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CHAR: int
    LINE_END: int
    LINE_START: int
    SENTENCE_END: int
    SENTENCE_START: int
    WORD_END: int
    WORD_START: int

class TextClipType(__gobject.GEnum):
    ATK_TEXT_CLIP_NONE: int
    ATK_TEXT_CLIP_MIN: int
    ATK_TEXT_CLIP_MAX: int
    ATK_TEXT_CLIP_BOTH: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BOTH: int
    MAX: int
    MIN: int
    NONE: int

class TextGranularity(__gobject.GEnum):
    ATK_TEXT_GRANULARITY_CHAR: int
    ATK_TEXT_GRANULARITY_WORD: int
    ATK_TEXT_GRANULARITY_SENTENCE: int
    ATK_TEXT_GRANULARITY_LINE: int
    ATK_TEXT_GRANULARITY_PARAGRAPH: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CHAR: int
    LINE: int
    PARAGRAPH: int
    SENTENCE: int
    WORD: int

class TextIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    add_selection: Incomplete
    get_bounded_ranges: Incomplete
    get_caret_offset: Incomplete
    get_character_at_offset: Incomplete
    get_character_count: Incomplete
    get_character_extents: Incomplete
    get_default_attributes: Incomplete
    get_n_selections: Incomplete
    get_offset_at_point: Incomplete
    get_range_extents: Incomplete
    get_run_attributes: Incomplete
    get_selection: Incomplete
    get_string_at_offset: Incomplete
    get_text: Incomplete
    get_text_after_offset: Incomplete
    get_text_at_offset: Incomplete
    get_text_before_offset: Incomplete
    parent: Incomplete
    remove_selection: Incomplete
    scroll_substring_to: Incomplete
    scroll_substring_to_point: Incomplete
    set_caret_offset: Incomplete
    set_selection: Incomplete
    text_attributes_changed: Incomplete
    text_caret_moved: Incomplete
    text_changed: Incomplete
    text_selection_changed: Incomplete

class TextRange(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    bounds: Incomplete
    content: Incomplete
    end_offset: Incomplete
    start_offset: Incomplete

class TextRectangle(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    height: Incomplete
    width: Incomplete
    x: Incomplete
    y: Incomplete

class Util(__gi_overrides_GObject.Object):
    def bind_property(self, *args, **kwargs) -> None: ...
    def bind_property_full(self, *args, **kargs) -> None: ...
    def chain(self, *args, **kwargs) -> None: ...
    def compat_control(self, *args, **kargs) -> None: ...
    def connect(self, *args, **kwargs) -> None: ...
    def connect_after(self, *args, **kwargs) -> None: ...
    def connect_data(self, detailed_signal, handler, *data, **kwargs) -> None: ...
    def connect_object(self, *args, **kwargs) -> None: ...
    def connect_object_after(self, *args, **kwargs) -> None: ...
    def disconnect(*args, **kwargs) -> None: ...
    def disconnect_by_func(self, *args, **kwargs) -> None: ...
    def emit(self, *args, **kwargs) -> None: ...
    def emit_stop_by_name(self, detailed_signal) -> None: ...
    def find_property(self, property_name: str) -> GObject.ParamSpec: ...
    def force_floating(self, *args, **kargs) -> None: ...
    def freeze_notify(self) -> None: ...
    def getv(self, names: list, values: list): ...
    def get_data(self, *args, **kargs) -> None: ...
    def get_properties(self, *args, **kwargs) -> None: ...
    def get_property(self, *args, **kwargs) -> None: ...
    def get_qdata(self, *args, **kargs) -> None: ...
    def handler_block(obj, handler_id) -> None: ...
    def handler_block_by_func(self, *args, **kwargs) -> None: ...
    def handler_disconnect(*args, **kwargs) -> None: ...
    def handler_is_connected(*args, **kwargs) -> None: ...
    def handler_unblock(*args, **kwargs) -> None: ...
    def handler_unblock_by_func(self, *args, **kwargs) -> None: ...
    def install_properties(self, pspecs: list): ...
    def install_property(self, property_id: int, pspec: GObject.ParamSpec): ...
    def interface_find_property(self, *args, **kargs) -> None: ...
    def interface_install_property(self, *args, **kargs) -> None: ...
    def interface_list_properties(self, *args, **kargs) -> None: ...
    def is_floating(self) -> bool: ...
    def list_properties(self) -> tuple[list, None]: ...
    @staticmethod
    def newv(object_type: GType, parameters: list) -> GObject.Object: ...
    def notify(self, property_name: str): ...
    def notify_by_pspec(self, *args, **kargs) -> None: ...
    def override_property(self, property_id: int, name: str): ...
    def ref(self, *args, **kargs) -> None: ...
    def ref_sink(self, *args, **kargs) -> None: ...
    def replace_data(self, *args, **kargs) -> None: ...
    def replace_qdata(self, *args, **kargs) -> None: ...
    def run_dispose(self) -> None: ...
    def set_data(self, *args, **kargs) -> None: ...
    def set_properties(self, *args, **kwargs) -> None: ...
    def set_property(self, *args, **kwargs) -> None: ...
    def steal_data(self, *args, **kargs) -> None: ...
    def steal_qdata(self, *args, **kargs) -> None: ...
    def stop_emission(self, detailed_signal) -> None: ...
    def stop_emission_by_name(*args, **kwargs) -> None: ...
    def thaw_notify(self) -> None: ...
    def unref(self, *args, **kargs) -> None: ...
    def watch_closure(self, *args, **kargs) -> None: ...
    def weak_ref(self, *args, **kwargs) -> None: ...
    def __copy__(self, *args, **kwargs) -> None: ...
    def __deepcopy__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__(**properties) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    g_type_instance: Incomplete
    parent: Incomplete
    qdata: Incomplete
    ref_count: Incomplete
    __gpointer__: Incomplete
    __grefcount__: Incomplete
    props: Incomplete
    __gsignals__: Incomplete

class UtilClass(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    add_global_event_listener: Incomplete
    add_key_event_listener: Incomplete
    get_root: Incomplete
    get_toolkit_name: Incomplete
    get_toolkit_version: Incomplete
    parent: Incomplete
    remove_global_event_listener: Incomplete
    remove_key_event_listener: Incomplete

class ValueIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    get_current_value: Incomplete
    get_increment: Incomplete
    get_maximum_value: Incomplete
    get_minimum_increment: Incomplete
    get_minimum_value: Incomplete
    get_range: Incomplete
    get_sub_ranges: Incomplete
    get_value_and_text: Incomplete
    parent: Incomplete
    set_current_value: Incomplete
    set_value: Incomplete

class ValueType(__gobject.GEnum):
    ATK_VALUE_VERY_WEAK: int
    ATK_VALUE_WEAK: int
    ATK_VALUE_ACCEPTABLE: int
    ATK_VALUE_STRONG: int
    ATK_VALUE_VERY_STRONG: int
    ATK_VALUE_VERY_LOW: int
    ATK_VALUE_LOW: int
    ATK_VALUE_MEDIUM: int
    ATK_VALUE_HIGH: int
    ATK_VALUE_VERY_HIGH: int
    ATK_VALUE_VERY_BAD: int
    ATK_VALUE_BAD: int
    ATK_VALUE_GOOD: int
    ATK_VALUE_VERY_GOOD: int
    ATK_VALUE_BEST: int
    ATK_VALUE_LAST_DEFINED: int
    @staticmethod
    def as_integer_ratio() -> None: ...
    @staticmethod
    def bit_count() -> None: ...
    @staticmethod
    def bit_length() -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    @staticmethod
    def get_localized_name(value_type: Atk.ValueType) -> str: ...
    @staticmethod
    def get_name(value_type: Atk.ValueType) -> str: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __divmod__(self, value) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, value, mod) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ACCEPTABLE: int
    BAD: int
    BEST: int
    GOOD: int
    HIGH: int
    LAST_DEFINED: int
    LOW: int
    MEDIUM: int
    STRONG: int
    VERY_BAD: int
    VERY_GOOD: int
    VERY_HIGH: int
    VERY_LOW: int
    VERY_STRONG: int
    VERY_WEAK: int
    WEAK: int

class WindowIface(__gi.Struct):
    def __delattr__(self, name) -> None: ...
    @staticmethod
    def __dir__() -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __init__() -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    parent: Incomplete

class __class__:
    def __delattr__(self, name) -> None: ...
    def __dir__(self) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getattr__(self, name) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, namespace, version: Incomplete | None = ...) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...

__loader__: Incomplete
__path__: Incomplete
__spec__: Incomplete
