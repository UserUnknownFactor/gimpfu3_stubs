import gi as __gi
import gi.overrides as __gi_overrides
import gi.overrides.GLib as __gi_overrides_GLib
import gobject as __gobject
import gi._option as option
from _typeshed import Incomplete
from gi import version_info
from gi._error import GError as GError
from gi._gi import OptionContext as OptionContext, OptionGroup as OptionGroup, Pid as Pid, spawn_async as spawn_async

Error = GError
OptionContext: Incomplete
OptionGroup: Incomplete
Pid: Incomplete
spawn_async: Incomplete

def threads_init() -> None: ...

class _VariantCreator: ...

class Variant(GLib.Variant):
    def __new__(cls, format_string, value): ...
    @staticmethod
    def new_tuple(*elements): ...
    def __del__(self) -> None: ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __hash__(self): ...
    def unpack(self): ...
    @classmethod
    def split_signature(klass, signature): ...
    def __len__(self): ...
    def __getitem__(self, key): ...
    def __nonzero__(self): ...
    def __bool__(self): ...
    def keys(self): ...

def markup_escape_text(text, length: int = ...): ...

IO_FLAG_IS_WRITEABLE: Incomplete

class MainLoop(GLib.MainLoop):
    def __new__(cls, context: Incomplete | None = ...): ...
    def __init__(self, context: Incomplete | None = ...) -> None: ...
    def run(self) -> None: ...

class MainContext(GLib.MainContext):
    def iteration(self, may_block: bool = ...): ...

class Source(GLib.Source):
    def __new__(cls, *args, **kwargs): ...
    def __init__(self, *args, **kwargs): ...
    def __del__(self) -> None: ...
    def set_callback(self, fn, user_data: Incomplete | None = ...) -> None: ...
    def get_current_time(self): ...
    get_current_time: Incomplete
    priority: Incomplete
    can_recurse: Incomplete

class Idle(Source):
    def __new__(cls, priority=...): ...
    def __init__(self, priority=...) -> None: ...

class Timeout(Source):
    def __new__(cls, interval: int = ..., priority=...): ...
    def __init__(self, interval: int = ..., priority=...) -> None: ...

def idle_add(function, *user_data, **kwargs): ...
def timeout_add(interval, function, *user_data, **kwargs): ...
def timeout_add_seconds(interval, function, *user_data, **kwargs): ...
def io_add_watch(*args, **kwargs): ...

class IOChannel(GLib.IOChannel):
    def __new__(cls, filedes: Incomplete | None = ..., filename: Incomplete | None = ..., mode: Incomplete | None = ..., hwnd: Incomplete | None = ...): ...
    def __init__(self, *args, **kwargs): ...
    def read(self, max_count: int = ...): ...
    def readline(self, size_hint: int = ...): ...
    def readlines(self, size_hint: int = ...): ...
    def write(self, buf, buflen: int = ...): ...
    def writelines(self, lines) -> None: ...
    def seek(self, offset, whence: int = ...): ...
    def add_watch(self, condition, callback, *user_data, **kwargs): ...
    add_watch: Incomplete
    def __iter__(self): ...
    def __next__(self): ...
    next: Incomplete

class PollFD(GLib.PollFD):
    def __new__(cls, fd, events): ...
    fd: Incomplete
    events: Incomplete
    def __init__(self, fd, events) -> None: ...

def child_watch_add(*args, **kwargs): ...
def get_current_time(): ...

get_current_time: Incomplete

def filename_from_utf8(utf8string, len: int = ...): ...

unix_signal_add_full: Incomplete
glib_version: Incomplete
pyglib_version = version_info

class Array(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    data: Incomplete
    len: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class AsciiType(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ALNUM: int
    ALPHA: int
    CNTRL: int
    DIGIT: int
    GRAPH: int
    LOWER: int
    PRINT: int
    PUNCT: int
    SPACE: int
    UPPER: int
    XDIGIT: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class AsyncQueue(__gi.Struct):
    def length(self): ...
    def length_unlocked(self): ...
    def lock(self) -> None: ...
    def pop(self) -> None: ...
    def pop_unlocked(self) -> None: ...
    def push(self, data: Incomplete | None = ...) -> None: ...
    def push_front(self, item: Incomplete | None = ...) -> None: ...
    def push_front_unlocked(self, item: Incomplete | None = ...) -> None: ...
    def push_unlocked(self, data: Incomplete | None = ...) -> None: ...
    def ref_unlocked(self) -> None: ...
    def remove(self, item: Incomplete | None = ...): ...
    def remove_unlocked(self, item: Incomplete | None = ...): ...
    def timed_pop(self, end_time) -> None: ...
    def timed_pop_unlocked(self, end_time) -> None: ...
    def timeout_pop(self, timeout) -> None: ...
    def timeout_pop_unlocked(self, timeout) -> None: ...
    def try_pop(self) -> None: ...
    def try_pop_unlocked(self) -> None: ...
    def unlock(self) -> None: ...
    def unref(self) -> None: ...
    def unref_and_unlock(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class BookmarkFile(__gi.Struct):
    def add_application(self, uri, name, exec: Incomplete | None = ...) -> None: ...
    def add_group(self, uri, group) -> None: ...
    def error_quark(self): ...
    def free(self) -> None: ...
    def get_added(self, uri): ...
    def get_added_date_time(self, uri) -> None: ...
    def get_applications(self, uri): ...
    def get_application_info(self, uri, name): ...
    def get_app_info(self, uri, name): ...
    def get_description(self, uri): ...
    def get_groups(self, uri): ...
    def get_icon(self, uri): ...
    def get_is_private(self, uri): ...
    def get_mime_type(self, uri): ...
    def get_modified(self, uri): ...
    def get_modified_date_time(self, uri) -> None: ...
    def get_size(self): ...
    def get_title(self, uri: Incomplete | None = ...): ...
    def get_uris(self): ...
    def get_visited(self, uri): ...
    def get_visited_date_time(self, uri) -> None: ...
    def has_application(self, uri, name): ...
    def has_group(self, uri, group): ...
    def has_item(self, uri): ...
    def load_from_data(self, data): ...
    def load_from_data_dirs(self, file): ...
    def load_from_file(self, filename): ...
    def move_item(self, old_uri, new_uri: Incomplete | None = ...): ...
    def remove_application(self, uri, name): ...
    def remove_group(self, uri, group): ...
    def remove_item(self, uri): ...
    def set_added(self, uri, added) -> None: ...
    def set_added_date_time(self, uri, added) -> None: ...
    def set_application_info(self, uri, name, exec, count, stamp: Incomplete | None = ...): ...
    def set_app_info(self, uri, name, exec, count, stamp): ...
    def set_description(self, uri, description) -> None: ...
    def set_groups(self, uri, groups: Incomplete | None = ...) -> None: ...
    def set_icon(self, uri, href, mime_type) -> None: ...
    def set_is_private(self, uri, is_private) -> None: ...
    def set_mime_type(self, uri, mime_type) -> None: ...
    def set_modified(self, uri, modified) -> None: ...
    def set_modified_date_time(self, uri, modified) -> None: ...
    def set_title(self, uri, title) -> None: ...
    def set_visited(self, uri, visited) -> None: ...
    def set_visited_date_time(self, uri, visited) -> None: ...
    def to_data(self): ...
    def to_file(self, filename): ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class BookmarkFileError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    APP_NOT_REGISTERED: int
    FILE_NOT_FOUND: int
    INVALID_URI: int
    INVALID_VALUE: int
    READ: int
    UNKNOWN_ENCODING: int
    URI_NOT_FOUND: int
    WRITE: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class ByteArray(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def free(self, array, free_segment): ...
    def free_to_bytes(self, array) -> None: ...
    def new(self): ...
    def new_take(self, data): ...
    def steal(self, array): ...
    def unref(self, array) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    data: Incomplete
    len: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Bytes(__gi.Boxed):
    def compare(self, bytes2): ...
    def copy(self, *args, **kwargs) -> None: ...
    def equal(self, bytes2): ...
    def get_data(self): ...
    def get_region(self, element_size, offset, n_elements) -> None: ...
    def get_size(self): ...
    def hash(self): ...
    def new(self, data: Incomplete | None = ...) -> None: ...
    def new_from_bytes(self, offset, length) -> None: ...
    def new_take(self, data: Incomplete | None = ...) -> None: ...
    def ref(self) -> None: ...
    def unref(self) -> None: ...
    def unref_to_array(self): ...
    def unref_to_data(self): ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Checksum(__gi.Boxed):
    def copy(self) -> None: ...
    def free(self) -> None: ...
    def get_string(self): ...
    def new(self, checksum_type) -> None: ...
    def reset(self) -> None: ...
    def type_get_length(self, checksum_type): ...
    def update(self, data) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class ChecksumType(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    MD5: int
    SHA1: int
    SHA256: int
    SHA384: int
    SHA512: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Cond(__gi.Struct):
    def broadcast(self) -> None: ...
    def clear(self) -> None: ...
    def init(self) -> None: ...
    def signal(self) -> None: ...
    def wait(self, mutex) -> None: ...
    def wait_until(self, mutex, end_time): ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    i: Incomplete
    p: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class ConvertError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BAD_URI: int
    EMBEDDED_NUL: int
    FAILED: int
    ILLEGAL_SEQUENCE: int
    NOT_ABSOLUTE_PATH: int
    NO_CONVERSION: int
    NO_MEMORY: int
    PARTIAL_INPUT: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Data(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Date(__gi.Boxed):
    def add_days(self, n_days) -> None: ...
    def add_months(self, n_months) -> None: ...
    def add_years(self, n_years) -> None: ...
    def clamp(self, min_date, max_date) -> None: ...
    def clear(self, n_dates) -> None: ...
    def compare(self, rhs): ...
    def copy(self) -> None: ...
    def days_between(self, date2): ...
    def free(self) -> None: ...
    def get_day(self): ...
    def get_days_in_month(self, month, year): ...
    def get_day_of_year(self): ...
    def get_iso8601_week_of_year(self): ...
    def get_julian(self): ...
    def get_monday_weeks_in_year(self, year): ...
    def get_monday_week_of_year(self): ...
    def get_month(self) -> None: ...
    def get_sunday_weeks_in_year(self, year): ...
    def get_sunday_week_of_year(self): ...
    def get_weekday(self) -> None: ...
    def get_year(self): ...
    def is_first_of_month(self): ...
    def is_last_of_month(self): ...
    def is_leap_year(self, year): ...
    def new(self) -> None: ...
    def new_dmy(self, day, month, year) -> None: ...
    def new_julian(self, julian_day) -> None: ...
    def order(self, date2) -> None: ...
    def set_day(self, day) -> None: ...
    def set_dmy(self, day, month, y) -> None: ...
    def set_julian(self, julian_date) -> None: ...
    def set_month(self, month) -> None: ...
    def set_parse(self, p_str) -> None: ...
    def set_time(self, time_) -> None: ...
    def set_time_t(self, timet) -> None: ...
    def set_time_val(self, timeval) -> None: ...
    def set_year(self, year) -> None: ...
    def strftime(self, s, slen, format, date): ...
    def subtract_days(self, n_days) -> None: ...
    def subtract_months(self, n_months) -> None: ...
    def subtract_years(self, n_years) -> None: ...
    def to_struct_tm(self, tm) -> None: ...
    def valid(self): ...
    def valid_day(self, day): ...
    def valid_dmy(self, day, month, year): ...
    def valid_julian(self, julian_date): ...
    def valid_month(self, month): ...
    def valid_weekday(self, weekday): ...
    def valid_year(self, year): ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    day: Incomplete
    dmy: Incomplete
    julian: Incomplete
    julian_days: Incomplete
    month: Incomplete
    year: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class DateDMY(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    DAY: int
    MONTH: int
    YEAR: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class DateMonth(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    APRIL: int
    AUGUST: int
    BAD_MONTH: int
    DECEMBER: int
    FEBRUARY: int
    JANUARY: int
    JULY: int
    JUNE: int
    MARCH: int
    MAY: int
    NOVEMBER: int
    OCTOBER: int
    SEPTEMBER: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class DateTime(__gi.Boxed):
    def add(self, timespan) -> None: ...
    def add_days(self, days) -> None: ...
    def add_full(self, years, months, days, hours, minutes, seconds) -> None: ...
    def add_hours(self, hours) -> None: ...
    def add_minutes(self, minutes) -> None: ...
    def add_months(self, months) -> None: ...
    def add_seconds(self, seconds) -> None: ...
    def add_weeks(self, weeks) -> None: ...
    def add_years(self, years) -> None: ...
    def compare(self, dt2): ...
    def copy(self, *args, **kwargs) -> None: ...
    def difference(self, begin): ...
    def equal(self, dt2): ...
    def format(self, format): ...
    def format_iso8601(self): ...
    def get_day_of_month(self): ...
    def get_day_of_week(self): ...
    def get_day_of_year(self): ...
    def get_hour(self): ...
    def get_microsecond(self): ...
    def get_minute(self): ...
    def get_month(self): ...
    def get_second(self): ...
    def get_seconds(self): ...
    def get_timezone(self) -> None: ...
    def get_timezone_abbreviation(self): ...
    def get_utc_offset(self): ...
    def get_week_numbering_year(self): ...
    def get_week_of_year(self): ...
    def get_year(self): ...
    def get_ymd(self) -> None: ...
    def hash(self): ...
    def is_daylight_savings(self): ...
    def new(self, tz, year, month, day, hour, minute, seconds) -> None: ...
    def new_from_iso8601(self, text, default_tz: Incomplete | None = ...) -> None: ...
    def new_from_timeval_local(self, tv) -> None: ...
    def new_from_timeval_utc(self, tv) -> None: ...
    def new_from_unix_local(self, t) -> None: ...
    def new_from_unix_utc(self, t) -> None: ...
    def new_local(self, year, month, day, hour, minute, seconds) -> None: ...
    def new_now(self, tz) -> None: ...
    def new_now_local(self) -> None: ...
    def new_now_utc(self) -> None: ...
    def new_utc(self, year, month, day, hour, minute, seconds) -> None: ...
    def ref(self) -> None: ...
    def to_local(self) -> None: ...
    def to_timeval(self, tv): ...
    def to_timezone(self, tz) -> None: ...
    def to_unix(self): ...
    def to_utc(self) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class DateWeekday(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BAD_WEEKDAY: int
    FRIDAY: int
    MONDAY: int
    SATURDAY: int
    SUNDAY: int
    THURSDAY: int
    TUESDAY: int
    WEDNESDAY: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class DebugKey(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    key: Incomplete
    value: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Dir(__gi.Struct):
    def close(self) -> None: ...
    def make_tmp(self, tmpl: Incomplete | None = ...): ...
    def read_name(self): ...
    def rewind(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class DoubleIEEE754(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    v_double: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class GError(RuntimeError):
    def copy(self) -> None: ...
    def matches(self, domain, code) -> None: ...
    def new_literal(domain, message, code) -> None: ...
    def with_traceback(self, tb) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, message, domain, code: int = ...) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    args: Incomplete
    __cause__: Incomplete
    __context__: Incomplete
    __suppress_context__: Incomplete
    __traceback__: Incomplete
    __weakref__: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
Error = GError

class ErrorType(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    DIGIT_RADIX: int
    FLOAT_MALFORMED: int
    FLOAT_RADIX: int
    NON_DIGIT_IN_CONST: int
    UNEXP_EOF: int
    UNEXP_EOF_IN_COMMENT: int
    UNEXP_EOF_IN_STRING: int
    UNKNOWN: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class FileError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ACCES: int
    AGAIN: int
    BADF: int
    EXIST: int
    FAILED: int
    FAULT: int
    INTR: int
    INVAL: int
    IO: int
    ISDIR: int
    LOOP: int
    MFILE: int
    NAMETOOLONG: int
    NFILE: int
    NODEV: int
    NOENT: int
    NOMEM: int
    NOSPC: int
    NOSYS: int
    NOTDIR: int
    NXIO: int
    PERM: int
    PIPE: int
    ROFS: int
    TXTBSY: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class FileSetContentsFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    CONSISTENT: int
    DURABLE: int
    NONE: int
    ONLY_EXISTING: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class FileTest(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    EXISTS: int
    IS_DIR: int
    IS_EXECUTABLE: int
    IS_REGULAR: int
    IS_SYMLINK: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class FloatIEEE754(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    v_float: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class FormatSizeFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    BITS: int
    DEFAULT: int
    IEC_UNITS: int
    LONG_FORMAT: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class HashTable(__gi.Boxed):
    def add(self, hash_table, key: Incomplete | None = ...): ...
    def contains(self, hash_table, key: Incomplete | None = ...): ...
    def copy(self, *args, **kwargs) -> None: ...
    def destroy(self, hash_table) -> None: ...
    def insert(self, hash_table, key, value: Incomplete | None = ...): ...
    def lookup(self, hash_table, key: Incomplete | None = ...) -> None: ...
    def lookup_extended(self, hash_table, lookup_key: Incomplete | None = ...): ...
    def new_similar(self, other_hash_table): ...
    def remove(self, hash_table, key: Incomplete | None = ...): ...
    def remove_all(self, hash_table) -> None: ...
    def replace(self, hash_table, key, value: Incomplete | None = ...): ...
    def size(self, hash_table): ...
    def steal(self, hash_table, key: Incomplete | None = ...): ...
    def steal_all(self, hash_table) -> None: ...
    def steal_extended(self, hash_table, lookup_key: Incomplete | None = ...): ...
    def unref(self, hash_table) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class HashTableIter(__gi.Struct):
    def init(self, hash_table) -> None: ...
    def next(self): ...
    def remove(self) -> None: ...
    def replace(self, value: Incomplete | None = ...) -> None: ...
    def steal(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    dummy1: Incomplete
    dummy2: Incomplete
    dummy3: Incomplete
    dummy4: Incomplete
    dummy5: Incomplete
    dummy6: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Hmac(__gi.Struct):
    def get_digest(self, buffer) -> None: ...
    def get_string(self): ...
    def unref(self) -> None: ...
    def update(self, data) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Hook(__gi.Struct):
    def compare_ids(self, sibling): ...
    def destroy(self, hook_list, hook_id): ...
    def destroy_link(self, hook_list, hook) -> None: ...
    def free(self, hook_list, hook) -> None: ...
    def insert_before(self, hook_list, sibling, hook) -> None: ...
    def prepend(self, hook_list, hook) -> None: ...
    def unref(self, hook_list, hook) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    data: Incomplete
    flags: Incomplete
    func: Incomplete
    hook_id: Incomplete
    next: Incomplete
    prev: Incomplete
    ref_count: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class HookFlagMask(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ACTIVE: int
    IN_CALL: int
    MASK: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class HookList(__gi.Struct):
    def clear(self) -> None: ...
    def init(self, hook_size) -> None: ...
    def invoke(self, may_recurse) -> None: ...
    def invoke_check(self, may_recurse) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    dummy: Incomplete
    dummy3: Incomplete
    finalize_hook: Incomplete
    hooks: Incomplete
    hook_size: Incomplete
    is_setup: Incomplete
    seq_id: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Source(Source):
    def add_child_source(self, child_source) -> None: ...
    def add_poll(self, fd) -> None: ...
    def attach(self, context: Incomplete | None = ...): ...
    def copy(self, *args, **kwargs) -> None: ...
    def destroy(self) -> None: ...
    def get_can_recurse(self): ...
    def get_context(self) -> None: ...
    def get_current_time(*args, **kwargs) -> None: ...
    def get_id(self): ...
    def get_name(self): ...
    def get_priority(self): ...
    def get_ready_time(self): ...
    def get_time(self): ...
    def is_destroyed(self): ...
    def new(self, source_funcs, struct_size) -> None: ...
    def ref(self) -> None: ...
    def remove(self, tag): ...
    def remove_by_funcs_user_data(self, funcs, user_data: Incomplete | None = ...): ...
    def remove_by_user_data(self, user_data: Incomplete | None = ...): ...
    def remove_child_source(self, child_source) -> None: ...
    def remove_poll(self, fd) -> None: ...
    def set_callback(self, fn, user_data: Incomplete | None = ...) -> None: ...
    def set_callback_indirect(self, callback_data, callback_funcs) -> None: ...
    def set_can_recurse(self, can_recurse) -> None: ...
    def set_funcs(self, funcs) -> None: ...
    def set_name(self, name) -> None: ...
    def set_name_by_id(self, tag, name) -> None: ...
    def set_priority(self, priority) -> None: ...
    def set_ready_time(self, ready_time) -> None: ...
    def set_static_name(self, name) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __del__(self) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, *args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    callback_data: Incomplete
    callback_funcs: Incomplete
    can_recurse: Incomplete
    context: Incomplete
    flags: Incomplete
    name: Incomplete
    next: Incomplete
    poll_fds: Incomplete
    prev: Incomplete
    priority: Incomplete
    priv: Incomplete
    ref_count: Incomplete
    source_funcs: Incomplete
    source_id: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Idle(__gi_overrides_GLib.Source):
    def add_child_source(self, child_source) -> None: ...
    def add_poll(self, fd) -> None: ...
    def attach(self, context: Incomplete | None = ...): ...
    def copy(self, *args, **kwargs) -> None: ...
    def destroy(self) -> None: ...
    def get_can_recurse(self): ...
    def get_context(self) -> None: ...
    def get_current_time(*args, **kwargs) -> None: ...
    def get_id(self): ...
    def get_name(self): ...
    def get_priority(self): ...
    def get_ready_time(self): ...
    def get_time(self): ...
    def is_destroyed(self): ...
    def new(self, source_funcs, struct_size) -> None: ...
    def ref(self) -> None: ...
    def remove(self, tag): ...
    def remove_by_funcs_user_data(self, funcs, user_data: Incomplete | None = ...): ...
    def remove_by_user_data(self, user_data: Incomplete | None = ...): ...
    def remove_child_source(self, child_source) -> None: ...
    def remove_poll(self, fd) -> None: ...
    def set_callback(self, fn, user_data: Incomplete | None = ...) -> None: ...
    def set_callback_indirect(self, callback_data, callback_funcs) -> None: ...
    def set_can_recurse(self, can_recurse) -> None: ...
    def set_funcs(self, funcs) -> None: ...
    def set_name(self, name) -> None: ...
    def set_name_by_id(self, tag, name) -> None: ...
    def set_priority(self, priority) -> None: ...
    def set_ready_time(self, ready_time) -> None: ...
    def set_static_name(self, name) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __del__(self) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, priority: int = ...) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, priority: int = ...) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    callback_data: Incomplete
    callback_funcs: Incomplete
    can_recurse: Incomplete
    context: Incomplete
    flags: Incomplete
    name: Incomplete
    next: Incomplete
    poll_fds: Incomplete
    prev: Incomplete
    priority: Incomplete
    priv: Incomplete
    ref_count: Incomplete
    source_funcs: Incomplete
    source_id: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class IOChannel(IOChannel):
    def add_watch(*args, **kwargs) -> None: ...
    def close(self) -> None: ...
    def copy(self, *args, **kwargs) -> None: ...
    def error_from_errno(self, en) -> None: ...
    def error_quark(self): ...
    def flush(self) -> None: ...
    def get_buffered(self): ...
    def get_buffer_condition(self) -> None: ...
    def get_buffer_size(self): ...
    def get_close_on_unref(self): ...
    def get_encoding(self): ...
    def get_flags(self) -> None: ...
    def get_line_term(self, length): ...
    def init(self) -> None: ...
    def new_file(self, filename, mode) -> None: ...
    def next(self) -> None: ...
    def read(self, max_count: int = ...) -> None: ...
    def readline(self, size_hint: int = ...) -> None: ...
    def readlines(self, size_hint: int = ...) -> None: ...
    def read_chars(self) -> None: ...
    def read_line(self) -> None: ...
    def read_line_string(self, buffer, terminator_pos: Incomplete | None = ...) -> None: ...
    def read_to_end(self) -> None: ...
    def read_unichar(self) -> None: ...
    def ref(self) -> None: ...
    def seek(self, offset, whence: int = ...) -> None: ...
    def seek_position(self, offset, type) -> None: ...
    def set_buffered(self, buffered) -> None: ...
    def set_buffer_size(self, size) -> None: ...
    def set_close_on_unref(self, do_close) -> None: ...
    def set_encoding(self, encoding: Incomplete | None = ...) -> None: ...
    def set_flags(self, flags) -> None: ...
    def set_line_term(self, line_term, length) -> None: ...
    def shutdown(self, flush) -> None: ...
    def unix_get_fd(self): ...
    def unix_new(self, fd) -> None: ...
    def unref(self) -> None: ...
    def win32_get_fd(self): ...
    def win32_make_pollfd(self, condition, fd) -> None: ...
    def win32_new_fd(self, fd) -> None: ...
    def win32_new_messages(self, hwnd) -> None: ...
    def win32_new_socket(self, socket) -> None: ...
    def win32_new_stream_socket(self, socket) -> None: ...
    def win32_poll(self, fds, n_fds, timeout_): ...
    def win32_set_debug(self, flag) -> None: ...
    def write(self, buf, buflen: int = ...) -> None: ...
    def writelines(self, lines) -> None: ...
    def write_chars(self, buf, count) -> None: ...
    def write_unichar(self, thechar) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __iter__(self): ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, filedes, filename, mode, hwnd: Incomplete | None = ...) -> None: ...
    def __next__(self) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    buf_size: Incomplete
    close_on_unref: Incomplete
    do_encode: Incomplete
    encoded_read_buf: Incomplete
    encoding: Incomplete
    funcs: Incomplete
    is_readable: Incomplete
    is_seekable: Incomplete
    is_writeable: Incomplete
    line_term: Incomplete
    line_term_len: Incomplete
    partial_write_buf: Incomplete
    read_buf: Incomplete
    read_cd: Incomplete
    ref_count: Incomplete
    reserved1: Incomplete
    reserved2: Incomplete
    use_buffer: Incomplete
    write_buf: Incomplete
    write_cd: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class IOChannelError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    FAILED: int
    FBIG: int
    INVAL: int
    IO: int
    ISDIR: int
    NOSPC: int
    NXIO: int
    OVERFLOW: int
    PIPE: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class IOCondition(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ERR: int
    HUP: int
    IN: int
    NVAL: int
    OUT: int
    PRI: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class IOError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    AGAIN: int
    INVAL: int
    NONE: int
    UNKNOWN: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class IOFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    APPEND: int
    GET_MASK: int
    IS_READABLE: int
    IS_SEEKABLE: int
    IS_WRITABLE: int
    IS_WRITEABLE: int
    MASK: int
    NONBLOCK: int
    SET_MASK: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class IOFuncs(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    io_close: Incomplete
    io_create_watch: Incomplete
    io_free: Incomplete
    io_get_flags: Incomplete
    io_read: Incomplete
    io_seek: Incomplete
    io_set_flags: Incomplete
    io_write: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class IOStatus(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    AGAIN: int
    EOF: int
    ERROR: int
    NORMAL: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class KeyFile(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def error_quark(self): ...
    def get_boolean(self, group_name, key): ...
    def get_boolean_list(self, group_name, key): ...
    def get_comment(self, group_name, key: Incomplete | None = ...): ...
    def get_double(self, group_name, key): ...
    def get_double_list(self, group_name, key): ...
    def get_groups(self): ...
    def get_int64(self, group_name, key): ...
    def get_integer(self, group_name, key): ...
    def get_integer_list(self, group_name, key): ...
    def get_keys(self, group_name): ...
    def get_locale_for_key(self, group_name, key, locale: Incomplete | None = ...): ...
    def get_locale_string(self, group_name, key, locale: Incomplete | None = ...): ...
    def get_locale_string_list(self, group_name, key, locale: Incomplete | None = ...): ...
    def get_start_group(self): ...
    def get_string(self, group_name, key): ...
    def get_string_list(self, group_name, key): ...
    def get_uint64(self, group_name, key): ...
    def get_value(self, group_name, key): ...
    def has_group(self, group_name): ...
    def load_from_bytes(self, bytes, flags): ...
    def load_from_data(self, data, length, flags): ...
    def load_from_data_dirs(self, file, flags): ...
    def load_from_dirs(self, file, search_dirs, flags): ...
    def load_from_file(self, file, flags): ...
    def new(self) -> None: ...
    def remove_comment(self, group_name, key: Incomplete | None = ...): ...
    def remove_group(self, group_name): ...
    def remove_key(self, group_name, key): ...
    def save_to_file(self, filename): ...
    def set_boolean(self, group_name, key, value) -> None: ...
    def set_boolean_list(self, group_name, key, p_list) -> None: ...
    def set_comment(self, group_name, key, comment): ...
    def set_double(self, group_name, key, value) -> None: ...
    def set_double_list(self, group_name, key, p_list) -> None: ...
    def set_int64(self, group_name, key, value) -> None: ...
    def set_integer(self, group_name, key, value) -> None: ...
    def set_integer_list(self, group_name, key, p_list) -> None: ...
    def set_list_separator(self, separator) -> None: ...
    def set_locale_string(self, group_name, key, locale, string) -> None: ...
    def set_locale_string_list(self, group_name, key, locale, p_list) -> None: ...
    def set_string(self, group_name, key, string) -> None: ...
    def set_string_list(self, group_name, key, p_list) -> None: ...
    def set_uint64(self, group_name, key, value) -> None: ...
    def set_value(self, group_name, key, value) -> None: ...
    def to_data(self): ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class KeyFileError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    GROUP_NOT_FOUND: int
    INVALID_VALUE: int
    KEY_NOT_FOUND: int
    NOT_FOUND: int
    PARSE: int
    UNKNOWN_ENCODING: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class KeyFileFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    KEEP_COMMENTS: int
    KEEP_TRANSLATIONS: int
    NONE: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class List(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    data: Incomplete
    next: Incomplete
    prev: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class LogField(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    key: Incomplete
    length: Incomplete
    value: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class LogLevelFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    FLAG_FATAL: int
    FLAG_RECURSION: int
    LEVEL_CRITICAL: int
    LEVEL_DEBUG: int
    LEVEL_ERROR: int
    LEVEL_INFO: int
    LEVEL_MASK: int
    LEVEL_MESSAGE: int
    LEVEL_WARNING: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class LogWriterOutput(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    HANDLED: int
    UNHANDLED: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class MainContext(MainContext):
    def acquire(self): ...
    def add_poll(self, fd, priority) -> None: ...
    def check(self, max_priority, fds): ...
    def copy(self, *args, **kwargs) -> None: ...
    def default(self) -> None: ...
    def dispatch(self) -> None: ...
    def find_source_by_funcs_user_data(self, funcs, user_data: Incomplete | None = ...) -> None: ...
    def find_source_by_id(self, source_id) -> None: ...
    def find_source_by_user_data(self, user_data: Incomplete | None = ...) -> None: ...
    def get_thread_default(self) -> None: ...
    def invoke_full(self, priority, function, data: Incomplete | None = ...) -> None: ...
    def is_owner(self): ...
    def iteration(self, may_block: bool = ...) -> None: ...
    def new(self) -> None: ...
    def new_with_flags(self, flags) -> None: ...
    def pending(self): ...
    def pop_thread_default(self) -> None: ...
    def prepare(self): ...
    def push_thread_default(self) -> None: ...
    def query(self, max_priority): ...
    def ref(self) -> None: ...
    def ref_thread_default(self) -> None: ...
    def release(self) -> None: ...
    def remove_poll(self, fd) -> None: ...
    def unref(self) -> None: ...
    def wait(self, cond, mutex): ...
    def wakeup(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class MainContextFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    NONE: int
    OWNERLESS_POLLING: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class MainLoop(MainLoop):
    def copy(self, *args, **kwargs) -> None: ...
    def get_context(self) -> None: ...
    def is_running(self): ...
    def new(self, context, is_running) -> None: ...
    def quit(self) -> None: ...
    def ref(self) -> None: ...
    def run(self) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, context: Incomplete | None = ...) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, context: Incomplete | None = ...) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class MappedFile(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def free(self) -> None: ...
    def get_bytes(self) -> None: ...
    def get_contents(self): ...
    def get_length(self): ...
    def new(self, filename, writable) -> None: ...
    def new_from_fd(self, fd, writable) -> None: ...
    def ref(self) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class MarkupCollectType(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    BOOLEAN: int
    INVALID: int
    OPTIONAL: int
    STRDUP: int
    STRING: int
    TRISTATE: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class MarkupError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BAD_UTF8: int
    EMPTY: int
    INVALID_CONTENT: int
    MISSING_ATTRIBUTE: int
    PARSE: int
    UNKNOWN_ATTRIBUTE: int
    UNKNOWN_ELEMENT: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class MarkupParseContext(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def end_parse(self): ...
    def free(self) -> None: ...
    def get_element(self): ...
    def get_position(self) -> None: ...
    def get_user_data(self) -> None: ...
    def new(self, parser, flags, user_data, user_data_dnotify) -> None: ...
    def parse(self, text, text_len): ...
    def pop(self) -> None: ...
    def push(self, parser, user_data: Incomplete | None = ...) -> None: ...
    def ref(self) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class MarkupParseFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    DO_NOT_USE_THIS_UNSUPPORTED_FLAG: int
    IGNORE_QUALIFIED: int
    PREFIX_ERROR_POSITION: int
    TREAT_CDATA_AS_TEXT: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class MarkupParser(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    end_element: Incomplete
    error: Incomplete
    passthrough: Incomplete
    start_element: Incomplete
    text: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class MatchInfo(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def expand_references(self, string_to_expand): ...
    def fetch(self, match_num): ...
    def fetch_all(self): ...
    def fetch_named(self, name): ...
    def fetch_named_pos(self, name): ...
    def fetch_pos(self, match_num): ...
    def free(self) -> None: ...
    def get_match_count(self): ...
    def get_regex(self) -> None: ...
    def get_string(self): ...
    def is_partial_match(self): ...
    def matches(self): ...
    def next(self): ...
    def ref(self) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class MemVTable(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    calloc: Incomplete
    free: Incomplete
    malloc: Incomplete
    realloc: Incomplete
    try_malloc: Incomplete
    try_realloc: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Mutex(__gi.Struct):
    def clear(self) -> None: ...
    def init(self) -> None: ...
    def lock(self) -> None: ...
    def trylock(self): ...
    def unlock(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    i: Incomplete
    p: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Node(__gi.Struct):
    def child_index(self, data: Incomplete | None = ...): ...
    def child_position(self, child): ...
    def depth(self): ...
    def destroy(self) -> None: ...
    def is_ancestor(self, descendant): ...
    def max_height(self): ...
    def n_children(self): ...
    def n_nodes(self, flags): ...
    def reverse_children(self) -> None: ...
    def unlink(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    children: Incomplete
    data: Incomplete
    next: Incomplete
    parent: Incomplete
    prev: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class NormalizeMode(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ALL: int
    ALL_COMPOSE: int
    DEFAULT: int
    DEFAULT_COMPOSE: int
    NFC: int
    NFD: int
    NFKC: int
    NFKD: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class NumberParserError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    INVALID: int
    OUT_OF_BOUNDS: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Once(__gi.Struct):
    def init_enter(self, location): ...
    def init_leave(self, location, result) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    retval: Incomplete
    status: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class OnceStatus(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    NOTCALLED: int
    PROGRESS: int
    READY: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class OptionArg(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CALLBACK: int
    DOUBLE: int
    FILENAME: int
    FILENAME_ARRAY: int
    INT: int
    INT64: int
    NONE: int
    STRING: int
    STRING_ARRAY: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class OptionEntry(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    arg: Incomplete
    arg_data: Incomplete
    arg_description: Incomplete
    description: Incomplete
    flags: Incomplete
    long_name: Incomplete
    short_name: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class OptionError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BAD_VALUE: int
    FAILED: int
    UNKNOWN_OPTION: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class OptionFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    FILENAME: int
    HIDDEN: int
    IN_MAIN: int
    NOALIAS: int
    NONE: int
    NO_ARG: int
    OPTIONAL_ARG: int
    REVERSE: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class PatternSpec(__gi.Boxed):
    def copy(self) -> None: ...
    def equal(self, pspec2): ...
    def free(self) -> None: ...
    def match(self, string_length, string, string_reversed: Incomplete | None = ...): ...
    def match_string(self, string): ...
    def new(self, pattern) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class PollFD(PollFD):
    def copy(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, fd, events) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, fd, events) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    events: Incomplete
    fd: Incomplete
    revents: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Private(__gi.Struct):
    def get(self) -> None: ...
    def replace(self, value: Incomplete | None = ...) -> None: ...
    def set(self, value: Incomplete | None = ...) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    future: Incomplete
    notify: Incomplete
    p: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class PtrArray(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    len: Incomplete
    pdata: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Queue(__gi.Struct):
    def clear(self) -> None: ...
    def clear_full(self, free_func: Incomplete | None = ...) -> None: ...
    def free(self) -> None: ...
    def free_full(self, free_func) -> None: ...
    def get_length(self): ...
    def index(self, data: Incomplete | None = ...): ...
    def init(self) -> None: ...
    def is_empty(self): ...
    def peek_head(self) -> None: ...
    def peek_nth(self, n) -> None: ...
    def peek_tail(self) -> None: ...
    def pop_head(self) -> None: ...
    def pop_nth(self, n) -> None: ...
    def pop_tail(self) -> None: ...
    def push_head(self, data: Incomplete | None = ...) -> None: ...
    def push_nth(self, data, n) -> None: ...
    def push_tail(self, data: Incomplete | None = ...) -> None: ...
    def remove(self, data: Incomplete | None = ...): ...
    def remove_all(self, data: Incomplete | None = ...): ...
    def reverse(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    head: Incomplete
    length: Incomplete
    tail: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Rand(__gi.Struct):
    def double(self): ...
    def double_range(self, begin, end): ...
    def free(self) -> None: ...
    def int(self): ...
    def int_range(self, begin, end): ...
    def set_seed(self, seed) -> None: ...
    def set_seed_array(self, seed, seed_length) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class RecMutex(__gi.Struct):
    def clear(self) -> None: ...
    def init(self) -> None: ...
    def lock(self) -> None: ...
    def trylock(self): ...
    def unlock(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    i: Incomplete
    p: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Regex(__gi.Boxed):
    def check_replacement(self, replacement): ...
    def copy(self, *args, **kwargs) -> None: ...
    def error_quark(self): ...
    def escape_nul(self, string, length): ...
    def escape_string(self, string): ...
    def get_capture_count(self): ...
    def get_compile_flags(self) -> None: ...
    def get_has_cr_or_lf(self): ...
    def get_match_flags(self) -> None: ...
    def get_max_backref(self): ...
    def get_max_lookbehind(self): ...
    def get_pattern(self): ...
    def get_string_number(self, name): ...
    def match(self, string, match_options): ...
    def match_all(self, string, match_options): ...
    def match_all_full(self, string, start_position, match_options): ...
    def match_full(self, string, start_position, match_options): ...
    def match_simple(self, pattern, string, compile_options, match_options): ...
    def new(self, pattern, compile_options, match_options) -> None: ...
    def ref(self) -> None: ...
    def replace(self, string, start_position, replacement, match_options): ...
    def replace_literal(self, string, start_position, replacement, match_options): ...
    def split(self, string, match_options): ...
    def split_full(self, string, start_position, match_options, max_tokens): ...
    def split_simple(self, pattern, string, compile_options, match_options): ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class RegexCompileFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ANCHORED: int
    BSR_ANYCRLF: int
    CASELESS: int
    DOLLAR_ENDONLY: int
    DOTALL: int
    DUPNAMES: int
    EXTENDED: int
    FIRSTLINE: int
    JAVASCRIPT_COMPAT: int
    MULTILINE: int
    NEWLINE_ANYCRLF: int
    NEWLINE_CR: int
    NEWLINE_CRLF: int
    NEWLINE_LF: int
    NO_AUTO_CAPTURE: int
    OPTIMIZE: int
    RAW: int
    UNGREEDY: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class RegexError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ASSERTION_EXPECTED: int
    BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN: int
    BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED: int
    CHARACTER_VALUE_TOO_LARGE: int
    COMPILE: int
    DEFINE_REPETION: int
    DUPLICATE_SUBPATTERN_NAME: int
    EXPRESSION_TOO_LARGE: int
    EXTRA_SUBPATTERN_NAME: int
    HEX_CODE_TOO_LARGE: int
    INCONSISTENT_NEWLINE_OPTIONS: int
    INEXISTENT_SUBPATTERN_REFERENCE: int
    INFINITE_LOOP: int
    INTERNAL: int
    INVALID_CONDITION: int
    INVALID_CONTROL_CHAR: int
    INVALID_DATA_CHARACTER: int
    INVALID_ESCAPE_IN_CHARACTER_CLASS: int
    INVALID_OCTAL_VALUE: int
    INVALID_RELATIVE_REFERENCE: int
    MALFORMED_CONDITION: int
    MALFORMED_PROPERTY: int
    MATCH: int
    MEMORY_ERROR: int
    MISSING_BACK_REFERENCE: int
    MISSING_CONTROL_CHAR: int
    MISSING_DIGIT: int
    MISSING_NAME: int
    MISSING_SUBPATTERN_NAME: int
    MISSING_SUBPATTERN_NAME_TERMINATOR: int
    NAME_TOO_LONG: int
    NOTHING_TO_REPEAT: int
    NOT_SUPPORTED_IN_CLASS: int
    NUMBER_TOO_BIG: int
    OPTIMIZE: int
    POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED: int
    POSIX_NAMED_CLASS_OUTSIDE_CLASS: int
    QUANTIFIERS_OUT_OF_ORDER: int
    QUANTIFIER_TOO_BIG: int
    RANGE_OUT_OF_ORDER: int
    REPLACE: int
    SINGLE_BYTE_MATCH_IN_LOOKBEHIND: int
    STRAY_BACKSLASH: int
    SUBPATTERN_NAME_TOO_LONG: int
    TOO_MANY_BRANCHES_IN_DEFINE: int
    TOO_MANY_CONDITIONAL_BRANCHES: int
    TOO_MANY_FORWARD_REFERENCES: int
    TOO_MANY_SUBPATTERNS: int
    UNKNOWN_BACKTRACKING_CONTROL_VERB: int
    UNKNOWN_POSIX_CLASS_NAME: int
    UNKNOWN_PROPERTY: int
    UNMATCHED_PARENTHESIS: int
    UNRECOGNIZED_CHARACTER: int
    UNRECOGNIZED_ESCAPE: int
    UNTERMINATED_CHARACTER_CLASS: int
    UNTERMINATED_COMMENT: int
    VARIABLE_LENGTH_LOOKBEHIND: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class RegexMatchFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ANCHORED: int
    BSR_ANY: int
    BSR_ANYCRLF: int
    NEWLINE_ANY: int
    NEWLINE_ANYCRLF: int
    NEWLINE_CR: int
    NEWLINE_CRLF: int
    NEWLINE_LF: int
    NOTBOL: int
    NOTEMPTY: int
    NOTEMPTY_ATSTART: int
    NOTEOL: int
    PARTIAL: int
    PARTIAL_HARD: int
    PARTIAL_SOFT: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class RWLock(__gi.Struct):
    def clear(self) -> None: ...
    def init(self) -> None: ...
    def reader_lock(self) -> None: ...
    def reader_trylock(self): ...
    def reader_unlock(self) -> None: ...
    def writer_lock(self) -> None: ...
    def writer_trylock(self): ...
    def writer_unlock(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    i: Incomplete
    p: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Scanner(__gi.Struct):
    def cur_line(self): ...
    def cur_position(self): ...
    def cur_token(self) -> None: ...
    def destroy(self) -> None: ...
    def eof(self): ...
    def get_next_token(self) -> None: ...
    def input_file(self, input_fd) -> None: ...
    def input_text(self, text, text_len) -> None: ...
    def lookup_symbol(self, symbol) -> None: ...
    def peek_next_token(self) -> None: ...
    def scope_add_symbol(self, scope_id, symbol, value: Incomplete | None = ...) -> None: ...
    def scope_lookup_symbol(self, scope_id, symbol) -> None: ...
    def scope_remove_symbol(self, scope_id, symbol) -> None: ...
    def set_scope(self, scope_id): ...
    def sync_file_offset(self) -> None: ...
    def unexp_token(self, expected_token, identifier_spec, symbol_spec, symbol_name, message, is_error) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    buffer: Incomplete
    config: Incomplete
    input_fd: Incomplete
    input_name: Incomplete
    line: Incomplete
    max_parse_errors: Incomplete
    msg_handler: Incomplete
    next_line: Incomplete
    next_position: Incomplete
    next_token: Incomplete
    next_value: Incomplete
    parse_errors: Incomplete
    position: Incomplete
    qdata: Incomplete
    scope_id: Incomplete
    symbol_table: Incomplete
    text: Incomplete
    text_end: Incomplete
    token: Incomplete
    user_data: Incomplete
    value: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class ScannerConfig(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    case_sensitive: Incomplete
    char_2_token: Incomplete
    cpair_comment_single: Incomplete
    cset_identifier_first: Incomplete
    cset_identifier_nth: Incomplete
    cset_skip_characters: Incomplete
    identifier_2_string: Incomplete
    int_2_float: Incomplete
    numbers_2_int: Incomplete
    padding_dummy: Incomplete
    scan_binary: Incomplete
    scan_comment_multi: Incomplete
    scan_float: Incomplete
    scan_hex: Incomplete
    scan_hex_dollar: Incomplete
    scan_identifier: Incomplete
    scan_identifier_1char: Incomplete
    scan_identifier_NULL: Incomplete
    scan_octal: Incomplete
    scan_string_dq: Incomplete
    scan_string_sq: Incomplete
    scan_symbols: Incomplete
    scope_0_fallback: Incomplete
    skip_comment_multi: Incomplete
    skip_comment_single: Incomplete
    store_int64: Incomplete
    symbol_2_token: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class SeekType(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CUR: int
    END: int
    SET: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Sequence(__gi.Struct):
    def append(self, data: Incomplete | None = ...) -> None: ...
    def free(self) -> None: ...
    def get(self, iter) -> None: ...
    def get_begin_iter(self) -> None: ...
    def get_end_iter(self) -> None: ...
    def get_iter_at_pos(self, pos) -> None: ...
    def get_length(self): ...
    def insert_before(self, iter, data: Incomplete | None = ...) -> None: ...
    def is_empty(self): ...
    def move(self, src, dest) -> None: ...
    def move_range(self, dest, begin, end) -> None: ...
    def prepend(self, data: Incomplete | None = ...) -> None: ...
    def range_get_midpoint(self, begin, end) -> None: ...
    def remove(self, iter) -> None: ...
    def remove_range(self, begin, end) -> None: ...
    def set(self, iter, data: Incomplete | None = ...) -> None: ...
    def swap(self, a, b) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class SequenceIter(__gi.Struct):
    def compare(self, b): ...
    def get_position(self): ...
    def get_sequence(self) -> None: ...
    def is_begin(self): ...
    def is_end(self): ...
    def move(self, delta) -> None: ...
    def next(self) -> None: ...
    def prev(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class ShellError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BAD_QUOTING: int
    EMPTY_STRING: int
    FAILED: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class SliceConfig(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ALWAYS_MALLOC: int
    BYPASS_MAGAZINES: int
    CHUNK_SIZES: int
    COLOR_INCREMENT: int
    CONTENTION_COUNTER: int
    WORKING_SET_MSECS: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class SList(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    data: Incomplete
    next: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class SourceCallbackFuncs(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    get: Incomplete
    ref: Incomplete
    unref: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class SourceFuncs(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    check: Incomplete
    closure_callback: Incomplete
    closure_marshal: Incomplete
    dispatch: Incomplete
    finalize: Incomplete
    prepare: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class SourcePrivate(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class SpawnError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    class PyGLibSpawnError(Enum):
        G_SPAWN_ERROR_FORK: int
        G_SPAWN_ERROR_READ: int
        G_SPAWN_ERROR_CHDIR: int
        G_SPAWN_ERROR_ACCES: int
        G_SPAWN_ERROR_PERM: int
        G_SPAWN_ERROR_TOO_BIG: int
        G_SPAWN_ERROR_NOEXEC: int
        G_SPAWN_ERROR_NAMETOOLONG: int
        G_SPAWN_ERROR_NOENT: int
        G_SPAWN_ERROR_NOMEM: int
        G_SPAWN_ERROR_NOTDIR: int
        G_SPAWN_ERROR_LOOP: int
        G_SPAWN_ERROR_TXTBUSY: int
        G_SPAWN_ERROR_IO: int
        G_SPAWN_ERROR_NFILE: int
        G_SPAWN_ERROR_MFILE: int
        G_SPAWN_ERROR_INVAL: int
        G_SPAWN_ERROR_ISDIR: int
        G_SPAWN_ERROR_LIBBAD: int
        G_SPAWN_ERROR_FAILED: int

class SpawnFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    CHILD_INHERITS_STDIN: int
    CLOEXEC_PIPES: int
    DEFAULT: int
    DO_NOT_REAP_CHILD: int
    FILE_AND_ARGV_ZERO: int
    LEAVE_DESCRIPTORS_OPEN: int
    SEARCH_PATH: int
    SEARCH_PATH_FROM_ENVP: int
    STDERR_TO_DEV_NULL: int
    STDOUT_TO_DEV_NULL: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class StatBuf(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class String(__gi.Boxed):
    def append(self, val) -> None: ...
    def append_c(self, c) -> None: ...
    def append_len(self, val, len) -> None: ...
    def append_unichar(self, wc) -> None: ...
    def append_uri_escaped(self, unescaped, reserved_chars_allowed, allow_utf8) -> None: ...
    def ascii_down(self) -> None: ...
    def ascii_up(self) -> None: ...
    def assign(self, rval) -> None: ...
    def copy(self, *args, **kwargs) -> None: ...
    def down(self) -> None: ...
    def equal(self, v2): ...
    def erase(self, pos, len) -> None: ...
    def free(self, free_segment): ...
    def free_to_bytes(self) -> None: ...
    def hash(self): ...
    def insert(self, pos, val) -> None: ...
    def insert_c(self, pos, c) -> None: ...
    def insert_len(self, pos, val, len) -> None: ...
    def insert_unichar(self, pos, wc) -> None: ...
    def new(self, init: Incomplete | None = ...) -> None: ...
    def new_len(self, init, len) -> None: ...
    def overwrite(self, pos, val) -> None: ...
    def overwrite_len(self, pos, val, len) -> None: ...
    def prepend(self, val) -> None: ...
    def prepend_c(self, c) -> None: ...
    def prepend_len(self, val, len) -> None: ...
    def prepend_unichar(self, wc) -> None: ...
    def replace(self, find, replace, limit): ...
    def set_size(self, len) -> None: ...
    def sized_new(self, dfl_size) -> None: ...
    def truncate(self, len) -> None: ...
    def up(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    allocated_len: Incomplete
    len: Incomplete
    str: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class StringChunk(__gi.Struct):
    def clear(self) -> None: ...
    def free(self) -> None: ...
    def insert(self, string): ...
    def insert_const(self, string): ...
    def insert_len(self, string, len): ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class StrvBuilder(__gi.Struct):
    def add(self, value) -> None: ...
    def addv(self, value) -> None: ...
    def end(self): ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TestCase(__gi.Struct):
    def free(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TestConfig(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    test_initialized: Incomplete
    test_perf: Incomplete
    test_quick: Incomplete
    test_quiet: Incomplete
    test_undefined: Incomplete
    test_verbose: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TestFileType(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BUILT: int
    DIST: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TestLogBuffer(__gi.Struct):
    def free(self) -> None: ...
    def push(self, n_bytes, bytes) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    data: Incomplete
    msgs: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TestLogMsg(__gi.Struct):
    def free(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    log_type: Incomplete
    nums: Incomplete
    n_nums: Incomplete
    n_strings: Incomplete
    strings: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TestLogType(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ERROR: int
    LIST_CASE: int
    MAX_RESULT: int
    MESSAGE: int
    MIN_RESULT: int
    NONE: int
    SKIP_CASE: int
    START_BINARY: int
    START_CASE: int
    START_SUITE: int
    STOP_CASE: int
    STOP_SUITE: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TestResult(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    FAILURE: int
    INCOMPLETE: int
    SKIPPED: int
    SUCCESS: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TestSubprocessFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    STDERR: int
    STDIN: int
    STDOUT: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TestSuite(__gi.Struct):
    def add(self, test_case) -> None: ...
    def add_suite(self, nestedsuite) -> None: ...
    def free(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TestTrapFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    INHERIT_STDIN: int
    SILENCE_STDERR: int
    SILENCE_STDOUT: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Thread(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def error_quark(self): ...
    def exit(self, retval: Incomplete | None = ...) -> None: ...
    def join(self) -> None: ...
    def new(self, name, func, data: Incomplete | None = ...) -> None: ...
    def ref(self) -> None: ...
    def self(self) -> None: ...
    def try_new(self, name, func, data: Incomplete | None = ...) -> None: ...
    def unref(self) -> None: ...
    def yield_(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class ThreadError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    THREAD_ERROR_AGAIN: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class ThreadPool(__gi.Struct):
    def free(self, immediate, wait_) -> None: ...
    def get_max_idle_time(self): ...
    def get_max_threads(self): ...
    def get_max_unused_threads(self): ...
    def get_num_threads(self): ...
    def get_num_unused_threads(self): ...
    def move_to_front(self, data: Incomplete | None = ...): ...
    def push(self, data: Incomplete | None = ...): ...
    def set_max_idle_time(self, interval) -> None: ...
    def set_max_threads(self, max_threads): ...
    def set_max_unused_threads(self, max_threads) -> None: ...
    def stop_unused_threads(self) -> None: ...
    def unprocessed(self): ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    exclusive: Incomplete
    func: Incomplete
    user_data: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Timeout(__gi_overrides_GLib.Source):
    def add_child_source(self, child_source) -> None: ...
    def add_poll(self, fd) -> None: ...
    def attach(self, context: Incomplete | None = ...): ...
    def copy(self, *args, **kwargs) -> None: ...
    def destroy(self) -> None: ...
    def get_can_recurse(self): ...
    def get_context(self) -> None: ...
    def get_current_time(*args, **kwargs) -> None: ...
    def get_id(self): ...
    def get_name(self): ...
    def get_priority(self): ...
    def get_ready_time(self): ...
    def get_time(self): ...
    def is_destroyed(self): ...
    def new(self, source_funcs, struct_size) -> None: ...
    def ref(self) -> None: ...
    def remove(self, tag): ...
    def remove_by_funcs_user_data(self, funcs, user_data: Incomplete | None = ...): ...
    def remove_by_user_data(self, user_data: Incomplete | None = ...): ...
    def remove_child_source(self, child_source) -> None: ...
    def remove_poll(self, fd) -> None: ...
    def set_callback(self, fn, user_data: Incomplete | None = ...) -> None: ...
    def set_callback_indirect(self, callback_data, callback_funcs) -> None: ...
    def set_can_recurse(self, can_recurse) -> None: ...
    def set_funcs(self, funcs) -> None: ...
    def set_name(self, name) -> None: ...
    def set_name_by_id(self, tag, name) -> None: ...
    def set_priority(self, priority) -> None: ...
    def set_ready_time(self, ready_time) -> None: ...
    def set_static_name(self, name) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __del__(self) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, interval: int = ..., priority: int = ...) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, interval: int = ..., priority: int = ...) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    callback_data: Incomplete
    callback_funcs: Incomplete
    can_recurse: Incomplete
    context: Incomplete
    flags: Incomplete
    name: Incomplete
    next: Incomplete
    poll_fds: Incomplete
    prev: Incomplete
    priority: Incomplete
    priv: Incomplete
    ref_count: Incomplete
    source_funcs: Incomplete
    source_id: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Timer(__gi.Struct):
    def continue_(self) -> None: ...
    def destroy(self) -> None: ...
    def elapsed(self, microseconds): ...
    def is_active(self): ...
    def reset(self) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TimeType(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    DAYLIGHT: int
    STANDARD: int
    UNIVERSAL: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TimeVal(__gi.Struct):
    def add(self, microseconds) -> None: ...
    def from_iso8601(self, iso_date): ...
    def to_iso8601(self): ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    tv_sec: Incomplete
    tv_usec: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TimeZone(__gi.Boxed):
    def adjust_time(self, type, time_): ...
    def copy(self, *args, **kwargs) -> None: ...
    def find_interval(self, type, time_): ...
    def get_abbreviation(self, interval): ...
    def get_identifier(self): ...
    def get_offset(self, interval): ...
    def is_dst(self, interval): ...
    def new(self, identifier: Incomplete | None = ...) -> None: ...
    def new_identifier(self, identifier: Incomplete | None = ...) -> None: ...
    def new_local(self) -> None: ...
    def new_offset(self, seconds) -> None: ...
    def new_utc(self) -> None: ...
    def ref(self) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TokenType(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BINARY: int
    CHAR: int
    COMMA: int
    COMMENT_MULTI: int
    COMMENT_SINGLE: int
    EOF: int
    EQUAL_SIGN: int
    ERROR: int
    FLOAT: int
    HEX: int
    IDENTIFIER: int
    IDENTIFIER_NULL: int
    INT: int
    LEFT_BRACE: int
    LEFT_CURLY: int
    LEFT_PAREN: int
    NONE: int
    OCTAL: int
    RIGHT_BRACE: int
    RIGHT_CURLY: int
    RIGHT_PAREN: int
    STRING: int
    SYMBOL: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TokenValue(__gi.Struct):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    v_binary: Incomplete
    v_char: Incomplete
    v_comment: Incomplete
    v_error: Incomplete
    v_float: Incomplete
    v_hex: Incomplete
    v_identifier: Incomplete
    v_int: Incomplete
    v_int64: Incomplete
    v_octal: Incomplete
    v_string: Incomplete
    v_symbol: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TrashStack(__gi.Struct):
    def height(self, stack_p): ...
    def peek(self, stack_p) -> None: ...
    def pop(self, stack_p) -> None: ...
    def push(self, stack_p, data_p) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    next: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TraverseFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ALL: int
    LEAFS: int
    LEAVES: int
    MASK: int
    NON_LEAFS: int
    NON_LEAVES: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TraverseType(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    IN_ORDER: int
    LEVEL_ORDER: int
    POST_ORDER: int
    PRE_ORDER: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Tree(__gi.Boxed):
    def copy(self, *args, **kwargs) -> None: ...
    def destroy(self) -> None: ...
    def height(self): ...
    def insert(self, key, value: Incomplete | None = ...) -> None: ...
    def insert_node(self, key, value: Incomplete | None = ...) -> None: ...
    def lookup(self, key: Incomplete | None = ...) -> None: ...
    def lookup_extended(self, lookup_key: Incomplete | None = ...): ...
    def lookup_node(self, key: Incomplete | None = ...) -> None: ...
    def lower_bound(self, key: Incomplete | None = ...) -> None: ...
    def new_full(self, key_compare_func, key_compare_data, key_destroy_func) -> None: ...
    def nnodes(self): ...
    def node_first(self) -> None: ...
    def node_last(self) -> None: ...
    def ref(self) -> None: ...
    def remove(self, key: Incomplete | None = ...): ...
    def remove_all(self) -> None: ...
    def replace(self, key, value: Incomplete | None = ...) -> None: ...
    def replace_node(self, key, value: Incomplete | None = ...) -> None: ...
    def steal(self, key: Incomplete | None = ...): ...
    def unref(self) -> None: ...
    def upper_bound(self, key: Incomplete | None = ...) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class TreeNode(__gi.Struct):
    def key(self) -> None: ...
    def next(self) -> None: ...
    def previous(self) -> None: ...
    def value(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class UnicodeBreakType(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    AFTER: int
    ALPHABETIC: int
    AMBIGUOUS: int
    BEFORE: int
    BEFORE_AND_AFTER: int
    CARRIAGE_RETURN: int
    CLOSE_PARANTHESIS: int
    CLOSE_PARENTHESIS: int
    CLOSE_PUNCTUATION: int
    COMBINING_MARK: int
    COMPLEX_CONTEXT: int
    CONDITIONAL_JAPANESE_STARTER: int
    CONTINGENT: int
    EMOJI_BASE: int
    EMOJI_MODIFIER: int
    EXCLAMATION: int
    HANGUL_LVT_SYLLABLE: int
    HANGUL_LV_SYLLABLE: int
    HANGUL_L_JAMO: int
    HANGUL_T_JAMO: int
    HANGUL_V_JAMO: int
    HEBREW_LETTER: int
    HYPHEN: int
    IDEOGRAPHIC: int
    INFIX_SEPARATOR: int
    INSEPARABLE: int
    LINE_FEED: int
    MANDATORY: int
    NEXT_LINE: int
    NON_BREAKING_GLUE: int
    NON_STARTER: int
    NUMERIC: int
    OPEN_PUNCTUATION: int
    POSTFIX: int
    PREFIX: int
    QUOTATION: int
    REGIONAL_INDICATOR: int
    SPACE: int
    SURROGATE: int
    SYMBOL: int
    UNKNOWN: int
    WORD_JOINER: int
    ZERO_WIDTH_JOINER: int
    ZERO_WIDTH_SPACE: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class UnicodeScript(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ADLAM: int
    AHOM: int
    ANATOLIAN_HIEROGLYPHS: int
    ARABIC: int
    ARMENIAN: int
    AVESTAN: int
    BALINESE: int
    BAMUM: int
    BASSA_VAH: int
    BATAK: int
    BENGALI: int
    BHAIKSUKI: int
    BOPOMOFO: int
    BRAHMI: int
    BRAILLE: int
    BUGINESE: int
    BUHID: int
    CANADIAN_ABORIGINAL: int
    CARIAN: int
    CAUCASIAN_ALBANIAN: int
    CHAKMA: int
    CHAM: int
    CHEROKEE: int
    CHORASMIAN: int
    COMMON: int
    COPTIC: int
    CUNEIFORM: int
    CYPRIOT: int
    CYPRO_MINOAN: int
    CYRILLIC: int
    DESERET: int
    DEVANAGARI: int
    DIVES_AKURU: int
    DOGRA: int
    DUPLOYAN: int
    EGYPTIAN_HIEROGLYPHS: int
    ELBASAN: int
    ELYMAIC: int
    ETHIOPIC: int
    GEORGIAN: int
    GLAGOLITIC: int
    GOTHIC: int
    GRANTHA: int
    GREEK: int
    GUJARATI: int
    GUNJALA_GONDI: int
    GURMUKHI: int
    HAN: int
    HANGUL: int
    HANIFI_ROHINGYA: int
    HANUNOO: int
    HATRAN: int
    HEBREW: int
    HIRAGANA: int
    IMPERIAL_ARAMAIC: int
    INHERITED: int
    INSCRIPTIONAL_PAHLAVI: int
    INSCRIPTIONAL_PARTHIAN: int
    INVALID_CODE: int
    JAVANESE: int
    KAITHI: int
    KANNADA: int
    KATAKANA: int
    KAYAH_LI: int
    KHAROSHTHI: int
    KHITAN_SMALL_SCRIPT: int
    KHMER: int
    KHOJKI: int
    KHUDAWADI: int
    LAO: int
    LATIN: int
    LEPCHA: int
    LIMBU: int
    LINEAR_A: int
    LINEAR_B: int
    LISU: int
    LYCIAN: int
    LYDIAN: int
    MAHAJANI: int
    MAKASAR: int
    MALAYALAM: int
    MANDAIC: int
    MANICHAEAN: int
    MARCHEN: int
    MASARAM_GONDI: int
    MATH: int
    MEDEFAIDRIN: int
    MEETEI_MAYEK: int
    MENDE_KIKAKUI: int
    MEROITIC_CURSIVE: int
    MEROITIC_HIEROGLYPHS: int
    MIAO: int
    MODI: int
    MONGOLIAN: int
    MRO: int
    MULTANI: int
    MYANMAR: int
    NABATAEAN: int
    NANDINAGARI: int
    NEWA: int
    NEW_TAI_LUE: int
    NKO: int
    NUSHU: int
    NYIAKENG_PUACHUE_HMONG: int
    OGHAM: int
    OLD_HUNGARIAN: int
    OLD_ITALIC: int
    OLD_NORTH_ARABIAN: int
    OLD_PERMIC: int
    OLD_PERSIAN: int
    OLD_SOGDIAN: int
    OLD_SOUTH_ARABIAN: int
    OLD_TURKIC: int
    OLD_UYGHUR: int
    OL_CHIKI: int
    ORIYA: int
    OSAGE: int
    OSMANYA: int
    PAHAWH_HMONG: int
    PALMYRENE: int
    PAU_CIN_HAU: int
    PHAGS_PA: int
    PHOENICIAN: int
    PSALTER_PAHLAVI: int
    REJANG: int
    RUNIC: int
    SAMARITAN: int
    SAURASHTRA: int
    SHARADA: int
    SHAVIAN: int
    SIDDHAM: int
    SIGNWRITING: int
    SINHALA: int
    SOGDIAN: int
    SORA_SOMPENG: int
    SOYOMBO: int
    SUNDANESE: int
    SYLOTI_NAGRI: int
    SYRIAC: int
    TAGALOG: int
    TAGBANWA: int
    TAI_LE: int
    TAI_THAM: int
    TAI_VIET: int
    TAKRI: int
    TAMIL: int
    TANGSA: int
    TANGUT: int
    TELUGU: int
    THAANA: int
    THAI: int
    TIBETAN: int
    TIFINAGH: int
    TIRHUTA: int
    TOTO: int
    UGARITIC: int
    UNKNOWN: int
    VAI: int
    VITHKUQI: int
    WANCHO: int
    WARANG_CITI: int
    YEZIDI: int
    YI: int
    ZANABAZAR_SQUARE: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class UnicodeType(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    CLOSE_PUNCTUATION: int
    CONNECT_PUNCTUATION: int
    CONTROL: int
    CURRENCY_SYMBOL: int
    DASH_PUNCTUATION: int
    DECIMAL_NUMBER: int
    ENCLOSING_MARK: int
    FINAL_PUNCTUATION: int
    FORMAT: int
    INITIAL_PUNCTUATION: int
    LETTER_NUMBER: int
    LINE_SEPARATOR: int
    LOWERCASE_LETTER: int
    MATH_SYMBOL: int
    MODIFIER_LETTER: int
    MODIFIER_SYMBOL: int
    NON_SPACING_MARK: int
    OPEN_PUNCTUATION: int
    OTHER_LETTER: int
    OTHER_NUMBER: int
    OTHER_PUNCTUATION: int
    OTHER_SYMBOL: int
    PARAGRAPH_SEPARATOR: int
    PRIVATE_USE: int
    SPACE_SEPARATOR: int
    SPACING_MARK: int
    SURROGATE: int
    TITLECASE_LETTER: int
    UNASSIGNED: int
    UPPERCASE_LETTER: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Uri(__gi.Boxed):
    def build(self, flags, scheme, userinfo, host, port, path, query, fragment: Incomplete | None = ...) -> None: ...
    def build_with_user(self, flags, scheme, user, password, auth_params, host, port, path, query, fragment: Incomplete | None = ...) -> None: ...
    def copy(self, *args, **kwargs) -> None: ...
    def error_quark(self): ...
    def escape_bytes(self, unescaped, reserved_chars_allowed: Incomplete | None = ...): ...
    def escape_string(self, unescaped, reserved_chars_allowed, allow_utf8): ...
    def get_auth_params(self): ...
    def get_flags(self) -> None: ...
    def get_fragment(self): ...
    def get_host(self): ...
    def get_password(self): ...
    def get_path(self): ...
    def get_port(self): ...
    def get_query(self): ...
    def get_scheme(self): ...
    def get_user(self): ...
    def get_userinfo(self): ...
    def is_valid(self, uri_string, flags): ...
    def join(self, flags, scheme, userinfo, host, port, path, query, fragment: Incomplete | None = ...): ...
    def join_with_user(self, flags, scheme, user, password, auth_params, host, port, path, query, fragment: Incomplete | None = ...): ...
    def list_extract_uris(self, uri_list): ...
    def parse(self, uri_string, flags) -> None: ...
    def parse_params(self, params, length, separators, flags): ...
    def parse_relative(self, uri_ref, flags) -> None: ...
    def parse_scheme(self, uri): ...
    def peek_scheme(self, uri): ...
    def resolve_relative(self, base_uri_string, uri_ref, flags): ...
    def split(self, uri_ref, flags) -> None: ...
    def split_network(self, uri_string, flags) -> None: ...
    def split_with_user(self, uri_ref, flags) -> None: ...
    def to_string(self): ...
    def to_string_partial(self, flags): ...
    def unescape_bytes(self, escaped_string, length, illegal_characters: Incomplete | None = ...) -> None: ...
    def unescape_segment(self, escaped_string, escaped_string_end, illegal_characters: Incomplete | None = ...): ...
    def unescape_string(self, escaped_string, illegal_characters: Incomplete | None = ...): ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class UriError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BAD_AUTH_PARAMS: int
    BAD_FRAGMENT: int
    BAD_HOST: int
    BAD_PASSWORD: int
    BAD_PATH: int
    BAD_PORT: int
    BAD_QUERY: int
    BAD_SCHEME: int
    BAD_USER: int
    FAILED: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class UriFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    ENCODED: int
    ENCODED_FRAGMENT: int
    ENCODED_PATH: int
    ENCODED_QUERY: int
    HAS_AUTH_PARAMS: int
    HAS_PASSWORD: int
    NONE: int
    NON_DNS: int
    PARSE_RELAXED: int
    SCHEME_NORMALIZE: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class UriHideFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    AUTH_PARAMS: int
    FRAGMENT: int
    NONE: int
    PASSWORD: int
    QUERY: int
    USERINFO: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class UriParamsFlags(__gobject.GFlags):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    first_value_name: Incomplete
    first_value_nick: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_names: Incomplete
    value_nicks: Incomplete
    CASE_INSENSITIVE: int
    NONE: int
    PARSE_RELAXED: int
    WWW_FORM: int
    __class__: Incomplete
    __dict__: Incomplete
    __flags_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class UriParamsIter(__gi.Struct):
    def init(self, params, length, separators, flags) -> None: ...
    def next(self): ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    dummy0: Incomplete
    dummy1: Incomplete
    dummy2: Incomplete
    dummy3: Incomplete
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class UserDirectory(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    DIRECTORY_DESKTOP: int
    DIRECTORY_DOCUMENTS: int
    DIRECTORY_DOWNLOAD: int
    DIRECTORY_MUSIC: int
    DIRECTORY_PICTURES: int
    DIRECTORY_PUBLIC_SHARE: int
    DIRECTORY_TEMPLATES: int
    DIRECTORY_VIDEOS: int
    N_DIRECTORIES: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Variant(Variant):
    def byteswap(self) -> None: ...
    def check_format_string(self, format_string, copy_only): ...
    def classify(self) -> None: ...
    def compare(self, two): ...
    def dup_bytestring(self): ...
    def dup_bytestring_array(self): ...
    def dup_objv(self): ...
    def dup_string(self): ...
    def dup_strv(self): ...
    def equal(self, two): ...
    def get_boolean(self): ...
    def get_byte(self): ...
    def get_bytestring(self): ...
    def get_bytestring_array(self): ...
    def get_child_value(self, index_) -> None: ...
    def get_data(self) -> None: ...
    def get_data_as_bytes(self) -> None: ...
    def get_double(self): ...
    def get_handle(self): ...
    def get_int16(self): ...
    def get_int32(self): ...
    def get_int64(self): ...
    def get_maybe(self) -> None: ...
    def get_normal_form(self) -> None: ...
    def get_objv(self): ...
    def get_size(self): ...
    def get_string(self) -> None: ...
    def get_strv(self): ...
    def get_type(self) -> None: ...
    def get_type_string(self): ...
    def get_uint16(self): ...
    def get_uint32(self): ...
    def get_uint64(self): ...
    def get_variant(self) -> None: ...
    def hash(self): ...
    def is_container(self): ...
    def is_floating(self): ...
    def is_normal_form(self): ...
    def is_object_path(self, string): ...
    def is_of_type(self, type): ...
    def is_signature(self, string): ...
    def keys(self) -> None: ...
    def lookup_value(self, key, expected_type: Incomplete | None = ...) -> None: ...
    def new_array(self, child_type, children: Incomplete | None = ...) -> None: ...
    def new_boolean(self, value) -> None: ...
    def new_byte(self, value) -> None: ...
    def new_bytestring(self, string) -> None: ...
    def new_bytestring_array(self, strv) -> None: ...
    def new_dict_entry(self, key, value) -> None: ...
    def new_double(self, value) -> None: ...
    def new_fixed_array(self, element_type, elements, n_elements, element_size) -> None: ...
    def new_from_bytes(self, type, bytes, trusted) -> None: ...
    def new_from_data(self, type, data, trusted, notify, user_data: Incomplete | None = ...) -> None: ...
    def new_handle(self, value) -> None: ...
    def new_int16(self, value) -> None: ...
    def new_int32(self, value) -> None: ...
    def new_int64(self, value) -> None: ...
    def new_maybe(self, child_type, child: Incomplete | None = ...) -> None: ...
    def new_object_path(self, object_path) -> None: ...
    def new_objv(self, strv) -> None: ...
    def new_signature(self, signature) -> None: ...
    def new_string(self, string) -> None: ...
    def new_strv(self, strv) -> None: ...
    def new_tuple(*elements) -> None: ...
    def new_uint16(self, value) -> None: ...
    def new_uint32(self, value) -> None: ...
    def new_uint64(self, value) -> None: ...
    def new_variant(self, value) -> None: ...
    def n_children(self): ...
    def parse(self, type, text, limit, endptr: Incomplete | None = ...) -> None: ...
    def parser_get_error_quark(self): ...
    def parse_error_print_context(self, error, source_str): ...
    def parse_error_quark(self): ...
    def print_(self, type_annotate): ...
    def ref(self) -> None: ...
    def ref_sink(self) -> None: ...
    @classmethod
    def split_signature(cls, *args, **kwargs) -> None: ...
    def store(self, data) -> None: ...
    def take_ref(self) -> None: ...
    def unpack(self) -> None: ...
    def unref(self) -> None: ...
    def __bool__(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __del__(self) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, other): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getitem__(self, key) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __len__(self) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(cls, format_string, value) -> None: ...
    def __ne__(self, other): ...
    def __nonzero__(self) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class VariantBuilder(__gi.Boxed):
    def add_value(self, value) -> None: ...
    def close(self) -> None: ...
    def copy(self, *args, **kwargs) -> None: ...
    def end(self) -> None: ...
    def new(self, type) -> None: ...
    def open(self, type) -> None: ...
    def ref(self) -> None: ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class VariantClass(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ARRAY: int
    BOOLEAN: int
    BYTE: int
    DICT_ENTRY: int
    DOUBLE: int
    HANDLE: int
    INT16: int
    INT32: int
    INT64: int
    MAYBE: int
    OBJECT_PATH: int
    SIGNATURE: int
    STRING: int
    TUPLE: int
    UINT16: int
    UINT32: int
    UINT64: int
    VARIANT: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class VariantDict(__gi.Boxed):
    def clear(self) -> None: ...
    def contains(self, key): ...
    def copy(self, *args, **kwargs) -> None: ...
    def end(self) -> None: ...
    def insert_value(self, key, value) -> None: ...
    def lookup_value(self, key, expected_type: Incomplete | None = ...) -> None: ...
    def new(self, from_asv: Incomplete | None = ...) -> None: ...
    def ref(self) -> None: ...
    def remove(self, key): ...
    def unref(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class VariantParseError(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    BASIC_TYPE_EXPECTED: int
    CANNOT_INFER_TYPE: int
    DEFINITE_TYPE_EXPECTED: int
    FAILED: int
    INPUT_NOT_AT_END: int
    INVALID_CHARACTER: int
    INVALID_FORMAT_STRING: int
    INVALID_OBJECT_PATH: int
    INVALID_SIGNATURE: int
    INVALID_TYPE_STRING: int
    NO_COMMON_TYPE: int
    NUMBER_OUT_OF_RANGE: int
    NUMBER_TOO_BIG: int
    RECURSION: int
    TYPE_ERROR: int
    UNEXPECTED_TOKEN: int
    UNKNOWN_KEYWORD: int
    UNTERMINATED_STRING_CONSTANT: int
    VALUE_EXPECTED: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class VariantType(__gi.Boxed):
    def checked_(self, arg0) -> None: ...
    def copy(self) -> None: ...
    def dup_string(self): ...
    def element(self) -> None: ...
    def equal(self, type2): ...
    def first(self) -> None: ...
    def free(self) -> None: ...
    def get_string_length(self): ...
    def hash(self): ...
    def is_array(self): ...
    def is_basic(self): ...
    def is_container(self): ...
    def is_definite(self): ...
    def is_dict_entry(self): ...
    def is_maybe(self): ...
    def is_subtype_of(self, supertype): ...
    def is_tuple(self): ...
    def is_variant(self): ...
    def key(self) -> None: ...
    def new(self, type_string) -> None: ...
    def new_array(self, element) -> None: ...
    def new_dict_entry(self, key, value) -> None: ...
    def new_maybe(self, element) -> None: ...
    def new_tuple(self, items) -> None: ...
    def next(self) -> None: ...
    def n_items(self): ...
    def string_get_depth_(self, type_string): ...
    def string_is_valid(self, type_string): ...
    def string_scan(self, string, limit: Incomplete | None = ...): ...
    def value(self) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(*args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __weakref__(self, *args, **kwargs) -> None: ...
    __class__: Incomplete
    __dict__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class Win32OSType(__gobject.GEnum):
    def as_integer_ratio(self) -> None: ...
    def bit_count(self) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self, *args, **kwargs) -> None: ...
    def from_bytes(self, *args, **kwargs) -> None: ...
    def to_bytes(self, *args, **kwargs) -> None: ...
    def __abs__(self, *args, **kwargs) -> None: ...
    def __add__(self, *args, **kwargs) -> None: ...
    def __and__(self, *args, **kwargs) -> None: ...
    def __bool__(self, *args, **kwargs) -> None: ...
    def __ceil__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self, *args, **kwargs) -> None: ...
    def __divmod__(self, *args, **kwargs) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __float__(self, *args, **kwargs) -> None: ...
    def __floordiv__(self, *args, **kwargs) -> None: ...
    def __floor__(self, *args, **kwargs) -> None: ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getnewargs__(self, *args, **kwargs) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __index__(self, *args, **kwargs) -> None: ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __int__(self, *args, **kwargs) -> None: ...
    def __invert__(self, *args, **kwargs) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lshift__(self, *args, **kwargs) -> None: ...
    def __lt__(self, *args, **kwargs): ...
    def __mod__(self, *args, **kwargs) -> None: ...
    def __mul__(self, *args, **kwargs) -> None: ...
    def __neg__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __or__(self, *args, **kwargs) -> None: ...
    def __pos__(self, *args, **kwargs) -> None: ...
    def __pow__(self, *args, **kwargs) -> None: ...
    def __radd__(self, *args, **kwargs) -> None: ...
    def __rand__(self, *args, **kwargs) -> None: ...
    def __rdivmod__(self, *args, **kwargs) -> None: ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __rfloordiv__(self, *args, **kwargs) -> None: ...
    def __rlshift__(self, *args, **kwargs) -> None: ...
    def __rmod__(self, *args, **kwargs) -> None: ...
    def __rmul__(self, *args, **kwargs) -> None: ...
    def __ror__(self, *args, **kwargs) -> None: ...
    def __round__(self, *args, **kwargs) -> None: ...
    def __rpow__(self, *args, **kwargs) -> None: ...
    def __rrshift__(self, *args, **kwargs) -> None: ...
    def __rshift__(self, *args, **kwargs) -> None: ...
    def __rsub__(self, *args, **kwargs) -> None: ...
    def __rtruediv__(self, *args, **kwargs) -> None: ...
    def __rxor__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    def __sub__(self, *args, **kwargs) -> None: ...
    def __truediv__(self, *args, **kwargs) -> None: ...
    def __trunc__(self, *args, **kwargs) -> None: ...
    def __xor__(self, *args, **kwargs) -> None: ...
    denominator: Incomplete
    imag: Incomplete
    numerator: Incomplete
    real: Incomplete
    value_name: Incomplete
    value_nick: Incomplete
    ANY: int
    SERVER: int
    WORKSTATION: int
    __class__: Incomplete
    __dict__: Incomplete
    __enum_values__: Incomplete
    __gtype__: Incomplete
    __info__: Incomplete

class __class__(__gi_overrides.OverridesProxyModule):
    def __delattr__(self, *args, **kwargs) -> None: ...
    def __dir__(self) -> None: ...
    def __eq__(self, *args, **kwargs): ...
    def __format__(self, *args, **kwargs) -> None: ...
    def __getattribute__(self, *args, **kwargs) -> None: ...
    def __getattr__(self, name) -> None: ...
    def __ge__(self, *args, **kwargs): ...
    def __gt__(self, *args, **kwargs): ...
    def __hash__(self, *args, **kwargs): ...
    def __init_subclass__(self, *args, **kwargs) -> None: ...
    def __init__(self, introspection_module) -> None: ...
    def __le__(self, *args, **kwargs): ...
    def __lt__(self, *args, **kwargs): ...
    @staticmethod
    def __new__(*args, **kwargs) -> None: ...
    def __ne__(self, *args, **kwargs): ...
    def __reduce_ex__(self, *args, **kwargs) -> None: ...
    def __reduce__(self, *args, **kwargs) -> None: ...
    def __setattr__(self, *args, **kwargs) -> None: ...
    def __sizeof__(self, *args, **kwargs) -> None: ...
    def __subclasshook__(self, *args, **kwargs) -> None: ...
    __annotations__: Incomplete
    __class__: Incomplete
    __dict__: Incomplete

# Names in __all__ with no definition:
#   _child_watch_add_get_args
#   _io_add_watch_get_args
